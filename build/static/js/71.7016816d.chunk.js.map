{"version":3,"sources":["../node_modules/reactstrap/es/CustomFileInput.js","../node_modules/reactstrap/es/CustomInput.js","views/Forms/ValidationForms/ValidationForms.js"],"names":["propTypes","className","PropTypes","string","id","oneOfType","number","isRequired","label","node","valid","bool","invalid","bsSize","htmlFor","cssModule","object","onChange","func","children","array","innerRef","CustomFileInput","_React$Component","props","_this","call","this","state","files","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","input","target","getSelectedFiles","apply","arguments","setState","multiple","slice","map","file","name","join","value","indexOf","parts","split","length","render","_this$props","dataBrowse","type","attributes","_objectWithoutPropertiesLoose","customClass","mapToCssModules","classNames","validationClassNames","labelHtmlFor","React","createElement","_extends","ref","Component","inline","CustomInput","rest","wrapperClasses","validationSchema","values","Yup","shape","firstName","min","required","lastName","userName","email","password","matches","confirmPassword","oneOf","accept","test","getErrorsFromValidationError","validationError","inner","reduce","errors","error","path","initialValues","onSubmit","setSubmitting","setErrors","setTimeout","alert","JSON","stringify","ValidationForms","touchAll","formName","hasError","form","document","forms","i","focus","findFirstError","fieldName","Boolean","setTouched","validateForm","getValidationSchema","Card","CardHeader","href","rel","CardBody","validate","validateSync","abortEarly","touched","handleChange","status","dirty","handleBlur","handleSubmit","isSubmitting","isValid","handleReset","Row","Col","lg","Form","noValidate","FormGroup","Label","for","Input","placeholder","autoComplete","autoFocus","onBlur","FormFeedback","md","Button","color","disabled","onClick"],"mappings":"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","file":"static/js/71.7016816d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nvar CustomFileInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CustomFileInput.prototype;\n\n  _proto.onChange = function onChange(e) {\n    var input = e.target;\n    var onChange = this.props.onChange;\n    var files = this.getSelectedFiles(input);\n\n    if (typeof onChange === 'function') {\n      onChange.apply(void 0, arguments);\n    }\n\n    this.setState({\n      files: files\n    });\n  };\n\n  _proto.getSelectedFiles = function getSelectedFiles(input) {\n    var multiple = this.props.multiple;\n\n    if (multiple && input.files) {\n      var files = [].slice.call(input.files);\n      return files.map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf('fakepath') !== -1) {\n      var parts = input.value.split('\\\\');\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        label = _this$props.label,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        bsSize = _this$props.bsSize,\n        innerRef = _this$props.innerRef,\n        htmlFor = _this$props.htmlFor,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        dataBrowse = _this$props.dataBrowse,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\"]);\n\n    var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    var validationClassNames = mapToCssModules(classNames(invalid && 'is-invalid', valid && 'is-valid'), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n    var files = this.state.files;\n    return React.createElement(\"div\", {\n      className: customClass\n    }, React.createElement(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      className: classNames(validationClassNames, mapToCssModules('custom-file-input', cssModule)),\n      onChange: this.onChange\n    })), React.createElement(\"label\", {\n      className: mapToCssModules('custom-file-label', cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse\n    }, files || label || 'Choose file'), children);\n  };\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nimport CustomFileInput from './CustomFileInput';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nfunction CustomInput(props) {\n  var className = props.className,\n      label = props.label,\n      inline = props.inline,\n      valid = props.valid,\n      invalid = props.invalid,\n      cssModule = props.cssModule,\n      children = props.children,\n      bsSize = props.bsSize,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"]);\n\n  var type = attributes.type;\n  var customClass = mapToCssModules(classNames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && 'is-invalid', valid && 'is-valid'), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === 'select') {\n    var _type = attributes.type,\n        rest = _objectWithoutPropertiesLoose(attributes, [\"type\"]);\n\n    return React.createElement(\"select\", _extends({}, rest, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass)\n    }), children);\n  }\n\n  if (type === 'file') {\n    return React.createElement(CustomFileInput, props);\n  }\n\n  if (type !== 'checkbox' && type !== 'radio' && type !== 'switch') {\n    return React.createElement(\"input\", _extends({}, attributes, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames('custom-control', {\n    'custom-control-inline': inline\n  }), cssModule));\n  return React.createElement(\"div\", {\n    className: wrapperClasses\n  }, React.createElement(\"input\", _extends({}, attributes, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: innerRef,\n    className: classNames(validationClassNames, mapToCssModules('custom-control-input', cssModule))\n  })), React.createElement(\"label\", {\n    className: mapToCssModules('custom-control-label', cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n}\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;","import React from 'react';\nimport { Button, Card, CardHeader, CardBody, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input,  Row} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport './ValidationForms.css'\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    firstName: Yup.string()\n    .min(2, `First name has to be at least 2 characters`)\n    .required('First name is required'),\n    lastName: Yup.string()\n    .min(1, `Last name has to be at least 1 character`)\n    .required('Last name is required'),\n    userName: Yup.string()\n    .min(5, `Username has to be at least 5 characters`)\n    .required('Username is required'),\n    email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n    password: Yup.string()\n    .min(6, `Password has to be at least ${6} characters!`)\n    .matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n')\n    .required('Password is required'),\n    confirmPassword: Yup.string()\n    .oneOf([values.password], 'Passwords must match')\n    .required('Password confirmation is required'),\n    accept: Yup.bool()\n    .required('* required')\n    .test('accept', 'You have to accept our Terms and Conditions!', value => value === true),\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  userName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  accept: false\n}\n\nconst onSubmit = (values, { setSubmitting, setErrors }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2))\n    // console.log('User has been successfully saved!', values)\n    setSubmitting(false)\n  }, 2000)\n}\n\nclass ValidationForms extends React.Component {\n  constructor(props){\n    super(props)\n    this.touchAll = this.touchAll.bind(this)\n\n  }\n\n  findFirstError (formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  validateForm (errors) {\n    this.findFirstError('simpleForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n\n  touchAll(setTouched, errors) {\n    setTouched({\n        firstName: true,\n        lastName: true,\n        userName: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        accept: true\n      }\n    )\n    this.validateForm(errors)\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"icon-note\"></i><strong>Form Validation</strong>\n            <a href=\"https://coreui.io/pro/react/\" className=\"badge badge-danger ml-1\">CoreUI Pro</a>\n            <div className=\"card-header-actions\">\n              <a className=\"card-header-action\" href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">Formik</a> <cite>Build forms in React, without the tears</cite> with <a href=\"https://github.com/jquense/yup\" target=\"_blank\" rel=\"noreferrer noopener\">Yup</a> <cite>Dead simple Object schema\n            validation</cite>\n            <hr />\n            <Formik\n              initialValues={initialValues}\n              validate={validate(validationSchema)}\n              onSubmit={onSubmit}\n              render={\n                ({\n                  values,\n                  errors,\n                  touched,\n                  status,\n                  dirty,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  handleReset,\n                  setTouched\n                }) => (\n                  <Row>\n                    <Col lg=\"6\">\n                      <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                        <FormGroup>\n                          <Label for=\"firstName\">First Name</Label>\n                          <Input type=\"text\"\n                                 name=\"firstName\"\n                                 id=\"firstName\"\n                                 placeholder=\"First Name\"\n                                 autoComplete=\"given-name\"\n                                 valid={!errors.firstName}\n                                 invalid={touched.firstName && !!errors.firstName}\n                                 autoFocus={true}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.firstName} />\n                          <FormFeedback>{errors.firstName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"lastName\">Last Name</Label>\n                          <Input type=\"text\"\n                                 name=\"lastName\"\n                                 id=\"lastName\"\n                                 placeholder=\"Last Name\"\n                                 autoComplete=\"family-name\"\n                                 valid={!errors.lastName}\n                                 invalid={touched.lastName && !!errors.lastName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.lastName} />\n                          <FormFeedback>{errors.lastName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"userName\">User Name</Label>\n                          <Input type=\"text\"\n                                 name=\"userName\"\n                                 id=\"userName\"\n                                 placeholder=\"User Name\"\n                                 autoComplete=\"username\"\n                                 valid={!errors.userName}\n                                 invalid={touched.userName && !!errors.userName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.userName} />\n                          <FormFeedback>{errors.userName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"email\">Email</Label>\n                          <Input type=\"email\"\n                                 name=\"email\"\n                                 id=\"email\"\n                                 placeholder=\"Email\"\n                                 autoComplete=\"email\"\n                                 valid={!errors.email}\n                                 invalid={touched.email && !!errors.email}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.email} />\n                          <FormFeedback>{errors.email}</FormFeedback>\n                        </FormGroup>\n                        <Row>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"password\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"password\"\n                                     id=\"password\"\n                                     placeholder=\"Password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.password}\n                                     invalid={touched.password && !!errors.password}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.password} />\n                              {/*<FormFeedback>Required password containing at least: number, uppercase and lowercase letter, 8 characters</FormFeedback>*/}\n                              <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"confirmPassword\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"confirmPassword\"\n                                     id=\"confirmPassword\"\n                                     placeholder=\"Confirm password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.confirmPassword}\n                                     invalid={touched.confirmPassword && !!errors.confirmPassword}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.confirmPassword} />\n                              <FormFeedback>{errors.confirmPassword}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id=\"accept\"\n                            label=\"I accept the terms of use\"\n                            required\n                            valid={!errors.accept}\n                            invalid={touched.accept && !!errors.accept}\n                            onChange={handleChange}\n                            onBlur={handleBlur} >\n                            <FormFeedback>{errors.accept}</FormFeedback>\n                          </CustomInput>\n                        </FormGroup>\n                        <FormGroup>\n                          <Button type=\"submit\" color=\"primary\" className=\"mr-1\" disabled={isSubmitting || !isValid}>{isSubmitting ? 'Wait...' : 'Submit'}</Button>\n                          <Button type=\"button\" color=\"success\" className=\"mr-1\" onClick={() => this.touchAll(setTouched, errors)}  disabled={isValid}>Validate</Button>\n                          <Button type=\"reset\" color=\"danger\" className=\"mr-1\" onClick={handleReset}>Reset</Button>\n                        </FormGroup>\n                      </Form>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Card className={isValid ? 'bg-info' : 'bg-secondary'}>\n                        <CardBody>\n                          <pre>values: {JSON.stringify(values, null, 2)}</pre>\n                          <pre>errors: {JSON.stringify(errors, null, 2)}</pre>\n                          <pre>touched: {JSON.stringify(touched, null, 2)}</pre>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                )} />\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default ValidationForms;\n"],"sourceRoot":""}