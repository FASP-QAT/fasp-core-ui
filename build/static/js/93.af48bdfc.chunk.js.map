{"version":3,"sources":["api/RegionService.js","views/region/ListRegionComponent.js"],"names":["RegionService","json","axios","post","API_URL","get","put","RegionListComponent","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","this","editRegion","bind","state","regionList","message","addRegion","region","history","push","pathname","AuthenticationService","setupAxiosInterceptors","getRegionList","then","response","console","log","setState","data","catch","error","cell","label_en","country","label","className","href","title","onClick","version","hover","pagination","search","headerStyle","background","isKey","dataField","hidden","filterFormatted","dataSort","dataFormat","showRegionLabel","dataAlign","showRealmCountryLabel","showStatus","Component"],"mappings":"4NAGMA,E,kGAEQC,GACN,OAAOC,IAAMC,KAAN,UAAcC,IAAd,gBAAqCH,EAAM,M,sCAKlD,OAAOC,IAAMG,IAAN,UAAaD,IAAb,gBAAoC,M,mCAIlCH,GACT,OAAOC,IAAMI,IAAN,UAAaF,IAAb,gBAAoCH,EAAM,Q,KAK1C,QAAID,G,iLCXbO,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,QAAU,CACXC,eAAe,EACfC,iBAAiB,EACjBC,eAAgB,EAChBC,yBAAyB,EACzBC,aAAa,EACbC,mBAAmB,EACnBC,kBAAkB,EAClBC,WAAY,SAAUC,GAClBC,KAAKC,WAAWF,IAClBG,KAFU,iBAKhB,EAAKC,MAAQ,CACTC,WAAY,GACZC,QAAS,IAEb,EAAKJ,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBApBF,E,wEAsBRK,GACPP,KAAKX,MAAMmB,QAAQC,KAAK,CACpBC,SAAU,qBACVP,MAAO,CAAEI,c,gCAGPA,GACNP,KAAKX,MAAMmB,QAAQC,KAAK,CACpBC,SAAU,wB,0CAIG,IAAD,OAChBC,IAAsBC,yBACtB/B,IAAcgC,gBACTC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVd,WAAYW,EAASI,KAAKA,UAE/BC,OACC,SAAAC,GAGI,OAFAL,QAAQC,IAAI,gDACZD,QAAQC,IAAII,GACJA,EAAMhB,SACV,IAAK,gBACD,EAAKa,SAAS,CACVb,QAASgB,EAAMhB,UAEnB,MACJ,QACI,EAAKa,SAAS,CACVb,QAASgB,EAAMN,SAASI,KAAKd,gB,sCAQzCiB,EAAMvB,GAClB,OAAOuB,EAAKC,W,4CAGMD,EAAMvB,GACxB,OAAOuB,EAAKE,QAAQC,MAAMF,W,iCAGnBD,EAAMvB,GACb,OAAIuB,EACO,SAEA,a,+BAIX,OACI,yBAAKI,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,uBAAGA,UAAU,cAAgB,+CAA6B,IAC1D,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sBACX,uBAAGC,KAAK,qBAAqBC,MAAM,aAAaC,QAAS7B,KAAKM,WAAW,uBAAGoB,UAAU,0BAIlG,kBAAC,IAAD,KACI,kBAAC,iBAAD,CAAgBP,KAAMnB,KAAKG,MAAMC,WAAY0B,QAAQ,IAAIC,OAAK,EAACC,YAAU,EAACC,QAAM,EAACC,YAAc,CAAEC,WAAY,WAAe7C,QAASU,KAAKV,SACtI,kBAAC,oBAAD,CAAmB8C,OAAK,EAACC,UAAU,WAAWC,QAAM,GAApD,MACA,kBAAC,oBAAD,CAAmBC,iBAAe,EAACF,UAAU,QAAQG,UAAQ,EAACC,WAAYzC,KAAK0C,gBAAiBC,UAAU,UAA1G,UACA,kBAAC,oBAAD,CAAmBJ,iBAAe,EAACF,UAAU,eAAeI,WAAYzC,KAAK4C,sBAAuBD,UAAU,SAASH,UAAQ,GAA/H,WACA,kBAAC,oBAAD,CAAmBD,iBAAe,EAACF,UAAU,SAASI,WAAYzC,KAAK6C,WAAYF,UAAU,SAASH,UAAQ,GAA9G,kB,GA/FMM,aAuGnB1D","file":"static/js/93.af48bdfc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass RegionService {\n\n    addRegion(json) {\n        return axios.post(`${API_URL}/api/region/`, json, {}\n        );\n    }\n\n    getRegionList() {\n        return axios.get(`${API_URL}/api/region/`, {\n        });\n    }\n    \n    updateRegion(json) {\n        return axios.put(`${API_URL}/api/region/`, json, {}\n        );\n    }\n\n}\nexport default new RegionService();","\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\n\n\nimport RegionService from \"../../api/RegionService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nclass RegionListComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: false,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                this.editRegion(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            regionList: [],\n            message: ''\n        }\n        this.editRegion = this.editRegion.bind(this);\n        this.addRegion = this.addRegion.bind(this);\n    }\n    editRegion(region) {\n        this.props.history.push({\n            pathname: \"/region/editRegion\",\n            state: { region }\n        });\n    }\n    addRegion(region) {\n        this.props.history.push({\n            pathname: \"/region/addRegion\"\n        });\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RegionService.getRegionList()\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    regionList: response.data.data\n                })\n            }).catch(\n                error => {\n                    console.log(\"Could not set the Region list error occurred\");\n                    console.log(error);\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    showRegionLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    showRealmCountryLabel(cell, row) {\n        return cell.country.label.label_en;\n    }\n\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i><strong>Region List</strong>{' '}\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Region\" onClick={this.addRegion}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.regionList} version=\"4\" hover pagination search headerStyle={ { background: '#D1EEEE' } }  options={this.options}>\n                            <TableHeaderColumn isKey dataField='regionId' hidden>ID</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"label\" dataSort dataFormat={this.showRegionLabel} dataAlign=\"center\">Region</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"realmCountry\" dataFormat={this.showRealmCountryLabel} dataAlign=\"center\" dataSort>Country</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"active\" dataFormat={this.showStatus} dataAlign=\"center\" dataSort>Status</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default RegionListComponent;"],"sourceRoot":""}