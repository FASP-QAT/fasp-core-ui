{"version":3,"sources":["api/FundingSourceService.js","views/fundingSource/ListFundingSourceComponent.js"],"names":["FundingSourceService","json","axios","post","API_URL","get","put","FundingSourceListComponent","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","this","editFundingSource","bind","state","fundingSourceList","message","addFundingSource","fundingSource","history","push","pathname","AuthenticationService","setupAxiosInterceptors","getFundingSourceListAll","then","response","setState","data","catch","error","cell","label_en","label","className","href","title","onClick","version","striped","hover","pagination","search","isKey","dataField","hidden","filterFormatted","dataSort","dataFormat","showFundingSourceLabel","dataAlign","showRealmLabel","showStatus","Component"],"mappings":"4NAGMA,E,yGAEeC,GAEb,OAAOC,IAAMC,KAAN,UAAcC,IAAd,uBAA4CH,EAAM,M,gDAKzD,OAAOC,IAAMG,IAAN,UAAaD,IAAb,uBAA2C,M,0CAIlCH,GAChB,OAAOC,IAAMI,IAAN,UAAaF,IAAb,uBAA2CH,EAAM,Q,KAKjD,QAAID,G,iLCZbO,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,QAAU,CACXC,eAAe,EACfC,iBAAiB,EACjBC,eAAgB,EAChBC,yBAAyB,EACzBC,aAAa,EACbC,mBAAmB,EACnBC,kBAAkB,EAClBC,WAAY,SAAUC,GAClBC,KAAKC,kBAAkBF,IACzBG,KAFU,iBAKhB,EAAKC,MAAQ,CACTC,kBAAmB,GACnBC,QAAS,IAEb,EAAKJ,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBApBT,E,+EAsBDK,GACdP,KAAKX,MAAMmB,QAAQC,KAAK,CACpBC,SAAU,mCACVP,MAAO,CAAEI,qB,uCAIAA,GACbP,KAAKX,MAAMmB,QAAQC,KAAK,CACpBC,SAAU,sC,0CAIG,IAAD,OAChBC,IAAsBC,yBACtB/B,IAAqBgC,0BAChBC,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVZ,kBAAmBW,EAASE,KAAKA,UAEtCC,OACC,SAAAC,GACI,OAAQA,EAAMd,SACV,IAAK,gBACD,EAAKW,SAAS,CACVX,QAASc,EAAMd,UAEnB,MACJ,QACI,EAAKW,SAAS,CACVX,QAASc,EAAMJ,SAASE,KAAKZ,gB,6CASlCe,EAAMrB,GACzB,OAAOqB,EAAKC,W,qCAGDD,EAAMrB,GACjB,OAAOqB,EAAKE,MAAMD,W,iCAGXD,EAAMrB,GACb,OAAIqB,EACO,SAEA,a,+BAIX,OACI,yBAAKG,UAAU,YACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,uBAAGA,UAAU,cAAgB,uDAAqC,IAClE,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sBACX,uBAAGC,KAAK,qBAAqBC,MAAM,qBAAqBC,QAAS1B,KAAKM,kBAAkB,uBAAGiB,UAAU,0BAIjH,kBAAC,IAAD,KACI,kBAAC,iBAAD,CAAgBN,KAAMjB,KAAKG,MAAMC,kBAAmBuB,QAAQ,IAAIC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACC,QAAM,EAACzC,QAASU,KAAKV,SAC1G,kBAAC,oBAAD,CAAmB0C,OAAK,EAACC,UAAU,kBAAkBC,QAAM,GAA3D,MACA,kBAAC,oBAAD,CAAmBC,iBAAe,EAACF,UAAU,QAAQG,UAAQ,EAACC,WAAYrC,KAAKsC,uBAAwBC,UAAU,UAAjH,kBACA,kBAAC,oBAAD,CAAmBJ,iBAAe,EAACF,UAAU,QAAQI,WAAYrC,KAAKwC,eAAgBD,UAAU,SAASH,UAAQ,GAAjH,SACA,kBAAC,oBAAD,CAAmBD,iBAAe,EAACF,UAAU,SAASI,WAAYrC,KAAKyC,WAAYF,UAAU,SAASH,UAAQ,GAA9G,kB,GA9FaM,aAsG1BtD","file":"static/js/91.4656387d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { API_URL } from '../Constants.js';\n\nclass FundingSourceService {\n\n    addFundingSource(json) {\n        //console.log(json);\n        return axios.post(`${API_URL}/api/fundingSource/`, json, {}\n        );\n    }\n\n    getFundingSourceListAll() {\n        return axios.get(`${API_URL}/api/fundingSource/`, {\n        });\n    }\n\n    updateFundingSource(json) {\n        return axios.put(`${API_URL}/api/fundingSource/`, json, {\n        });\n    }\n}\n\nexport default new FundingSourceService();","\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\n\n\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nclass FundingSourceListComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: false,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                this.editFundingSource(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            fundingSourceList: [],\n            message: ''\n        }\n        this.editFundingSource = this.editFundingSource.bind(this);\n        this.addFundingSource = this.addFundingSource.bind(this);\n    }\n    editFundingSource(fundingSource) {\n        this.props.history.push({\n            pathname: \"/fundingSource/editFundingSource\",\n            state: { fundingSource }\n        });\n    }\n\n    addFundingSource(fundingSource) {\n        this.props.history.push({\n            pathname: \"/fundingSource/addFundingSource\"\n        });\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        FundingSourceService.getFundingSourceListAll()\n            .then(response => {\n                this.setState({\n                    fundingSourceList: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    showFundingSourceLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    showRealmLabel(cell, row) {\n        return cell.label.label_en;\n    }\n\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i><strong>Funding Source List</strong>{' '}\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Funding source\" onClick={this.addFundingSource}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.fundingSourceList} version=\"4\" striped hover pagination search options={this.options}>\n                            <TableHeaderColumn isKey dataField='fundingSourceId' hidden>ID</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"label\" dataSort dataFormat={this.showFundingSourceLabel} dataAlign=\"center\">Funding Source</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"realm\" dataFormat={this.showRealmLabel} dataAlign=\"center\" dataSort>Realm</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"active\" dataFormat={this.showStatus} dataAlign=\"center\" dataSort>Status</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default FundingSourceListComponent;"],"sourceRoot":""}