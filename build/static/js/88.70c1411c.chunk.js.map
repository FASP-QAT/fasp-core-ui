{"version":3,"sources":["views/ProductCategory/AddProductCategory.js"],"names":["AddProductCategory","props","componentDidMount","this","el","jexcel","ReactDOM","findDOMNode","children","options","addRow","insertRow","getUpdatedData","console","log","getData","type","value","onClick","increaseIndent","decreaseIndent","moveRowUp","React","Component","data","minDimensions","colHeaders","colWidths","colAlignments","style","A1","B1","C1","D1","contextMenu","obj","x","y","e","items","push","title","onclick","moveRow","getSelectedRows","rowIndex","undefined","parseInt","innerText","allowInsertColumn","text","insertANewColumnBefore","insertColumn","insertANewColumnAfter","allowDeleteColumn","deleteSelectedColumns","deleteColumn","getSelectedColumns","length","allowRenameColumn","renameThisColumn","setHeader","columnSorting","orderAscending","orderBy","orderDescending","allowInsertRow","insertANewRowBefore","insertANewRowAfter","allowDeleteRow","deleteSelectedRows","deleteRow","allowComments","records","getAttribute","editComments","addComments","setComments","prompt","comments","clearComments","allowExport","saveAs","shortcut","download","about","alert","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/88.70c1411c.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport jexcel from 'jexcel';\nimport \"./style.css\";\nimport \"../../../node_modules/jexcel/dist/jexcel.css\";\n\nexport default class AddProductCategory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.options = props.options;\n    }\n\n    componentDidMount = function () {\n        this.el = jexcel(ReactDOM.findDOMNode(this).children[0], this.options);\n    };\n\n    addRow = function () {\n        this.el.insertRow();\n    };\n    getUpdatedData = function () {\n        console.log(this.el.getData());\n    };\n    render() {\n        return (\n            <div>\n                <div />\n                <br />\n                <input\n                    type=\"button\"\n                    value=\"Add new row\"\n                    onClick={() => this.addRow()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Get Updated Data\"\n                    onClick={() => this.getUpdatedData()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Increase Indent\"\n                    onClick={() => this.increaseIndent()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Decrease Indent\"\n                    onClick={() => this.decreaseIndent()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Move Row Up\"\n                    onClick={() => this.moveRowUp()}\n                />\n            </div>\n        );\n    }\n}\n\nvar options = {\n    data: [\n        [1, 'Cheese', 1, '0'],\n        [2, 'Apples', 1, '0.1'],\n        [3, 'Carrots', 1, '1']\n\n    ],\n    minDimensions: [3, 10],\n    colHeaders: ['Product Category Id', 'Product Category Name', 'Indent/Level', 'Sort Level'],\n    colWidths: [200, 300, 200, 200],\n    colAlignments:['left','left','left','left'],\n    style:[\n        { A1: 'background-color: orange; ' },\n        { B1: 'background-color: orange; ' },\n        { C1: 'background-color: orange; ' },\n        { D1: 'background-color: orange; ' },\n    ],\n    contextMenu: function (obj, x, y, e) {\n        var items = [];\n\n\n        // Move Row Up By one Index\n\n        items.push({\n            title: \"Move Selected Row Up\",\n            onclick: function () {\n                obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) - 1);\n            }\n        });\n\n        // Move Row Down By one Index\n        items.push({\n            title: \"Move Selected Row Down\",\n            onclick: function () {\n                obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) + 1);\n            }\n        });\n\n        //Add Indent To Selected Cell Data\n\n        items.push({\n            title: \"Increse Indent\",\n            onclick: function () {\n                console.log(obj);\n                console.log(obj.getSelectedRows().innerText);\n            }\n        });\n        // -------------------------------------\n\n        if (y == null) {\n            // Insert a new column\n            if (obj.options.allowInsertColumn == true) {\n                items.push({\n                    title: obj.options.text.insertANewColumnBefore,\n                    onclick: function () {\n                        obj.insertColumn(1, parseInt(x), 1);\n                    }\n                });\n            }\n\n            if (obj.options.allowInsertColumn == true) {\n                items.push({\n                    title: obj.options.text.insertANewColumnAfter,\n                    onclick: function () {\n                        obj.insertColumn(1, parseInt(x), 0);\n                    }\n                });\n            }\n\n            // Delete a column\n            if (obj.options.allowDeleteColumn == true) {\n                items.push({\n                    title: obj.options.text.deleteSelectedColumns,\n                    onclick: function () {\n                        obj.deleteColumn(obj.getSelectedColumns().length ? undefined : parseInt(x));\n                    }\n                });\n            }\n\n\n\n            // Rename column\n            if (obj.options.allowRenameColumn == true) {\n                items.push({\n                    title: obj.options.text.renameThisColumn,\n                    onclick: function () {\n                        obj.setHeader(x);\n                    }\n                });\n            }\n\n            // Sorting\n            if (obj.options.columnSorting == true) {\n                // Line\n                items.push({ type: 'line' });\n\n                items.push({\n                    title: obj.options.text.orderAscending,\n                    onclick: function () {\n                        obj.orderBy(x, 0);\n                    }\n                });\n                items.push({\n                    title: obj.options.text.orderDescending,\n                    onclick: function () {\n                        obj.orderBy(x, 1);\n                    }\n                });\n            }\n        } else {\n            // Insert new row\n            if (obj.options.allowInsertRow == true) {\n                items.push({\n                    title: obj.options.text.insertANewRowBefore,\n                    onclick: function () {\n                        obj.insertRow(1, parseInt(y), 1);\n                    }\n                });\n\n                items.push({\n                    title: obj.options.text.insertANewRowAfter,\n                    onclick: function () {\n                        obj.insertRow(1, parseInt(y));\n                    }\n                });\n            }\n\n            if (obj.options.allowDeleteRow == true) {\n                items.push({\n                    title: obj.options.text.deleteSelectedRows,\n                    onclick: function () {\n                        obj.deleteRow(obj.getSelectedRows().length ? undefined : parseInt(y));\n                    }\n                });\n            }\n\n            if (x) {\n                if (obj.options.allowComments == true) {\n                    items.push({ type: 'line' });\n\n                    var title = obj.records[y][x].getAttribute('title') || '';\n\n                    items.push({\n                        title: title ? obj.options.text.editComments : obj.options.text.addComments,\n                        onclick: function () {\n                            obj.setComments([x, y], prompt(obj.options.text.comments, title));\n                        }\n                    });\n\n                    if (title) {\n                        items.push({\n                            title: obj.options.text.clearComments,\n                            onclick: function () {\n                                obj.setComments([x, y], '');\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n        // Line\n        items.push({ type: 'line' });\n\n        // Save\n        if (obj.options.allowExport) {\n            items.push({\n                title: obj.options.text.saveAs,\n                shortcut: 'Ctrl + S',\n                onclick: function () {\n                    obj.download();\n                }\n            });\n        }\n\n        // About\n        if (obj.options.about) {\n            items.push({\n                title: obj.options.text.about,\n                onclick: function () {\n                    alert(obj.options.about);\n                }\n            });\n        }\n        return items;\n    }\n\n};\n\n\n// document.getElementById(\"root\").jexcel({\n//     data:options.data,\n//     colHeaders: [ 'Product', 'Quantity', 'Price', 'Total' ],\n//     colWidths: [ 300, 100, 100, 100 ],\n//     columns: [\n//         { type: 'autocomplete', source:[ 'Apples','Bananas','Carrots','Oranges','Cheese','Pears' ] },\n//         { type: 'number' },\n//         { type: 'number' },\n//         { type: 'number' },\n//     ]\n// });\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<AddProductCategory options={options} />, rootElement);\n"],"sourceRoot":""}