{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Country/CountryListComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\nimport i18n from '../../i18n';\n\nvar CountryListComponent = /*#__PURE__*/function (_Component) {\n  _inherits(CountryListComponent, _Component);\n\n  function CountryListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, CountryListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CountryListComponent).call(this, props));\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        // console.log(\"row--------------\", row);\n        this.editCountry(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      countryList: []\n    };\n    _this.addNewCountry = _this.addNewCountry.bind(_assertThisInitialized(_this));\n    _this.editCountry = _this.editCountry.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CountryListComponent, [{\n    key: \"addNewCountry\",\n    value: function addNewCountry() {\n      if (navigator.onLine) {\n        this.props.history.push(\"/country/addCountry\");\n      } else {\n        alert(\"You must be Online.\");\n      }\n    }\n  }, {\n    key: \"editCountry\",\n    value: function editCountry(country) {\n      console.log(country);\n      this.props.history.push({\n        pathname: \"/country/editCountry\",\n        state: {\n          country: country\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      CountryService.getCountryListAll().then(function (response) {\n        _this2.setState({\n          countryList: response.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"showCountryLabel\",\n    value: function showCountryLabel(cell, row) {\n      return cell.label_en;\n    } // render() {\n    //     return (\n    //         <div className=\"page-content-wrap\">\n    //             <div className=\"row\">\n    //                 <ul class=\"breadcrumb text-left\"><li><a href=\"#\">Home</a></li><li><a href=\"#\">Admin</a></li><li><a href=\"#\">Country</a></li><li><a href=\"#\">Country list</a></li></ul>\n    //                 <div className=\"help-block\">{this.props.match.params.message}</div>\n    //                 <div className=\"col-md-12\">\n    //                     <div className=\" mt-2 \">\n    //                         <div className=\"panel panel-default\">\n    //                             <div className=\"panel-heading\">\n    //                                 <h3 className=\"panel-title\">Country List</h3>\n    //                                 <button className=\"btn btn-info pull-right\" onClick={this.addNewCountry}><i class=\"fa fa-plus\" ></i></button>\n    //                             </div>\n    //                             <div className=\"panel-body text-left\">\n    //                                 <div className=\"col-md-12\">\n    //                                     <div className=\"table-responsive\">\n    //                                         <table className=\"table datatable\">\n    //                                             <thead>\n    //                                                 <tr>\n    //                                                     <th>Country name (English)</th>\n    //                                                     <th>Country name (French)</th>\n    //                                                     <th>Country name (Spanish)</th>\n    //                                                     <th>Country name (portuguese)</th>\n    //                                                     <th>Active</th>\n    //                                                 </tr>\n    //                                             </thead>\n    //                                             <tbody>\n    //                                                 {\n    //                                                     this.state.countryList.map(country =>\n    //                                                         <tr key={country.countryId} onClick={() => this.editCountry(country)}>\n    //                                                             <td>{country.label.label_en}</td>\n    //                                                             <td>{country.label.label_fr}</td>\n    //                                                             <td>{country.label.label_sp}</td>\n    //                                                             <td>{country.label.label_pr}</td>\n    //                                                             <td>\n    //                                                                 {country.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}\n    //                                                             </td>\n    //                                                         </tr>\n    //                                                     )\n    //                                                 }\n    //                                             </tbody>\n    //                                         </table>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     );\n    // }\n\n  }, {\n    key: \"showStatus\",\n    value: function showStatus(cell, row) {\n      if (cell) {\n        return \"Active\";\n      } else {\n        return \"Disabled\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Country List\"), ' ', React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Realm Country\",\n        onClick: this.addNewCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.countryList,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showCountryLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, i18n.t('static.country.country')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"countryCode\",\n        dataSort: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, i18n.t('static.country.countrycode')), React.createElement(TableHeaderColumn, {\n        dataField: \"active\",\n        dataSort: true,\n        dataFormat: this.showStatus,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, i18n.t('static.common.status'))))));\n    }\n  }]);\n\n  return CountryListComponent;\n}(Component);\n\nexport { CountryListComponent as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Country/CountryListComponent.jsx"],"names":["React","Component","AuthenticationService","CountryService","NavLink","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","data","i18n","CountryListComponent","props","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editCountry","bind","state","countryList","addNewCountry","navigator","onLine","history","push","alert","country","console","log","pathname","setupAxiosInterceptors","getCountryListAll","then","response","setState","catch","error","message","cell","label_en","showCountryLabel","t","showStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport CountryService from '../../api/CountryService.js';\nimport { NavLink } from 'react-router-dom'\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\nimport i18n from '../../i18n';\nexport default class CountryListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.table = data.rows;\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: true,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                // console.log(\"row--------------\", row);\n                this.editCountry(row);\n            }.bind(this)\n\n        }\n\n        this.state = {\n            countryList: []\n        }\n        this.addNewCountry = this.addNewCountry.bind(this);\n        this.editCountry = this.editCountry.bind(this);\n    }\n\n    addNewCountry() {\n        if (navigator.onLine) {\n            this.props.history.push(`/country/addCountry`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    editCountry(country) {\n        console.log(country);\n        this.props.history.push({\n            pathname: \"/country/editCountry\",\n            state: { country: country }\n        });\n\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        CountryService.getCountryListAll().then(response => {\n            this.setState({\n                countryList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n\n    showCountryLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    // render() {\n\n    //     return (\n\n    //         <div className=\"page-content-wrap\">\n\n\n    //             <div className=\"row\">\n\n    //                 <ul class=\"breadcrumb text-left\"><li><a href=\"#\">Home</a></li><li><a href=\"#\">Admin</a></li><li><a href=\"#\">Country</a></li><li><a href=\"#\">Country list</a></li></ul>\n    //                 <div className=\"help-block\">{this.props.match.params.message}</div>\n\n    //                 <div className=\"col-md-12\">\n\n    //                     <div className=\" mt-2 \">\n\n\n    //                         <div className=\"panel panel-default\">\n\n\n    //                             <div className=\"panel-heading\">\n    //                                 <h3 className=\"panel-title\">Country List</h3>\n    //                                 <button className=\"btn btn-info pull-right\" onClick={this.addNewCountry}><i class=\"fa fa-plus\" ></i></button>\n    //                             </div>\n    //                             <div className=\"panel-body text-left\">\n    //                                 <div className=\"col-md-12\">\n\n\n\n    //                                     <div className=\"table-responsive\">\n    //                                         <table className=\"table datatable\">\n    //                                             <thead>\n    //                                                 <tr>\n    //                                                     <th>Country name (English)</th>\n    //                                                     <th>Country name (French)</th>\n    //                                                     <th>Country name (Spanish)</th>\n    //                                                     <th>Country name (portuguese)</th>\n    //                                                     <th>Active</th>\n\n    //                                                 </tr>\n    //                                             </thead>\n    //                                             <tbody>\n    //                                                 {\n    //                                                     this.state.countryList.map(country =>\n\n    //                                                         <tr key={country.countryId} onClick={() => this.editCountry(country)}>\n    //                                                             <td>{country.label.label_en}</td>\n    //                                                             <td>{country.label.label_fr}</td>\n    //                                                             <td>{country.label.label_sp}</td>\n    //                                                             <td>{country.label.label_pr}</td>\n    //                                                             <td>\n    //                                                                 {country.active.toString() == \"true\" ? \"Active\" : \"Disabled\"}\n    //                                                             </td>\n    //                                                         </tr>\n    //                                                     )\n\n    //                                                 }\n\n    //                                             </tbody>\n    //                                         </table>\n    //                                     </div>\n\n    //                                 </div>\n\n    //                             </div>\n\n\n\n    //                         </div>\n\n\n    //                     </div>\n\n\n    //                 </div>\n\n\n    //             </div>\n\n\n    //         </div>\n\n\n    //     );\n    // }\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        {/* <i className=\"icon-menu\"></i>{i18n.t('static.country.countrylist')} */}\n                         <i className=\"icon-menu\"></i><strong>Country List</strong>{' '}\n\n                         <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Realm Country\" onClick={this.addNewCountry}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                       \n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.countryList} version=\"4\"  hover pagination search  options={this.options}>\n                            <TableHeaderColumn isKey filterFormatted dataField=\"label\" dataSort dataFormat={this.showCountryLabel} dataAlign=\"center\">{i18n.t('static.country.country')}</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"countryCode\" dataSort dataAlign=\"center\">{i18n.t('static.country.countrycode')}</TableHeaderColumn>\n                            {/* <TableHeaderColumn filterFormatted dataField=\"language\" dataSort dataFormat={this.showLanguage} dataAlign=\"center\">Language</TableHeaderColumn> */}\n                            {/* <TableHeaderColumn filterFormatted dataField=\"currencyId\" dataSort dataAlign=\"center\">Currency</TableHeaderColumn> */}\n                            <TableHeaderColumn dataField=\"active\" dataSort dataFormat={this.showStatus}  dataAlign=\"center\">{i18n.t('static.common.status')}</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}