{"ast":null,"code":"var $ = require('../internals/export');\n\nvar log1p = require('../internals/math-log1p');\n\nvar nativeAcosh = Math.acosh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\nvar LN2 = Math.LN2;\nvar FORCED = !nativeAcosh // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n|| Math.floor(nativeAcosh(Number.MAX_VALUE)) != 710 // Tor Browser bug: Math.acosh(Infinity) -> NaN\n|| nativeAcosh(Infinity) != Infinity; // `Math.acosh` method\n// https://tc39.github.io/ecma262/#sec-math.acosh\n\n$({\n  target: 'Math',\n  stat: true,\n  forced: FORCED\n}, {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156 ? log(x) + LN2 : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});","map":{"version":3,"sources":["/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/core-js/modules/es.math.acosh.js"],"names":["$","require","log1p","nativeAcosh","Math","acosh","log","sqrt","LN2","FORCED","floor","Number","MAX_VALUE","Infinity","target","stat","forced","x","NaN"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,yBAAD,CAAnB;;AAEA,IAAIE,WAAW,GAAGC,IAAI,CAACC,KAAvB;AACA,IAAIC,GAAG,GAAGF,IAAI,CAACE,GAAf;AACA,IAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB;AACA,IAAIC,GAAG,GAAGJ,IAAI,CAACI,GAAf;AAEA,IAAIC,MAAM,GAAG,CAACN,WAAD,CACX;AADW,GAERC,IAAI,CAACM,KAAL,CAAWP,WAAW,CAACQ,MAAM,CAACC,SAAR,CAAtB,KAA6C,GAFrC,CAGX;AAHW,GAIRT,WAAW,CAACU,QAAD,CAAX,IAAyBA,QAJ9B,C,CAMA;AACA;;AACAb,CAAC,CAAC;AAAEc,EAAAA,MAAM,EAAE,MAAV;AAAkBC,EAAAA,IAAI,EAAE,IAAxB;AAA8BC,EAAAA,MAAM,EAAEP;AAAtC,CAAD,EAAiD;AAChDJ,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeY,CAAf,EAAkB;AACvB,WAAO,CAACA,CAAC,GAAG,CAACA,CAAN,IAAW,CAAX,GAAeC,GAAf,GAAqBD,CAAC,GAAG,iBAAJ,GACxBX,GAAG,CAACW,CAAD,CAAH,GAAST,GADe,GAExBN,KAAK,CAACe,CAAC,GAAG,CAAJ,GAAQV,IAAI,CAACU,CAAC,GAAG,CAAL,CAAJ,GAAcV,IAAI,CAACU,CAAC,GAAG,CAAL,CAA3B,CAFT;AAGD;AAL+C,CAAjD,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar log1p = require('../internals/math-log1p');\n\nvar nativeAcosh = Math.acosh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\nvar LN2 = Math.LN2;\n\nvar FORCED = !nativeAcosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  || Math.floor(nativeAcosh(Number.MAX_VALUE)) != 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  || nativeAcosh(Infinity) != Infinity;\n\n// `Math.acosh` method\n// https://tc39.github.io/ecma262/#sec-math.acosh\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? log(x) + LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n"]},"metadata":{},"sourceType":"script"}