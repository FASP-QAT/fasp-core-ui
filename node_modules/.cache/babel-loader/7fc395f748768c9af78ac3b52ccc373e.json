{"ast":null,"code":"var $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar microtask = require('../internals/microtask');\n\nvar classof = require('../internals/classof-raw');\n\nvar process = global.process;\nvar isNode = classof(process) == 'process'; // `queueMicrotask` method\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask\n\n$({\n  global: true,\n  enumerable: true,\n  noTargetGet: true\n}, {\n  queueMicrotask: function queueMicrotask(fn) {\n    var domain = isNode && process.domain;\n    microtask(domain ? domain.bind(fn) : fn);\n  }\n});","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/core-js/modules/web.queue-microtask.js"],"names":["$","require","global","microtask","classof","process","isNode","enumerable","noTargetGet","queueMicrotask","fn","domain","bind"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAAD,CAArB;;AAEA,IAAII,OAAO,GAAGH,MAAM,CAACG,OAArB;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACC,OAAD,CAAP,IAAoB,SAAjC,C,CAEA;AACA;;AACAL,CAAC,CAAC;AAAEE,EAAAA,MAAM,EAAE,IAAV;AAAgBK,EAAAA,UAAU,EAAE,IAA5B;AAAkCC,EAAAA,WAAW,EAAE;AAA/C,CAAD,EAAwD;AACvDC,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,EAAxB,EAA4B;AAC1C,QAAIC,MAAM,GAAGL,MAAM,IAAID,OAAO,CAACM,MAA/B;AACAR,IAAAA,SAAS,CAACQ,MAAM,GAAGA,MAAM,CAACC,IAAP,CAAYF,EAAZ,CAAH,GAAqBA,EAA5B,CAAT;AACD;AAJsD,CAAxD,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar global = require('../internals/global');\nvar microtask = require('../internals/microtask');\nvar classof = require('../internals/classof-raw');\n\nvar process = global.process;\nvar isNode = classof(process) == 'process';\n\n// `queueMicrotask` method\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask\n$({ global: true, enumerable: true, noTargetGet: true }, {\n  queueMicrotask: function queueMicrotask(fn) {\n    var domain = isNode && process.domain;\n    microtask(domain ? domain.bind(fn) : fn);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}