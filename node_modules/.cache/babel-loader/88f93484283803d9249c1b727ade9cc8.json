{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar inspect = require('object-inspect');\n\nvar IsCallable = require('./IsCallable'); // https://www.ecma-international.org/ecma-262/6.0/#sec-call\n\n\nmodule.exports = function Call(F, V) {\n  var args = arguments.length > 2 ? arguments[2] : [];\n\n  if (!IsCallable(F)) {\n    throw new $TypeError(inspect(F) + ' is not a function');\n  }\n\n  return F.apply(V, args);\n};","map":{"version":3,"sources":["/home/altius/NetbeansProjects/gitRepos/fasp-core-ui/node_modules/es-abstract/2019/Call.js"],"names":["GetIntrinsic","require","$TypeError","inspect","IsCallable","module","exports","Call","F","V","args","arguments","length","apply"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAArB;;AAEA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AACpC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsC,EAAjD;;AACA,MAAI,CAACP,UAAU,CAACI,CAAD,CAAf,EAAoB;AACnB,UAAM,IAAIN,UAAJ,CAAeC,OAAO,CAACK,CAAD,CAAP,GAAa,oBAA5B,CAAN;AACA;;AACD,SAAOA,CAAC,CAACK,KAAF,CAAQJ,CAAR,EAAWC,IAAX,CAAP;AACA,CAND","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar inspect = require('object-inspect');\n\nvar IsCallable = require('./IsCallable');\n\n// https://www.ecma-international.org/ecma-262/6.0/#sec-call\n\nmodule.exports = function Call(F, V) {\n\tvar args = arguments.length > 2 ? arguments[2] : [];\n\tif (!IsCallable(F)) {\n\t\tthrow new $TypeError(inspect(F) + ' is not a function');\n\t}\n\treturn F.apply(V, args);\n};\n"]},"metadata":{},"sourceType":"script"}