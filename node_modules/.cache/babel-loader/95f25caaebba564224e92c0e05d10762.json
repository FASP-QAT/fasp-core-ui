{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Language/AddLanguageComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport i18n from '../../i18n'; // React select\n\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport LanguageService from '../../api/LanguageService.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nvar initialValues = {\n  languageName: \"\",\n  languageCode: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    languageName: Yup.string().required(i18n.t('static.language.languagetext')),\n    languageCode: Yup.string().required(i18n.t('static.language.languagecodetext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddLanguageComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AddLanguageComponent, _Component);\n\n  function AddLanguageComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddLanguageComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddLanguageComponent).call(this, props));\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      event.target.className += \" was-validated\";\n    };\n\n    _this.state = {\n      language: {},\n      message: ''\n    }; // this.Capitalize = this.Capitalize.bind(this);\n\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddLanguageComponent, [{\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var language = this.state.language;\n\n      if (event.target.name == \"langauageName\") {\n        language.languageName = event.target.value;\n      }\n\n      if (event.target.name == \"languageCode\") {\n        language.languageCode = event.target.value;\n      }\n\n      this.setState({\n        language: language\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    // Capitalize(str) {\n    //     this.setState({language: str.charAt(0).toUpperCase() + str.slice(1)});\n    // }\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        languageName: true,\n        languageCode: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AuthenticationService.setupAxiosInterceptors();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, i18n.t('static.language.languageadd')), ' '), React.createElement(Formik, {\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          LanguageService.addLanguage(values).then(function (response) {\n            if (response.status == 200) {\n              _this2.props.history.push(\"/language/listLanguage/\".concat(response.data.messageCode));\n            } else {\n              _this2.setState({\n                message: response.data.messageCode\n              });\n            }\n          }).catch(function (error) {\n            if (error.message === \"Network Error\") {\n              _this2.setState({\n                message: error.message\n              });\n            } else {\n              switch (error.response.status) {\n                case 500:\n                case 401:\n                case 404:\n                case 406:\n                case 412:\n                  _this2.setState({\n                    message: error.response.data.messageCode\n                  });\n\n                  break;\n\n                default:\n                  _this2.setState({\n                    message: 'static.unkownError'\n                  });\n\n                  break;\n              }\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"languageName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, i18n.t('static.language.language')), React.createElement(Input, {\n            type: \"text\",\n            name: \"languageName\",\n            id: \"languageName\",\n            bsSize: \"sm\",\n            valid: !errors.languageName,\n            invalid: touched.languageName && !!errors.languageName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.languageName,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, errors.languageName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"languageCode\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, i18n.t('static.language.languageCode')), React.createElement(Input, {\n            type: \"text\",\n            name: \"languageCode\",\n            id: \"languageCode\",\n            bsSize: \"sm\",\n            valid: !errors.languageCpde,\n            invalid: touched.languageCode && !!errors.languageCode,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.languageCode,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, errors.languageCode))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this2.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, i18n.t('this.state.message')), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, i18n.t('this.props.match.params.message'))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/language/listLanguage/\" + \"static.actionCancelled\");\n    }\n  }]);\n\n  return AddLanguageComponent;\n}(Component);\n\nexport default AddLanguageComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Language/AddLanguageComponent.jsx"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","FormText","InputGroup","InputGroupAddon","InputGroupText","Formik","Yup","i18n","Select","LanguageService","AuthenticationService","initialValues","languageName","languageCode","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddLanguageComponent","props","submitHandler","event","preventDefault","target","className","state","language","message","cancelClicked","bind","dataChange","name","value","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","flexBasis","setSubmitting","setErrors","addLanguage","then","response","status","history","push","data","messageCode","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","languageCpde","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport i18n from '../../i18n'\n\n// React select\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\n\nimport LanguageService from '../../api/LanguageService.js'\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nconst initialValues = {\n    languageName: \"\",\n    languageCode: \"\"\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n\n        languageName: Yup.string()\n        .required(i18n.t('static.language.languagetext')) ,\n        languageCode: Yup.string().required(i18n.t('static.language.languagecodetext'))\n\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\nclass AddLanguageComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            language: {},\n            message: ''\n        }\n\n        // this.Capitalize = this.Capitalize.bind(this);\n\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n    }\n\n    dataChange(event) {\n        let { language } = this.state;\n        if (event.target.name == \"langauageName\") {\n            language.languageName = event.target.value;\n        }\n        if (event.target.name == \"languageCode\") {\n            language.languageCode = event.target.value;\n        }\n        this.setState({\n            language\n        },\n            () => { });\n    };\n\n    // Capitalize(str) {\n    //     this.setState({language: str.charAt(0).toUpperCase() + str.slice(1)});\n    // }\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            languageName: true,\n            languageCode: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n        event.target.className += \" was-validated\";\n    }\n\n\n\n    render() {\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.language.languageadd')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    LanguageService.addLanguage(values).then(response => {\n                                        if (response.status == 200) {\n                                            this.props.history.push(`/language/listLanguage/${response.data.messageCode}`)\n                                        } else {\n                                            this.setState({\n                                                message: response.data.messageCode\n                                            })\n                                        }\n                                    })\n                                        .catch(\n                                            error => {\n                                                if (error.message === \"Network Error\") {\n                                                    this.setState({ message: error.message });\n                                                } else {\n                                                    switch (error.response.status) {\n                                                        case 500:\n                                                        case 401:\n                                                        case 404:\n                                                        case 406:\n                                                        case 412:\n                                                            this.setState({ message: error.response.data.messageCode });\n                                                            break;\n                                                        default:\n                                                            this.setState({ message: 'static.unkownError' });\n                                                            break;\n                                                    }\n                                                }\n                                            }\n                                        );\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form className=\"needs-validation\" onSubmit={handleSubmit} noValidate name='simpleForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label for=\"languageName\">{i18n.t('static.language.language')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"languageName\"\n                                                            id=\"languageName\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.languageName}\n                                                            invalid={touched.languageName && !!errors.languageName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e); }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.languageName}\n                                                            required />\n                                                        <FormFeedback>{errors.languageName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"languageCode\">{i18n.t('static.language.languageCode')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"languageCode\"\n                                                            id=\"languageCode\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.languageCpde}\n                                                            invalid={touched.languageCode && !!errors.languageCode}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e); }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.languageCode}\n                                                            required />\n                                                        <FormFeedback>{errors.languageCode}</FormFeedback>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                    <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                       \n                                                        &nbsp;\n                                                    </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n                                        )} />\n                        </Card>\n                    </Col>\n                </Row>\n                <div>\n                    <h6>{i18n.t('this.state.message')}{}</h6>\n                    <h6>{i18n.t('this.props.match.params.message')}{}</h6>\n                </div>\n            </div>\n        );\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/language/listLanguage/` + \"static.actionCancelled\")\n    }\n\n\n}\nexport default AddLanguageComponent;"]},"metadata":{},"sourceType":"module"}