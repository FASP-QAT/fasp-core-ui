{"ast":null,"code":"var sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function roundTiesToEven(n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n}; // `Math.fround` method implementation\n// https://tc39.github.io/ecma262/#sec-math.fround\n\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs); // eslint-disable-next-line no-self-compare\n\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/core-js/internals/math-fround.js"],"names":["sign","require","abs","Math","pow","EPSILON","EPSILON32","MAX32","MIN32","roundTiesToEven","n","module","exports","fround","x","$abs","$sign","a","result","Infinity"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,wBAAD,CAAlB;;AAEA,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAf;AACA,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAf;AACA,IAAIC,OAAO,GAAGD,GAAG,CAAC,CAAD,EAAI,CAAC,EAAL,CAAjB;AACA,IAAIE,SAAS,GAAGF,GAAG,CAAC,CAAD,EAAI,CAAC,EAAL,CAAnB;AACA,IAAIG,KAAK,GAAGH,GAAG,CAAC,CAAD,EAAI,GAAJ,CAAH,IAAe,IAAIE,SAAnB,CAAZ;AACA,IAAIE,KAAK,GAAGJ,GAAG,CAAC,CAAD,EAAI,CAAC,GAAL,CAAf;;AAEA,IAAIK,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,CAAV,EAAa;AACjC,SAAOA,CAAC,GAAG,IAAIL,OAAR,GAAkB,IAAIA,OAA7B;AACD,CAFD,C,CAIA;AACA;;;AACAM,MAAM,CAACC,OAAP,GAAiBT,IAAI,CAACU,MAAL,IAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AACjD,MAAIC,IAAI,GAAGb,GAAG,CAACY,CAAD,CAAd;AACA,MAAIE,KAAK,GAAGhB,IAAI,CAACc,CAAD,CAAhB;AACA,MAAIG,CAAJ,EAAOC,MAAP;AACA,MAAIH,IAAI,GAAGP,KAAX,EAAkB,OAAOQ,KAAK,GAAGP,eAAe,CAACM,IAAI,GAAGP,KAAP,GAAeF,SAAhB,CAAvB,GAAoDE,KAApD,GAA4DF,SAAnE;AAClBW,EAAAA,CAAC,GAAG,CAAC,IAAIX,SAAS,GAAGD,OAAjB,IAA4BU,IAAhC;AACAG,EAAAA,MAAM,GAAGD,CAAC,IAAIA,CAAC,GAAGF,IAAR,CAAV,CANiD,CAOjD;;AACA,MAAIG,MAAM,GAAGX,KAAT,IAAkBW,MAAM,IAAIA,MAAhC,EAAwC,OAAOF,KAAK,GAAGG,QAAf;AACxC,SAAOH,KAAK,GAAGE,MAAf;AACD,CAVD","sourcesContent":["var sign = require('../internals/math-sign');\n\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\n// `Math.fround` method implementation\n// https://tc39.github.io/ecma262/#sec-math.fround\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n"]},"metadata":{},"sourceType":"script"}