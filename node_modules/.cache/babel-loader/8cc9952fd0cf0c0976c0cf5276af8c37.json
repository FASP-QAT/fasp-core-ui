{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Currency/UpdateCurrencyComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport CurrencyService from '../../api/CurrencyService.js';\nimport i18n from '../../i18n';\nvar initialValues = {\n  currencyCode: '',\n  currencySymbol: '',\n  label: '',\n  conversionRate: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    currencyCode: Yup.string().required(i18n.t('static.currency.currencycodetext')),\n    currencySymbol: Yup.string().required(i18n.t('static.currency.currencysymboltext')),\n    label: Yup.string().required(i18n.t('static.currency.currencytext')),\n    conversionRate: Yup.string().required(i18n.t('static.currency.currencyconversiontext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar UpdateCurrencyComponent = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateCurrencyComponent, _Component);\n\n  function UpdateCurrencyComponent(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateCurrencyComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateCurrencyComponent).call(this, props));\n    _this.state = {\n      currency: {\n        currencyCode: '',\n        currencySymbol: '',\n        label: {\n          label_en: ''\n        },\n        conversionRateToUsd: ''\n      }\n    };\n    _this.Capitalize = _this.Capitalize.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    initialValues = {\n      currencyCode: _this.props.location.state.currency.currencyCode,\n      currencySymbol: _this.props.location.state.currency.currencySymbol,\n      label: _this.props.location.state.currency.label.label_en,\n      conversionRate: _this.props.location.state.currency.conversionRateToUsd\n    };\n    return _this;\n  }\n\n  _createClass(UpdateCurrencyComponent, [{\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var currency = this.state.currency;\n\n      if (event.target.name === \"currencyCode\") {\n        this.state.currency.currencyCode = event.target.value.toUpperCase();\n      }\n\n      if (event.target.name === \"currencySymbol\") {\n        this.state.currency.currencySymbol = event.target.value;\n      }\n\n      if (event.target.name === \"label\") {\n        this.state.currency.label.engLabel = event.target.value;\n      } else if (event.target.name === \"conversionRate\") {\n        this.state.currency.conversionRateToUsd = event.target.value;\n      }\n\n      this.setState({\n        currency: currency\n      });\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        'currencyCode': true,\n        'currencySymbol': true,\n        'label': true,\n        'conversionRate': true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('currencyForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AuthenticationService.setupAxiosInterceptors();\n      this.setState({\n        currency: this.props.location.state.currency\n      });\n    }\n  }, {\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      var currency = this.state.currency;\n      currency.label.label_en = str.charAt(0).toUpperCase() + str.slice(1);\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/currency/listCurrency/\" + \"Action Canceled\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, i18n.t('static.currency.currencyedit')), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          CurrencyService.editCurrency(_this2.state.currency).then(function (response) {\n            if (response.data.status == \"Success\") {\n              _this2.props.history.push(\"/currency/listCurrency/\".concat(response.data.message));\n            } else {\n              _this2.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            switch (error.message) {\n              case \"Network Error\":\n                _this2.setState({\n                  message: error.message\n                });\n\n                break;\n\n              default:\n                _this2.setState({\n                  message: error.response.data.message\n                });\n\n                break;\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"currencyForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"currencyCode\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, i18n.t('static.currency.currencycode')), React.createElement(Input, {\n            type: \"text\",\n            name: \"currencyCode\",\n            id: \"currencyCode\",\n            bsSize: \"sm\",\n            valid: !errors.currencyCode,\n            invalid: touched.currencyCode && !!errors.currencyCode,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.currency.currencyCode,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, errors.currencyCode)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"currencySymbol\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, i18n.t('static.currency.currencysymbol')), React.createElement(Input, {\n            type: \"text\",\n            name: \"currencySymbol\",\n            id: \"currencySymbol\",\n            bsSize: \"sm\",\n            valid: !errors.currencySymbol,\n            invalid: touched.currencySymbol && !!errors.currencySymbol,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.currency.currencySymbol,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, errors.currencySymbol)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, i18n.t('static.currency.currency')), React.createElement(Input, {\n            type: \"text\",\n            name: \"label\",\n            id: \"label\",\n            bsSize: \"sm\",\n            valid: !errors.label,\n            invalid: touched.label && !!errors.label,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n\n              _this2.Capitalize(e.target.value);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.currency.label.label_en,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, errors.label)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"conversionRate\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, i18n.t('static.currency.conversionrateusd')), React.createElement(Input, {\n            type: \"text\",\n            name: \"conversionRate\",\n            id: \"conversionRate\",\n            bsSize: \"sm\",\n            valid: !errors.conversionRate,\n            invalid: touched.conversionRate && !!errors.conversionRate,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.currency.conversionRateToUsd,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, errors.conversionRate))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"reset\",\n            color: \"danger\",\n            className: \"mr-1 float-right\",\n            size: \"sm\",\n            onClick: _this2.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }), i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            color: \"success\",\n            className: \"mr-1 float-right\",\n            size: \"sm\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UpdateCurrencyComponent;\n}(Component);\n\nexport { UpdateCurrencyComponent as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Currency/UpdateCurrencyComponent.jsx"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","FormText","InputGroup","InputGroupAddon","InputGroupText","AuthenticationService","Formik","Yup","CurrencyService","i18n","initialValues","currencyCode","currencySymbol","label","conversionRate","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","UpdateCurrencyComponent","props","state","currency","label_en","conversionRateToUsd","Capitalize","bind","cancelClicked","dataChange","location","event","target","name","value","toUpperCase","engLabel","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","str","charAt","slice","history","push","flexBasis","setSubmitting","setErrors","editCurrency","then","response","data","status","message","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\nimport CurrencyService from '../../api/CurrencyService.js';\nimport i18n from '../../i18n';\n\nlet initialValues = {\n    currencyCode: '',\n    currencySymbol: '',\n    label: '',\n    conversionRate: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        currencyCode: Yup.string()\n        .required(i18n.t('static.currency.currencycodetext')),\n         \n        currencySymbol: Yup.string()\n            .required(i18n.t('static.currency.currencysymboltext')),\n        label: Yup.string()\n            .required(i18n.t('static.currency.currencytext')),\n        conversionRate: Yup.string()\n            .required(i18n.t('static.currency.currencyconversiontext')),\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\nexport default class UpdateCurrencyComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currency: {\n                currencyCode: '',\n                currencySymbol: '',\n                label: {\n                    label_en: ''\n               \n                },\n                conversionRateToUsd: ''\n            }\n        }\n        this.Capitalize = this.Capitalize.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        initialValues = {\n            currencyCode: this.props.location.state.currency.currencyCode,\n            currencySymbol: this.props.location.state.currency.currencySymbol,\n            label: this.props.location.state.currency.label.label_en,\n            conversionRate: this.props.location.state.currency.conversionRateToUsd\n        }\n    }\n\n    dataChange(event) {\n        let { currency } = this.state\n\n        if (event.target.name === \"currencyCode\") {\n            this.state.currency.currencyCode = event.target.value.toUpperCase();\n        }\n        if (event.target.name === \"currencySymbol\") {\n            this.state.currency.currencySymbol = event.target.value;\n        }\n        if (event.target.name === \"label\") {\n            this.state.currency.label.engLabel = event.target.value\n        }\n\n        else if (event.target.name === \"conversionRate\") {\n            this.state.currency.conversionRateToUsd = event.target.value\n        }\n\n        this.setState(\n            {\n                currency\n            }\n        )\n\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            'currencyCode': true,\n            'currencySymbol': true,\n            'label': true,\n            'conversionRate': true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('currencyForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        this.setState({\n            currency: this.props.location.state.currency\n        });\n    }\n\n    Capitalize(str) {\n        let { currency } = this.state\n        currency.label.label_en = str.charAt(0).toUpperCase() + str.slice(1)\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/currency/listCurrency/` + \"Action Canceled\")\n    }\n\n    render() {\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.currency.currencyedit')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={initialValues}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n\n                                    CurrencyService.editCurrency(this.state.currency)\n                                        .then(response => {\n                                            if (response.data.status == \"Success\") {\n                                                this.props.history.push(`/currency/listCurrency/${response.data.message}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.message\n                                                })\n                                            }\n                                        })\n                                        .catch(\n                                            error => {\n                                                switch (error.message) {\n                                                    case \"Network Error\":\n                                                        this.setState({\n                                                            message: error.message\n                                                        })\n                                                        break\n                                                    default:\n                                                        this.setState({\n                                                            message: error.response.data.message\n                                                        })\n                                                        break\n                                                }\n                                            }\n                                        );\n                                }}\n\n\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='currencyForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label for=\"currencyCode\">{i18n.t('static.currency.currencycode')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"currencyCode\"\n                                                            id=\"currencyCode\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.currencyCode}\n                                                            invalid={touched.currencyCode && !!errors.currencyCode}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e); }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.currency.currencyCode}\n                                                            required />\n                                                        <FormFeedback>{errors.currencyCode}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"currencySymbol\">{i18n.t('static.currency.currencysymbol')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"currencySymbol\"\n                                                            id=\"currencySymbol\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.currencySymbol}\n                                                            invalid={touched.currencySymbol && !!errors.currencySymbol}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.currency.currencySymbol}\n                                                            required />\n                                                        <FormFeedback>{errors.currencySymbol}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"label\">{i18n.t('static.currency.currency')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"label\"\n                                                            id=\"label\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.label}\n                                                            invalid={touched.label && !!errors.label}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e); this.Capitalize(e.target.value) }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.currency.label.label_en}\n                                                            required />\n                                                        <FormFeedback>{errors.label}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"conversionRate\">{i18n.t('static.currency.conversionrateusd')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"conversionRate\"\n                                                            id=\"conversionRate\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.conversionRate}\n                                                            invalid={touched.conversionRate && !!errors.conversionRate}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e); }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.currency.conversionRateToUsd}\n                                                            required />\n                                                        <FormFeedback>{errors.conversionRate}</FormFeedback>\n                                                    </FormGroup>\n\n                                                </CardBody>\n\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                    <Button type=\"reset\" color=\"danger\" className=\"mr-1 float-right\"size=\"sm\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i>{i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" color=\"success\" className=\"mr-1 float-right\"size=\"sm\" onClick={() => this.touchAll(setTouched, errors)}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                       &nbsp;\n                                                    </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n\n                                        )} />\n\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}