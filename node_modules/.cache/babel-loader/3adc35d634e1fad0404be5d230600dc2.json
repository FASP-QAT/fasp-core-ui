{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.merge` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  // eslint-disable-next-line no-unused-vars\n  merge: function merge(iterable\n  /* ...iterbles */\n  ) {\n    var map = anObject(this);\n    var setter = aFunction(map.set);\n    var i = 0;\n\n    while (i < arguments.length) {\n      iterate(arguments[i++], setter, map, true);\n    }\n\n    return map;\n  }\n});","map":{"version":3,"sources":["/home/altius/Documents/FASP/fasp-core-ui/node_modules/core-js/modules/esnext.map.merge.js"],"names":["$","require","IS_PURE","anObject","aFunction","iterate","target","proto","real","forced","merge","iterable","map","setter","set","i","arguments","length"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEP;AAAlD,CAAD,EAA8D;AAC7D;AACAQ,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC;AAAS;AAAxB,IAA2C;AAChD,QAAIC,GAAG,GAAGT,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIU,MAAM,GAAGT,SAAS,CAACQ,GAAG,CAACE,GAAL,CAAtB;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGC,SAAS,CAACC,MAArB,EAA6B;AAC3BZ,MAAAA,OAAO,CAACW,SAAS,CAACD,CAAC,EAAF,CAAV,EAAiBF,MAAjB,EAAyBD,GAAzB,EAA8B,IAA9B,CAAP;AACD;;AACD,WAAOA,GAAP;AACD;AAV4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.merge` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  // eslint-disable-next-line no-unused-vars\n  merge: function merge(iterable /* ...iterbles */) {\n    var map = anObject(this);\n    var setter = aFunction(map.set);\n    var i = 0;\n    while (i < arguments.length) {\n      iterate(arguments[i++], setter, map, true);\n    }\n    return map;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}