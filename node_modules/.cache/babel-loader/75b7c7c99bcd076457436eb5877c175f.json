{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Product/AddProduct.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport RealmServcie from '../../api/RealmService';\nimport UnitService from '../../api/UnitService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport getLabelText from '../../CommonComponent/getLabelText';\nimport ProductService from '../../api/ProductService';\nimport i18n from \"../../i18n\";\nvar initialValues = {\n  productName: '',\n  genericName: '',\n  realmId: '',\n  productCategoryId: '',\n  unitId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    productName: Yup.string().required(i18n.t('static.product.productnametext')),\n    genericName: Yup.string().required(i18n.t('static.product.generictext')),\n    realmId: Yup.string().required(i18n.t('static.product.realmtext')),\n    productCategoryId: Yup.string().required(i18n.t('static.product.productcategorytext')),\n    unitId: Yup.string().required(i18n.t('static.product.productunittext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddProduct = /*#__PURE__*/function (_Component) {\n  _inherits(AddProduct, _Component);\n\n  function AddProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AddProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProduct).call(this, props));\n    _this.state = {\n      product: {\n        label: {\n          label_en: ''\n        },\n        genericLabel: {\n          label_en: ''\n        },\n        realm: {\n          realmid: ''\n        },\n        productCategory: {\n          productCategoryId: ''\n        },\n        forecastingUnit: {\n          unitId: ''\n        }\n      },\n      lan: localStorage.getItem('lang'),\n      realmList: [],\n      productCategoryList: [],\n      unitList: []\n    };\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.getDependentLists = _this.getDependentLists.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RealmServcie.getRealmListAll().then(function (response) {\n        _this2.setState({\n          realmList: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n      UnitService.getUnitListAll().then(function (response) {\n        _this2.setState({\n          unitList: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"getDependentLists\",\n    value: function getDependentLists(event) {\n      var _this3 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      ProductService.getProdcutCategoryListByRealmId(event.target.value).then(function (response) {\n        console.log(response);\n\n        _this3.setState({\n          productCategoryList: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this3.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var product = this.state.product;\n\n      if (event.target.name === \"productName\") {\n        product.label.label_en = event.target.value;\n      }\n\n      if (event.target.name === \"genericName\") {\n        product.genericLabel.label_en = event.target.value;\n      }\n\n      if (event.target.name === \"realmId\") {\n        product.realm.realmId = event.target.value;\n      }\n\n      if (event.target.name === \"productCategoryId\") {\n        product.productCategory.productCategoryId = event.target.value;\n      }\n\n      if (event.target.name === \"unitId\") {\n        product.forecastingUnit.unitId = event.target.value;\n      }\n\n      if (event.target.name === \"stopDate\") {\n        product.stopDate = event.target.value;\n      }\n\n      this.setState({\n        product: product\n      }, function () {\n        console.log(product);\n      });\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        productName: true,\n        genericName: true,\n        realmId: true,\n        productCategoryId: true,\n        unitId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('productForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var realmList = this.state.realmList;\n      var unitList = this.state.unitList;\n      var productCategoryList = this.state.productCategoryList;\n      var realms = realmList.length > 0 && realmList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.realmId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, getLabelText(item.label, _this4.state.lan));\n      }, this);\n      var units = unitList.length > 0 && unitList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.unitId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, getLabelText(item.label, _this4.state.lan));\n      }, this);\n      var productCategories = productCategoryList.length > 0 && productCategoryList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.productCategoryId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, getLabelText(item.label, _this4.state.lan));\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, i18n.t('static.product.productadd')), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          // AuthenticationService.setupAxiosInterceptors();\n          // console.log(\"==============\",this.state.product);\n          ProductService.addProduct(_this4.state.product).then(function (response) {\n            if (response.status == \"200\") {\n              console.log(response);\n\n              _this4.props.history.push(\"/product/listProduct/\".concat(response.data.message));\n            } else {\n              _this4.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            switch (error.message) {\n              case \"Network Error\":\n                _this4.setState({\n                  message: error.message\n                });\n\n                break;\n\n              default:\n                _this4.setState({\n                  message: error.response.data.message\n                });\n\n                break;\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"productForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"product\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }, i18n.t('static.product.product')), React.createElement(Input, {\n            type: \"text\",\n            name: \"productName\",\n            id: \"productName\",\n            bsSize: \"sm\",\n            valid: !errors.productName,\n            invalid: touched.productName && !!errors.productName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310\n            },\n            __self: this\n          }, errors.productName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"product\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313\n            },\n            __self: this\n          }, i18n.t('static.product.productgenericname')), React.createElement(Input, {\n            type: \"text\",\n            name: \"genericName\",\n            id: \"genericName\",\n            bsSize: \"sm\",\n            valid: !errors.genericName,\n            invalid: touched.genericName && !!errors.genericName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }, errors.genericName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"realmId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326\n            },\n            __self: this\n          }, i18n.t('static.product.realm')), React.createElement(Input, {\n            type: \"select\",\n            name: \"realmId\",\n            id: \"realmId\",\n            bsSize: \"sm\",\n            valid: !errors.realmId,\n            invalid: touched.realmId && !!errors.realmId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.dataChange(e);\n\n              _this4.getDependentLists(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this4.state.realmId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, \"Please select\"), realms), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, errors.realmId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345\n            },\n            __self: this\n          }, i18n.t('static.product.productcategory')), React.createElement(Input, {\n            type: \"select\",\n            name: \"productCategoryId\",\n            id: \"productCategoryId\",\n            bsSize: \"sm\",\n            valid: !errors.productCategoryId,\n            invalid: touched.productCategoryId && !!errors.productCategoryId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this4.state.productCategoryId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 346\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 358\n            },\n            __self: this\n          }, \"Please select\"), productCategories), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }, errors.productCategoryId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"unitId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367\n            },\n            __self: this\n          }, i18n.t('static.product.unit')), React.createElement(Input, {\n            type: \"select\",\n            name: \"unitId\",\n            id: \"unitId\",\n            bsSize: \"sm\",\n            valid: !errors.unitId,\n            invalid: touched.unitId && !!errors.unitId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this4.state.unitId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, \"Please select\"), units), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 383\n            },\n            __self: this\n          }, errors.unitId))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 387\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 388\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this4.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this4.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/product/listProduct/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return AddProduct;\n}(Component);\n\nexport { AddProduct as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Product/AddProduct.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","RealmServcie","UnitService","AuthenticationService","getLabelText","ProductService","i18n","initialValues","productName","genericName","realmId","productCategoryId","unitId","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddProduct","props","state","product","label","label_en","genericLabel","realm","realmid","productCategory","forecastingUnit","lan","localStorage","getItem","realmList","productCategoryList","unitList","dataChange","bind","cancelClicked","getDependentLists","setupAxiosInterceptors","getRealmListAll","then","response","setState","data","catch","message","getUnitListAll","event","getProdcutCategoryListByRealmId","target","value","console","log","name","stopDate","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","realms","map","item","units","productCategories","flexBasis","setSubmitting","setErrors","addProduct","status","history","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Row, Col, Card, CardHeader,\n    CardFooter, Button, FormFeedback, CardBody,\n    Form, FormGroup, Label, Input\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport RealmServcie from '../../api/RealmService';\nimport UnitService from '../../api/UnitService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport getLabelText from '../../CommonComponent/getLabelText'\nimport ProductService from '../../api/ProductService';\nimport i18n from \"../../i18n\"\n\nconst initialValues = {\n    productName: '',\n    genericName: '',\n    realmId: '',\n    productCategoryId: '',\n    unitId: ''\n}\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        productName: Yup.string()\n            .required(i18n.t('static.product.productnametext')),\n        genericName: Yup.string()\n        .required(i18n.t('static.product.generictext')),\n        realmId: Yup.string()\n        .required(i18n.t('static.product.realmtext')),\n        productCategoryId: Yup.string()\n        .required(i18n.t('static.product.productcategorytext')),\n        unitId: Yup.string()\n        .required(i18n.t('static.product.productunittext'))\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\nexport default class AddProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            product: {\n                label: {\n                    label_en: ''\n                },\n                genericLabel: {\n                    label_en: ''\n                },\n                realm: {\n                    realmid: ''\n                },\n                productCategory: {\n                    productCategoryId: ''\n                },\n                forecastingUnit: {\n                    unitId: ''\n                }\n\n            },\n            lan: localStorage.getItem('lang'),\n            realmList: [],\n            productCategoryList: [],\n            unitList: []\n        }\n        this.dataChange = this.dataChange.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.getDependentLists=this.getDependentLists.bind(this);\n    }\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RealmServcie.getRealmListAll()\n            .then(response => {\n                this.setState({\n                    realmList: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n        UnitService.getUnitListAll()\n            .then(response => {\n                this.setState({\n                    unitList: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    getDependentLists(event) {\n        AuthenticationService.setupAxiosInterceptors();\n        ProductService.getProdcutCategoryListByRealmId(event.target.value)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    productCategoryList: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n    }\n    dataChange(event) {\n        let { product } = this.state;\n        if (event.target.name === \"productName\") {\n            product.label.label_en = event.target.value;\n        }\n        if (event.target.name === \"genericName\") {\n            product.genericLabel.label_en = event.target.value;\n        }\n        if (event.target.name === \"realmId\") {\n            product.realm.realmId = event.target.value;\n        }\n        if (event.target.name === \"productCategoryId\") {\n            product.productCategory.productCategoryId = event.target.value;\n        }\n        if (event.target.name === \"unitId\") {\n            product.forecastingUnit.unitId = event.target.value;\n        }\n        if (event.target.name === \"stopDate\") {\n            product.stopDate = event.target.value;\n        }\n        this.setState({\n            product\n        },\n            () => { console.log(product) });\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            productName: true,\n            genericName: true,\n            realmId: true,\n            productCategoryId: true,\n            unitId: true,\n        }\n        );\n        this.validateForm(errors);\n    }\n    validateForm(errors) {\n        this.findFirstError('productForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n    render() {\n        const { realmList } = this.state;\n        const { unitList } = this.state;\n        const { productCategoryList } = this.state;\n        let realms = realmList.length > 0 && realmList.map((item, i) => {\n            return (\n                <option key={i} value={item.realmId}>\n                    {getLabelText(item.label, this.state.lan)}\n                </option>\n            )\n        }, this);\n        let units = unitList.length > 0 && unitList.map((item, i) => {\n            return (\n                <option key={i} value={item.unitId}>\n                    {getLabelText(item.label, this.state.lan)}\n                </option>\n            )\n        }, this);\n        let productCategories = productCategoryList.length > 0 && productCategoryList.map((item, i) => {\n            return (\n                <option key={i} value={item.productCategoryId}>\n                    {getLabelText(item.label, this.state.lan)}\n                </option>\n            )\n        }, this);\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.product.productadd')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={initialValues}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    // AuthenticationService.setupAxiosInterceptors();\n                                    // console.log(\"==============\",this.state.product);\n                                    ProductService.addProduct(this.state.product)\n                                        .then(response => {\n                                            if (response.status == \"200\") {\n                                                console.log(response);\n                                                this.props.history.push(`/product/listProduct/${response.data.message}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.message\n                                                })\n                                            }\n                                        })\n                                        .catch(\n                                            error => {\n                                                switch (error.message) {\n                                                    case \"Network Error\":\n                                                        this.setState({\n                                                            message: error.message\n                                                        })\n                                                        break\n                                                    default:\n                                                        this.setState({\n                                                            message: error.response.data.message\n                                                        })\n                                                        break\n                                                }\n                                            }\n                                        );\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='productForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label for=\"product\">{i18n.t('static.product.product')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"productName\"\n                                                            id=\"productName\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.productName}\n                                                            invalid={touched.productName && !!errors.productName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required />\n                                                        <FormFeedback>{errors.productName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"product\">{i18n.t('static.product.productgenericname')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"genericName\"\n                                                            id=\"genericName\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.genericName}\n                                                            invalid={touched.genericName && !!errors.genericName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required />\n                                                        <FormFeedback>{errors.genericName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"realmId\">{i18n.t('static.product.realm')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            name=\"realmId\"\n                                                            id=\"realmId\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.realmId}\n                                                            invalid={touched.realmId && !!errors.realmId}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e);this.getDependentLists(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.state.realmId}\n                                                        >\n                                                            <option value=\"\">Please select</option>\n                                                            {realms}\n                                                        </Input>\n                                                        <FormFeedback>{errors.realmId}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"\">{i18n.t('static.product.productcategory')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            name=\"productCategoryId\"\n                                                            id=\"productCategoryId\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.productCategoryId}\n                                                            invalid={touched.productCategoryId && !!errors.productCategoryId}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.state.productCategoryId}\n                                                        >\n                                                            <option value=\"\">Please select</option>\n                                                            {/* <option value=\"1\">Product Category One</option>\n                                                            <option value=\"2\">Product Category Two</option>\n                                                            <option value=\"3\">Product Category Three</option> */}\n                                                            {productCategories}\n                                                        </Input>\n                                                        <FormFeedback>{errors.productCategoryId}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"unitId\">{i18n.t('static.product.unit')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            name=\"unitId\"\n                                                            id=\"unitId\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.unitId}\n                                                            invalid={touched.unitId && !!errors.unitId}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.state.unitId}\n                                                        >\n                                                            <option value=\"\">Please select</option>\n                                                            {units}\n                                                        </Input>\n                                                        <FormFeedback>{errors.unitId}</FormFeedback>\n                                                    </FormGroup>\n\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n\n                                                        {/* <Button type=\"reset\" size=\"sm\" color=\"warning\" className=\"float-right mr-1\"><i className=\"fa fa-refresh\"></i> Reset</Button> */}\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                        &nbsp;\n                                                </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n                                        )} />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/product/listProduct/` + \"Action Canceled\")\n    }\n\n}"]},"metadata":{},"sourceType":"module"}