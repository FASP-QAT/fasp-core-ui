{"ast":null,"code":"'use strict';\n\nvar DataReader = require('./DataReader');\n\nvar utils = require('../utils');\n\nfunction StringReader(data) {\n  DataReader.call(this, data);\n}\n\nutils.inherits(StringReader, DataReader);\n/**\n * @see DataReader.byteAt\n */\n\nStringReader.prototype.byteAt = function (i) {\n  return this.data.charCodeAt(this.zero + i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\n\n\nStringReader.prototype.lastIndexOfSignature = function (sig) {\n  return this.data.lastIndexOf(sig) - this.zero;\n};\n/**\n * @see DataReader.readAndCheckSignature\n */\n\n\nStringReader.prototype.readAndCheckSignature = function (sig) {\n  var data = this.readData(4);\n  return sig === data;\n};\n/**\n * @see DataReader.readData\n */\n\n\nStringReader.prototype.readData = function (size) {\n  this.checkOffset(size); // this will work because the constructor applied the \"& 0xff\" mask.\n\n  var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n  this.index += size;\n  return result;\n};\n\nmodule.exports = StringReader;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/jszip/lib/reader/StringReader.js"],"names":["DataReader","require","utils","StringReader","data","call","inherits","prototype","byteAt","i","charCodeAt","zero","lastIndexOfSignature","sig","lastIndexOf","readAndCheckSignature","readData","size","checkOffset","result","slice","index","module","exports"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AAEA,SAASE,YAAT,CAAsBC,IAAtB,EAA4B;AACxBJ,EAAAA,UAAU,CAACK,IAAX,CAAgB,IAAhB,EAAsBD,IAAtB;AACH;;AACDF,KAAK,CAACI,QAAN,CAAeH,YAAf,EAA6BH,UAA7B;AACA;;;;AAGAG,YAAY,CAACI,SAAb,CAAuBC,MAAvB,GAAgC,UAASC,CAAT,EAAY;AACxC,SAAO,KAAKL,IAAL,CAAUM,UAAV,CAAqB,KAAKC,IAAL,GAAYF,CAAjC,CAAP;AACH,CAFD;AAGA;;;;;AAGAN,YAAY,CAACI,SAAb,CAAuBK,oBAAvB,GAA8C,UAASC,GAAT,EAAc;AACxD,SAAO,KAAKT,IAAL,CAAUU,WAAV,CAAsBD,GAAtB,IAA6B,KAAKF,IAAzC;AACH,CAFD;AAGA;;;;;AAGAR,YAAY,CAACI,SAAb,CAAuBQ,qBAAvB,GAA+C,UAAUF,GAAV,EAAe;AAC1D,MAAIT,IAAI,GAAG,KAAKY,QAAL,CAAc,CAAd,CAAX;AACA,SAAOH,GAAG,KAAKT,IAAf;AACH,CAHD;AAIA;;;;;AAGAD,YAAY,CAACI,SAAb,CAAuBS,QAAvB,GAAkC,UAASC,IAAT,EAAe;AAC7C,OAAKC,WAAL,CAAiBD,IAAjB,EAD6C,CAE7C;;AACA,MAAIE,MAAM,GAAG,KAAKf,IAAL,CAAUgB,KAAV,CAAgB,KAAKT,IAAL,GAAY,KAAKU,KAAjC,EAAwC,KAAKV,IAAL,GAAY,KAAKU,KAAjB,GAAyBJ,IAAjE,CAAb;AACA,OAAKI,KAAL,IAAcJ,IAAd;AACA,SAAOE,MAAP;AACH,CAND;;AAOAG,MAAM,CAACC,OAAP,GAAiBpB,YAAjB","sourcesContent":["'use strict';\nvar DataReader = require('./DataReader');\nvar utils = require('../utils');\n\nfunction StringReader(data) {\n    DataReader.call(this, data);\n}\nutils.inherits(StringReader, DataReader);\n/**\n * @see DataReader.byteAt\n */\nStringReader.prototype.byteAt = function(i) {\n    return this.data.charCodeAt(this.zero + i);\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nStringReader.prototype.lastIndexOfSignature = function(sig) {\n    return this.data.lastIndexOf(sig) - this.zero;\n};\n/**\n * @see DataReader.readAndCheckSignature\n */\nStringReader.prototype.readAndCheckSignature = function (sig) {\n    var data = this.readData(4);\n    return sig === data;\n};\n/**\n * @see DataReader.readData\n */\nStringReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    // this will work because the constructor applied the \"& 0xff\" mask.\n    var result = this.data.slice(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = StringReader;\n"]},"metadata":{},"sourceType":"script"}