{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/fundingSource/AddFundingSourceComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport RealmService from \"../../api/RealmService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n';\nvar initialValues = {\n  fundingSourceId: [],\n  subFundingSource: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    realmId: Yup.string().required(i18n.t('static.fundingsource.realmtext')),\n    fundingSource: Yup.string().required(i18n.t('static.fundingsource.fundingsourcetext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddFundingSourceComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AddFundingSourceComponent, _Component);\n\n  function AddFundingSourceComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddFundingSourceComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFundingSourceComponent).call(this, props));\n    _this.state = {\n      realms: [],\n      fundingSource: {\n        realm: {},\n        label: {}\n      },\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddFundingSourceComponent, [{\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var fundingSource = this.state.fundingSource;\n\n      if (event.target.name == \"realmId\") {\n        fundingSource.realm.realmId = event.target.value;\n      }\n\n      if (event.target.name == \"fundingSource\") {\n        fundingSource.label.label_en = event.target.value;\n      }\n\n      this.setState({\n        fundingSource: fundingSource\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        realmId: true,\n        fundingSource: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('fundingSourceForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RealmService.getRealmListAll().then(function (response) {\n        if (response.status == 200) {\n          _this2.setState({\n            realms: response.data\n          });\n        } else {\n          _this2.setState({\n            message: response.data.messageCode\n          });\n        }\n      }).catch(function (error) {\n        if (error.message === \"Network Error\") {\n          _this2.setState({\n            message: error.message\n          });\n        } else {\n          switch (error.response.status) {\n            case 500:\n            case 401:\n            case 404:\n            case 406:\n            case 412:\n              _this2.setState({\n                message: error.response.data.messageCode\n              });\n\n              break;\n\n            default:\n              _this2.setState({\n                message: 'static.unkownError'\n              });\n\n              break;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var realms = this.state.realms;\n      var realmList = realms.length > 0 && realms.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.realmId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, i18n.t('static.fundingsource.fundingsourceaddttext')), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          console.log(\"Submit clicked\");\n          FundingSourceService.addFundingSource(_this3.state.fundingSource).then(function (response) {\n            console.log(\"Response->\", response);\n\n            if (response.status == 200) {\n              _this3.props.history.push(\"/fundingSource/listFundingSource/\".concat(response.data.messageCode));\n            } else {\n              _this3.setState({\n                message: response.data.messageCode\n              });\n            }\n          }).catch(function (error) {\n            if (error.message === \"Network Error\") {\n              _this3.setState({\n                message: error.message\n              });\n            } else {\n              switch (error.response.status) {\n                case 500:\n                case 401:\n                case 404:\n                case 406:\n                case 412:\n                  _this3.setState({\n                    message: error.response.data.messageCode\n                  });\n\n                  break;\n\n                default:\n                  _this3.setState({\n                    message: 'static.unkownError'\n                  });\n\n                  break;\n              }\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"fundingSourceForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"realmId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, i18n.t('static.fundingsource.realm')), React.createElement(Input, {\n            type: \"select\",\n            name: \"realmId\",\n            id: \"realmId\",\n            bsSize: \"sm\",\n            valid: !errors.realmId,\n            invalid: touched.realmId && !!errors.realmId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.state.realmId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, i18n.t('static.common.select')), realmList), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, errors.realmId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"fundingSource\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, i18n.t('static.fundingsource.fundingsource')), React.createElement(Input, {\n            type: \"text\",\n            name: \"fundingSource\",\n            id: \"fundingSource\",\n            bsSize: \"sm\",\n            valid: !errors.fundingSource,\n            invalid: touched.fundingSource && !!errors.fundingSource,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, errors.fundingSource))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this3.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this3.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.state.messageCode), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, this.props.match.params.messageCode)));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/fundingSource/listFundingSource/\" + \"static.actionCancelled\");\n    }\n  }]);\n\n  return AddFundingSourceComponent;\n}(Component);\n\nexport default AddFundingSourceComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/fundingSource/AddFundingSourceComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","FundingSourceService","RealmService","AuthenticationService","i18n","initialValues","fundingSourceId","subFundingSource","validationSchema","values","object","shape","realmId","string","required","t","fundingSource","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddFundingSourceComponent","props","state","realms","realm","label","message","cancelClicked","bind","dataChange","event","target","name","value","label_en","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","getRealmListAll","then","response","status","data","messageCode","catch","realmList","map","item","flexBasis","setSubmitting","setErrors","console","log","addFundingSource","history","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\n\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport RealmService from \"../../api/RealmService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n'\nconst initialValues = {\n  fundingSourceId: [],\n  subFundingSource: \"\"\n}\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    realmId: Yup.string()\n      .required(i18n.t('static.fundingsource.realmtext')),\n    fundingSource: Yup.string()\n      .required(i18n.t('static.fundingsource.fundingsourcetext'))\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\nclass AddFundingSourceComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      realms: [],\n      fundingSource: {\n        realm: {\n        },\n        label: {\n        }\n      },\n      message: ''\n    }\n    this.cancelClicked = this.cancelClicked.bind(this);\n    this.dataChange = this.dataChange.bind(this);\n  }\n\n  dataChange(event) {\n    let { fundingSource } = this.state;\n    if (event.target.name == \"realmId\") {\n      fundingSource.realm.realmId = event.target.value;\n    }\n    if (event.target.name == \"fundingSource\") {\n      fundingSource.label.label_en = event.target.value;\n    }\n    this.setState({\n      fundingSource\n    },\n      () => { });\n  };\n\n  touchAll(setTouched, errors) {\n    setTouched({\n      realmId: true,\n      fundingSource: true\n    }\n    );\n    this.validateForm(errors);\n  }\n  validateForm(errors) {\n    this.findFirstError('fundingSourceForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n  findFirstError(formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  componentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    RealmService.getRealmListAll()\n      .then(response => {\n        if (response.status == 200) {\n          this.setState({ realms: response.data })\n        } else {\n          this.setState({ message: response.data.messageCode })\n        }\n      }).catch(\n        error => {\n          if (error.message === \"Network Error\") {\n            this.setState({ message: error.message });\n          } else {\n            switch (error.response.status) {\n              case 500:\n              case 401:\n              case 404:\n              case 406:\n              case 412:\n                this.setState({ message: error.response.data.messageCode });\n                break;\n              default:\n                this.setState({ message: 'static.unkownError' });\n                break;\n            }\n          }\n        }\n      );\n  }\n\n  render() {\n    const { realms } = this.state;\n    let realmList = realms.length > 0\n      && realms.map((item, i) => {\n        return (\n          <option key={i} value={item.realmId}>\n            {item.label.label_en}\n          </option>\n        )\n      }, this);\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n            <Card>\n              <CardHeader>\n                <i className=\"icon-note\"></i><strong>{i18n.t('static.fundingsource.fundingsourceaddttext')}</strong>{' '}\n              </CardHeader>\n              <Formik\n                initialValues={initialValues}\n                validate={validate(validationSchema)}\n                onSubmit={(values, { setSubmitting, setErrors }) => {\n                  console.log(\"Submit clicked\");\n                  FundingSourceService.addFundingSource(this.state.fundingSource)\n                    .then(response => {\n                      console.log(\"Response->\", response);\n                      if (response.status == 200) {\n                        this.props.history.push(`/fundingSource/listFundingSource/${response.data.messageCode}`)\n                      } else {\n                        this.setState({ message: response.data.messageCode })\n                      }\n                    })\n                    .catch(\n                      error => {\n                        if (error.message === \"Network Error\") {\n                          this.setState({ message: error.message });\n                        } else {\n                          switch (error.response.status) {\n                            case 500:\n                            case 401:\n                            case 404:\n                            case 406:\n                            case 412:\n                              this.setState({ message: error.response.data.messageCode });\n                              break;\n                            default:\n                              this.setState({ message: 'static.unkownError' });\n                              break;\n                          }\n                        }\n                      }\n                    );\n                }}\n                render={\n                  ({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    setTouched\n                  }) => (\n                      <Form onSubmit={handleSubmit} noValidate name='fundingSourceForm'>\n                        <CardBody>\n                          <FormGroup>\n                            <Label htmlFor=\"realmId\">{i18n.t('static.fundingsource.realm')}</Label>\n                            <Input\n                              type=\"select\"\n                              name=\"realmId\"\n                              id=\"realmId\"\n                              bsSize=\"sm\"\n                              valid={!errors.realmId}\n                              invalid={touched.realmId && !!errors.realmId}\n                              onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                              onBlur={handleBlur}\n                              required\n                              value={this.state.realmId}\n                            >\n                              <option value=\"0\">{i18n.t('static.common.select')}</option>\n                              {realmList}\n                            </Input>\n                            <FormFeedback>{errors.realmId}</FormFeedback>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"fundingSource\">{i18n.t('static.fundingsource.fundingsource')}</Label>\n                            <Input type=\"text\"\n                              name=\"fundingSource\"\n                              id=\"fundingSource\"\n                              bsSize=\"sm\"\n                              valid={!errors.fundingSource}\n                              invalid={touched.fundingSource && !!errors.fundingSource}\n                              onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                              onBlur={handleBlur}\n                              required />\n                            <FormFeedback>{errors.fundingSource}</FormFeedback>\n                          </FormGroup>\n                        </CardBody>\n                        <CardFooter>\n                          <FormGroup>\n\n                            <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                            <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                            \n                                                        &nbsp;\n                          </FormGroup>\n                        </CardFooter>\n                      </Form>\n\n                    )} />\n\n            </Card>\n          </Col>\n        </Row>\n        <div>\n          <h6>{this.state.messageCode}</h6>\n          <h6>{this.props.match.params.messageCode}</h6>\n        </div>\n      </div>\n    );\n  }\n  cancelClicked() {\n    this.props.history.push(`/fundingSource/listFundingSource/` + \"static.actionCancelled\")\n  }\n}\n\nexport default AddFundingSourceComponent;\n"]},"metadata":{},"sourceType":"module"}