{"ast":null,"code":"'use strict';\n\nvar GenericWorker = require('./GenericWorker');\n\nvar utils = require('../utils');\n/**\n * A worker which convert chunks to a specified type.\n * @constructor\n * @param {String} destType the destination type.\n */\n\n\nfunction ConvertWorker(destType) {\n  GenericWorker.call(this, \"ConvertWorker to \" + destType);\n  this.destType = destType;\n}\n\nutils.inherits(ConvertWorker, GenericWorker);\n/**\n * @see GenericWorker.processChunk\n */\n\nConvertWorker.prototype.processChunk = function (chunk) {\n  this.push({\n    data: utils.transformTo(this.destType, chunk.data),\n    meta: chunk.meta\n  });\n};\n\nmodule.exports = ConvertWorker;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/jszip/lib/stream/ConvertWorker.js"],"names":["GenericWorker","require","utils","ConvertWorker","destType","call","inherits","prototype","processChunk","chunk","push","data","transformTo","meta","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;AAEA;;;;;;;AAKA,SAASE,aAAT,CAAuBC,QAAvB,EAAiC;AAC7BJ,EAAAA,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAyB,sBAAsBD,QAA/C;AACA,OAAKA,QAAL,GAAgBA,QAAhB;AACH;;AACDF,KAAK,CAACI,QAAN,CAAeH,aAAf,EAA8BH,aAA9B;AAEA;;;;AAGAG,aAAa,CAACI,SAAd,CAAwBC,YAAxB,GAAuC,UAAUC,KAAV,EAAiB;AACpD,OAAKC,IAAL,CAAU;AACNC,IAAAA,IAAI,EAAGT,KAAK,CAACU,WAAN,CAAkB,KAAKR,QAAvB,EAAiCK,KAAK,CAACE,IAAvC,CADD;AAENE,IAAAA,IAAI,EAAGJ,KAAK,CAACI;AAFP,GAAV;AAIH,CALD;;AAMAC,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["'use strict';\n\nvar GenericWorker = require('./GenericWorker');\nvar utils = require('../utils');\n\n/**\n * A worker which convert chunks to a specified type.\n * @constructor\n * @param {String} destType the destination type.\n */\nfunction ConvertWorker(destType) {\n    GenericWorker.call(this, \"ConvertWorker to \" + destType);\n    this.destType = destType;\n}\nutils.inherits(ConvertWorker, GenericWorker);\n\n/**\n * @see GenericWorker.processChunk\n */\nConvertWorker.prototype.processChunk = function (chunk) {\n    this.push({\n        data : utils.transformTo(this.destType, chunk.data),\n        meta : chunk.meta\n    });\n};\nmodule.exports = ConvertWorker;\n"]},"metadata":{},"sourceType":"script"}