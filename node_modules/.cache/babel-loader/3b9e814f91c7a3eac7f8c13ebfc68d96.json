{"ast":null,"code":"import _classCallCheck from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/fasp-core-ui/src/views/fundingSource/EditFundingSourceComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nvar initialValues = {\n  fundingSource: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    fundingSource: Yup.string().required('Please enter Funding source')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar EditFundingSourceComponent = /*#__PURE__*/function (_Component) {\n  _inherits(EditFundingSourceComponent, _Component);\n\n  function EditFundingSourceComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditFundingSourceComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditFundingSourceComponent).call(this, props));\n    _this.state = {\n      fundingSource: _this.props.location.state.fundingSource,\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditFundingSourceComponent, [{\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var fundingSource = this.state.fundingSource;\n\n      if (event.target.name == \"fundingSource\") {\n        fundingSource.label.label_en = event.target.value;\n      }\n\n      if (event.target.name == \"active\") {\n        fundingSource.active = event.target.id === \"active2\" ? false : true;\n      }\n\n      this.setState({\n        fundingSource: fundingSource\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        fundingSource: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('fundingSourceForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Update Funding Source\"), ' '), React.createElement(Formik, {\n        enableReinitialize: true,\n        initialValues: {\n          fundingSource: this.state.fundingSource.label.label_en\n        },\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          AuthenticationService.setupAxiosInterceptors();\n          FundingSourceService.updateFundingSource(_this2.state.fundingSource).then(function (response) {\n            if (response.data.status == \"Success\") {\n              _this2.props.history.push(\"/fundingSource/listFundingSource/\".concat(response.data.message));\n            } else {\n              _this2.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            switch (error.message) {\n              case \"Network Error\":\n                _this2.setState({\n                  message: error.message\n                });\n\n                break;\n\n              default:\n                _this2.setState({\n                  message: error.response.data.message\n                });\n\n                break;\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"fundingSourceForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"realmId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"Realm\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"realmId\",\n            id: \"realmId\",\n            bsSize: \"sm\",\n            readOnly: true,\n            value: _this2.state.fundingSource.realm.label.label_en,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          })), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"fundingSource\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"Funding Source\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"fundingSource\",\n            id: \"fundingSource\",\n            bsSize: \"sm\",\n            valid: !errors.fundingSource,\n            invalid: touched.fundingSource && !!errors.fundingSource,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            value: _this2.state.fundingSource.label.label_en,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, errors.fundingSource)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, \"Status\\xA0\\xA0\"), React.createElement(FormGroup, {\n            check: true,\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(Input, {\n            className: \"form-check-input\",\n            type: \"radio\",\n            id: \"active1\",\n            name: \"active\",\n            value: true,\n            checked: _this2.state.fundingSource.active === true,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }), React.createElement(Label, {\n            className: \"form-check-label\",\n            check: true,\n            htmlFor: \"inline-active1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, \"Active\")), React.createElement(FormGroup, {\n            check: true,\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(Input, {\n            className: \"form-check-input\",\n            type: \"radio\",\n            id: \"active2\",\n            name: \"active\",\n            value: false,\n            checked: _this2.state.fundingSource.active === false,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }), React.createElement(Label, {\n            className: \"form-check-label\",\n            check: true,\n            htmlFor: \"inline-active2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, \"Disabled\")))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"warning\",\n            className: \"float-right mr-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-refresh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), \" Reset\"), React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this2.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }), \" Cancel\"), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }), \"Submit\"), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/fundingSource/listFundingSource/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return EditFundingSourceComponent;\n}(Component);\n\nexport default EditFundingSourceComponent;","map":{"version":3,"sources":["/home/altius/fasp-core-ui/src/views/fundingSource/EditFundingSourceComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","FundingSourceService","AuthenticationService","initialValues","fundingSource","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","EditFundingSourceComponent","props","state","location","message","cancelClicked","bind","dataChange","event","target","name","label","label_en","value","active","id","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","flexBasis","setSubmitting","setErrors","setupAxiosInterceptors","updateFundingSource","then","response","data","status","history","push","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","realm","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\n\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nlet initialValues = {\n    fundingSource: \"\"\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        fundingSource: Yup.string()\n            .required('Please enter Funding source')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\nclass EditFundingSourceComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fundingSource: this.props.location.state.fundingSource,\n            message: ''\n        }\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n    }\n\n    dataChange(event) {\n        let { fundingSource } = this.state;\n        if (event.target.name == \"fundingSource\") {\n            fundingSource.label.label_en = event.target.value;\n        }\n        if (event.target.name == \"active\") {\n            fundingSource.active = event.target.id === \"active2\" ? false : true;\n        }\n        this.setState({\n            fundingSource\n        },\n            () => { });\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            fundingSource: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('fundingSourceForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>Update Funding Source</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                enableReinitialize={true}\n                                initialValues={{ fundingSource: this.state.fundingSource.label.label_en }}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    AuthenticationService.setupAxiosInterceptors();\n                                    FundingSourceService.updateFundingSource(this.state.fundingSource)\n                                        .then(response => {\n                                            if (response.data.status == \"Success\") {\n                                                this.props.history.push(`/fundingSource/listFundingSource/${response.data.message}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.message\n                                                })\n                                            }\n                                        })\n                                        .catch(\n                                            error => {\n                                                switch (error.message) {\n                                                    case \"Network Error\":\n                                                        this.setState({\n                                                            message: error.message\n                                                        })\n                                                        break\n                                                    default:\n                                                        this.setState({\n                                                            message: error.response.data.message\n                                                        })\n                                                        break\n                                                }\n                                            }\n                                        );\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='fundingSourceForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"realmId\">Realm</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"realmId\"\n                                                            id=\"realmId\"\n                                                            bsSize=\"sm\"\n                                                            readOnly\n                                                            value={this.state.fundingSource.realm.label.label_en}\n                                                        >\n                                                        </Input>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"fundingSource\">Funding Source</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"fundingSource\"\n                                                            id=\"fundingSource\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.fundingSource}\n                                                            invalid={touched.fundingSource && !!errors.fundingSource}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            value={this.state.fundingSource.label.label_en}\n                                                            required />\n                                                        <FormFeedback>{errors.fundingSource}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label>Status&nbsp;&nbsp;</Label>\n                                                        <FormGroup check inline>\n                                                            <Input\n                                                                className=\"form-check-input\"\n                                                                type=\"radio\"\n                                                                id=\"active1\"\n                                                                name=\"active\"\n                                                                value={true}\n                                                                checked={this.state.fundingSource.active === true}\n                                                                onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            />\n                                                            <Label\n                                                                className=\"form-check-label\"\n                                                                check htmlFor=\"inline-active1\">\n                                                                Active\n                                                                </Label>\n                                                        </FormGroup>\n                                                        <FormGroup check inline>\n                                                            <Input\n                                                                className=\"form-check-input\"\n                                                                type=\"radio\"\n                                                                id=\"active2\"\n                                                                name=\"active\"\n                                                                value={false}\n                                                                checked={this.state.fundingSource.active === false}\n                                                                onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            />\n                                                            <Label\n                                                                className=\"form-check-label\"\n                                                                check htmlFor=\"inline-active2\">\n                                                                Disabled\n                                                                </Label>\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                        <Button type=\"reset\" size=\"sm\" color=\"warning\" className=\"float-right mr-1\"><i className=\"fa fa-refresh\"></i> Reset</Button>\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> Cancel</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>Submit</Button>\n                                                        &nbsp;\n                                                    </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n\n                                        )} />\n\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/fundingSource/listFundingSource/` + \"Action Canceled\")\n    }\n}\n\nexport default EditFundingSourceComponent;\n"]},"metadata":{},"sourceType":"module"}