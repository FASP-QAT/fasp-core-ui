{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react-dom'), require('react')) : typeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) : global.ReactDraggable = factory(global.ReactDOM, global.React);\n})(this, function (ReactDOM, React) {\n  'use strict';\n\n  ReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n\n  function makeEmptyFunction(arg) {\n    return function () {\n      return arg;\n    };\n  }\n  /**\n   * This function accepts and discards inputs; it has no side effects. This is\n   * primarily useful idiomatically for overridable function endpoints which\n   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n   */\n\n\n  var emptyFunction = function emptyFunction() {};\n\n  emptyFunction.thatReturns = makeEmptyFunction;\n  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n  emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n  emptyFunction.thatReturnsThis = function () {\n    return this;\n  };\n\n  emptyFunction.thatReturnsArgument = function (arg) {\n    return arg;\n  };\n\n  var emptyFunction_1 = emptyFunction;\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   */\n\n  /**\n   * Use invariant() to assert state which your program assumes to be true.\n   *\n   * Provide sprintf-style format (only %s is supported) and arguments\n   * to provide information about what broke and what you were\n   * expecting.\n   *\n   * The invariant message will be stripped in production, but the invariant\n   * will remain to ensure logic does not differ in production.\n   */\n\n  var validateFormat = function validateFormat(format) {};\n\n  {\n    validateFormat = function validateFormat(format) {\n      if (format === undefined) {\n        throw new Error('invariant requires an error message argument');\n      }\n    };\n  }\n\n  function invariant(condition, format, a, b, c, d, e, f) {\n    validateFormat(format);\n\n    if (!condition) {\n      var error;\n\n      if (format === undefined) {\n        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n      } else {\n        var args = [a, b, c, d, e, f];\n        var argIndex = 0;\n        error = new Error(format.replace(/%s/g, function () {\n          return args[argIndex++];\n        }));\n        error.name = 'Invariant Violation';\n      }\n\n      error.framesToPop = 1; // we don't care about invariant's own frame\n\n      throw error;\n    }\n  }\n\n  var invariant_1 = invariant;\n  /**\n   * Similar to invariant but only logs a warning if the condition is not met.\n   * This can be used to log issues in development environments in critical\n   * paths. Removing the logging code for production environments will keep the\n   * same logic and follow the same code paths.\n   */\n\n  var warning = emptyFunction_1;\n  {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  }\n  var warning_1 = warning;\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret;\n  {\n    var invariant$1 = invariant_1;\n    var warning$1 = warning_1;\n    var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n    var loggedTypeFailures = {};\n  }\n  /**\n   * Assert that the values match with the type specs.\n   * Error messages are memorized and will only be shown once.\n   *\n   * @param {object} typeSpecs Map of name to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @param {string} componentName Name of the component for error messages.\n   * @param {?Function} getStack Returns the component stack.\n   * @private\n   */\n\n  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n    {\n      for (var typeSpecName in typeSpecs) {\n        if (typeSpecs.hasOwnProperty(typeSpecName)) {\n          var error; // Prop type validation may throw. In case they do, we don't want to\n          // fail the render phase where it didn't fail before. So we log it.\n          // After these have been cleaned up, we'll let them throw.\n\n          try {\n            // This is intentionally an invariant that gets caught. It's the same\n            // behavior as without this statement except with a better message.\n            invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n          } catch (ex) {\n            error = ex;\n          }\n\n          warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\n          if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n            // Only monitor this failure once because there tends to be a lot of the\n            // same error.\n            loggedTypeFailures[error.message] = true;\n            var stack = getStack ? getStack() : '';\n            warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n          }\n        }\n      }\n    }\n  }\n\n  var checkPropTypes_1 = checkPropTypes;\n\n  var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {\n    /* global Symbol */\n    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n    /**\n     * Returns the iterator method function contained on the iterable object.\n     *\n     * Be sure to invoke the function with the iterable as context:\n     *\n     *     var iteratorFn = getIteratorFn(myIterable);\n     *     if (iteratorFn) {\n     *       var iterator = iteratorFn.call(myIterable);\n     *       ...\n     *     }\n     *\n     * @param {?object} maybeIterable\n     * @return {?function}\n     */\n\n    function getIteratorFn(maybeIterable) {\n      var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n      if (typeof iteratorFn === 'function') {\n        return iteratorFn;\n      }\n    }\n    /**\n     * Collection of methods that allow declaration and validation of props that are\n     * supplied to React components. Example usage:\n     *\n     *   var Props = require('ReactPropTypes');\n     *   var MyArticle = React.createClass({\n     *     propTypes: {\n     *       // An optional string prop named \"description\".\n     *       description: Props.string,\n     *\n     *       // A required enum prop named \"category\".\n     *       category: Props.oneOf(['News','Photos']).isRequired,\n     *\n     *       // A prop named \"dialog\" that requires an instance of Dialog.\n     *       dialog: Props.instanceOf(Dialog).isRequired\n     *     },\n     *     render: function() { ... }\n     *   });\n     *\n     * A more formal specification of how these methods are used:\n     *\n     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n     *   decl := ReactPropTypes.{type}(.isRequired)?\n     *\n     * Each and every declaration produces a function with the same signature. This\n     * allows the creation of custom validation functions. For example:\n     *\n     *  var MyLink = React.createClass({\n     *    propTypes: {\n     *      // An optional string or URI prop named \"href\".\n     *      href: function(props, propName, componentName) {\n     *        var propValue = props[propName];\n     *        if (propValue != null && typeof propValue !== 'string' &&\n     *            !(propValue instanceof URI)) {\n     *          return new Error(\n     *            'Expected a string or an URI for ' + propName + ' in ' +\n     *            componentName\n     *          );\n     *        }\n     *      }\n     *    },\n     *    render: function() {...}\n     *  });\n     *\n     * @internal\n     */\n\n\n    var ANONYMOUS = '<<anonymous>>'; // Important!\n    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n    var ReactPropTypes = {\n      array: createPrimitiveTypeChecker('array'),\n      bool: createPrimitiveTypeChecker('boolean'),\n      func: createPrimitiveTypeChecker('function'),\n      number: createPrimitiveTypeChecker('number'),\n      object: createPrimitiveTypeChecker('object'),\n      string: createPrimitiveTypeChecker('string'),\n      symbol: createPrimitiveTypeChecker('symbol'),\n      any: createAnyTypeChecker(),\n      arrayOf: createArrayOfTypeChecker,\n      element: createElementTypeChecker(),\n      instanceOf: createInstanceTypeChecker,\n      node: createNodeChecker(),\n      objectOf: createObjectOfTypeChecker,\n      oneOf: createEnumTypeChecker,\n      oneOfType: createUnionTypeChecker,\n      shape: createShapeTypeChecker,\n      exact: createStrictShapeTypeChecker\n    };\n    /**\n     * inlined Object.is polyfill to avoid requiring consumers ship their own\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n     */\n\n    /*eslint-disable no-self-compare*/\n\n    function is(x, y) {\n      // SameValue algorithm\n      if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n      } else {\n        // Step 6.a: NaN == NaN\n        return x !== x && y !== y;\n      }\n    }\n    /*eslint-enable no-self-compare*/\n\n    /**\n     * We use an Error-like object for backward compatibility as people may call\n     * PropTypes directly and inspect their output. However, we don't use real\n     * Errors anymore. We don't inspect their stack anyway, and creating them\n     * is prohibitively expensive if they are created too often, such as what\n     * happens in oneOfType() for any type before the one that matched.\n     */\n\n\n    function PropTypeError(message) {\n      this.message = message;\n      this.stack = '';\n    } // Make `instanceof Error` still work for returned errors.\n\n\n    PropTypeError.prototype = Error.prototype;\n\n    function createChainableTypeChecker(validate) {\n      {\n        var manualPropTypeCallCache = {};\n        var manualPropTypeWarningCount = 0;\n      }\n\n      function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n        componentName = componentName || ANONYMOUS;\n        propFullName = propFullName || propName;\n\n        if (secret !== ReactPropTypesSecret_1) {\n          if (throwOnDirectAccess) {\n            // New behavior only for users of `prop-types` package\n            invariant_1(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n            // Old behavior for people using React.PropTypes\n            var cacheKey = componentName + ':' + propName;\n\n            if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3) {\n              warning_1(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n              manualPropTypeCallCache[cacheKey] = true;\n              manualPropTypeWarningCount++;\n            }\n          }\n        }\n\n        if (props[propName] == null) {\n          if (isRequired) {\n            if (props[propName] === null) {\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n            }\n\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n          }\n\n          return null;\n        } else {\n          return validate(props, propName, componentName, location, propFullName);\n        }\n      }\n\n      var chainedCheckType = checkType.bind(null, false);\n      chainedCheckType.isRequired = checkType.bind(null, true);\n      return chainedCheckType;\n    }\n\n    function createPrimitiveTypeChecker(expectedType) {\n      function validate(props, propName, componentName, location, propFullName, secret) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== expectedType) {\n          // `propValue` being instance of, say, date/regexp, pass the 'object'\n          // check, but we can offer a more precise error message here rather than\n          // 'of type `object`'.\n          var preciseType = getPreciseType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createAnyTypeChecker() {\n      return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n    }\n\n    function createArrayOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n        }\n\n        var propValue = props[propName];\n\n        if (!Array.isArray(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n        }\n\n        for (var i = 0; i < propValue.length; i++) {\n          var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createElementTypeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        if (!isValidElement(propValue)) {\n          var propType = getPropType(propValue);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createInstanceTypeChecker(expectedClass) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!(props[propName] instanceof expectedClass)) {\n          var expectedClassName = expectedClass.name || ANONYMOUS;\n          var actualClassName = getClassName(props[propName]);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createEnumTypeChecker(expectedValues) {\n      if (!Array.isArray(expectedValues)) {\n        warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n        return emptyFunction_1.thatReturnsNull;\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n\n        for (var i = 0; i < expectedValues.length; i++) {\n          if (is(propValue, expectedValues[i])) {\n            return null;\n          }\n        }\n\n        var valuesString = JSON.stringify(expectedValues);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createObjectOfTypeChecker(typeChecker) {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (typeof typeChecker !== 'function') {\n          return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n        }\n\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n        }\n\n        for (var key in propValue) {\n          if (propValue.hasOwnProperty(key)) {\n            var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createUnionTypeChecker(arrayOfTypeCheckers) {\n      if (!Array.isArray(arrayOfTypeCheckers)) {\n        warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n        return emptyFunction_1.thatReturnsNull;\n      }\n\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n\n        if (typeof checker !== 'function') {\n          warning_1(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n          return emptyFunction_1.thatReturnsNull;\n        }\n      }\n\n      function validate(props, propName, componentName, location, propFullName) {\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n            return null;\n          }\n        }\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createNodeChecker() {\n      function validate(props, propName, componentName, location, propFullName) {\n        if (!isNode(props[propName])) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        }\n\n        for (var key in shapeTypes) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            continue;\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function createStrictShapeTypeChecker(shapeTypes) {\n      function validate(props, propName, componentName, location, propFullName) {\n        var propValue = props[propName];\n        var propType = getPropType(propValue);\n\n        if (propType !== 'object') {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n        } // We need to check all keys in case some are required but missing from\n        // props.\n\n\n        var allKeys = objectAssign({}, props[propName], shapeTypes);\n\n        for (var key in allKeys) {\n          var checker = shapeTypes[key];\n\n          if (!checker) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n          }\n\n          var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\n          if (error) {\n            return error;\n          }\n        }\n\n        return null;\n      }\n\n      return createChainableTypeChecker(validate);\n    }\n\n    function isNode(propValue) {\n      switch (typeof propValue) {\n        case 'number':\n        case 'string':\n        case 'undefined':\n          return true;\n\n        case 'boolean':\n          return !propValue;\n\n        case 'object':\n          if (Array.isArray(propValue)) {\n            return propValue.every(isNode);\n          }\n\n          if (propValue === null || isValidElement(propValue)) {\n            return true;\n          }\n\n          var iteratorFn = getIteratorFn(propValue);\n\n          if (iteratorFn) {\n            var iterator = iteratorFn.call(propValue);\n            var step;\n\n            if (iteratorFn !== propValue.entries) {\n              while (!(step = iterator.next()).done) {\n                if (!isNode(step.value)) {\n                  return false;\n                }\n              }\n            } else {\n              // Iterator will provide entry [k,v] tuples rather than values.\n              while (!(step = iterator.next()).done) {\n                var entry = step.value;\n\n                if (entry) {\n                  if (!isNode(entry[1])) {\n                    return false;\n                  }\n                }\n              }\n            }\n          } else {\n            return false;\n          }\n\n          return true;\n\n        default:\n          return false;\n      }\n    }\n\n    function isSymbol(propType, propValue) {\n      // Native Symbol.\n      if (propType === 'symbol') {\n        return true;\n      } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n      if (propValue['@@toStringTag'] === 'Symbol') {\n        return true;\n      } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n      if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n        return true;\n      }\n\n      return false;\n    } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n    function getPropType(propValue) {\n      var propType = typeof propValue;\n\n      if (Array.isArray(propValue)) {\n        return 'array';\n      }\n\n      if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return 'object';\n      }\n\n      if (isSymbol(propType, propValue)) {\n        return 'symbol';\n      }\n\n      return propType;\n    } // This handles more types than `getPropType`. Only used for error messages.\n    // See `createPrimitiveTypeChecker`.\n\n\n    function getPreciseType(propValue) {\n      if (typeof propValue === 'undefined' || propValue === null) {\n        return '' + propValue;\n      }\n\n      var propType = getPropType(propValue);\n\n      if (propType === 'object') {\n        if (propValue instanceof Date) {\n          return 'date';\n        } else if (propValue instanceof RegExp) {\n          return 'regexp';\n        }\n      }\n\n      return propType;\n    } // Returns a string that is postfixed to a warning about an invalid type.\n    // For example, \"undefined\" or \"of type array\"\n\n\n    function getPostfixForTypeWarning(value) {\n      var type = getPreciseType(value);\n\n      switch (type) {\n        case 'array':\n        case 'object':\n          return 'an ' + type;\n\n        case 'boolean':\n        case 'date':\n        case 'regexp':\n          return 'a ' + type;\n\n        default:\n          return type;\n      }\n    } // Returns class name of the object, if any.\n\n\n    function getClassName(propValue) {\n      if (!propValue.constructor || !propValue.constructor.name) {\n        return ANONYMOUS;\n      }\n\n      return propValue.constructor.name;\n    }\n\n    ReactPropTypes.checkPropTypes = checkPropTypes_1;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n\n  var propTypes = createCommonjsModule(function (module) {\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n    {\n      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n      var isValidElement = function isValidElement(object) {\n        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }; // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n\n      var throwOnDirectAccess = true;\n      module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n    }\n  });\n  var classnames = createCommonjsModule(function (module) {\n    /*!\n      Copyright (c) 2016 Jed Watson.\n      Licensed under the MIT License (MIT), see\n      http://jedwatson.github.io/classnames\n    */\n\n    /* global define */\n    (function () {\n      var hasOwn = {}.hasOwnProperty;\n\n      function classNames() {\n        var classes = [];\n\n        for (var i = 0; i < arguments.length; i++) {\n          var arg = arguments[i];\n          if (!arg) continue;\n          var argType = typeof arg;\n\n          if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n          } else if (Array.isArray(arg)) {\n            classes.push(classNames.apply(null, arg));\n          } else if (argType === 'object') {\n            for (var key in arg) {\n              if (hasOwn.call(arg, key) && arg[key]) {\n                classes.push(key);\n              }\n            }\n          }\n        }\n\n        return classes.join(' ');\n      }\n\n      if ('object' !== 'undefined' && module.exports) {\n        module.exports = classNames;\n      } else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n        // register as 'classnames', consistent with npm package name\n        undefined('classnames', [], function () {\n          return classNames;\n        });\n      } else {\n        window.classNames = classNames;\n      }\n    })();\n  }); // @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\n  function findInArray(array\n  /*: Array<any> | TouchList*/\n  , callback\n  /*: Function*/\n  )\n  /*: any*/\n  {\n    for (var i = 0, length = array.length; i < length; i++) {\n      if (callback.apply(callback, [array[i], i, array])) return array[i];\n    }\n  }\n\n  function isFunction(func\n  /*: any*/\n  )\n  /*: boolean*/\n  {\n    return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n  }\n\n  function isNum(num\n  /*: any*/\n  )\n  /*: boolean*/\n  {\n    return typeof num === 'number' && !isNaN(num);\n  }\n\n  function int(a\n  /*: string*/\n  )\n  /*: number*/\n  {\n    return parseInt(a, 10);\n  }\n\n  function dontSetMe(props\n  /*: Object*/\n  , propName\n  /*: string*/\n  , componentName\n  /*: string*/\n  ) {\n    if (props[propName]) {\n      return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n    }\n  }\n\n  var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\n  function getPrefix()\n  /*: string*/\n  {\n    var prop\n    /*: string*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform'; // Checking specifically for 'window.document' is for pseudo-browser server-side\n    // environments that define 'window' as the global context.\n    // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\n    if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n    var style = window.document.documentElement.style;\n    if (prop in style) return '';\n\n    for (var i = 0; i < prefixes.length; i++) {\n      if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n    }\n\n    return '';\n  }\n\n  function browserPrefixToKey(prop\n  /*: string*/\n  , prefix\n  /*: string*/\n  )\n  /*: string*/\n  {\n    return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n  }\n\n  function kebabToTitleCase(str\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var out = '';\n    var shouldCapitalize = true;\n\n    for (var i = 0; i < str.length; i++) {\n      if (shouldCapitalize) {\n        out += str[i].toUpperCase();\n        shouldCapitalize = false;\n      } else if (str[i] === '-') {\n        shouldCapitalize = true;\n      } else {\n        out += str[i];\n      }\n    }\n\n    return out;\n  } // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n  // Note that you may have to re-test for certain things; for instance, Chrome 50\n  // can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\n  var browserPrefix = getPrefix();\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var defineProperty = function defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var inherits = function inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  var slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  /*:: import type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';*/\n\n\n  var matchesSelectorFunc = '';\n\n  function matchesSelector(el\n  /*: Node*/\n  , selector\n  /*: string*/\n  )\n  /*: boolean*/\n  {\n    if (!matchesSelectorFunc) {\n      matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n        // $FlowIgnore: Doesn't think elements are indexable\n        return isFunction(el[method]);\n      });\n    } // Might not be found entirely (not an Element?) - in that case, bail\n    // $FlowIgnore: Doesn't think elements are indexable\n\n\n    if (!isFunction(el[matchesSelectorFunc])) return false; // $FlowIgnore: Doesn't think elements are indexable\n\n    return el[matchesSelectorFunc](selector);\n  } // Works up the tree to the draggable itself attempting to match selector.\n\n\n  function matchesSelectorAndParentsTo(el\n  /*: Node*/\n  , selector\n  /*: string*/\n  , baseNode\n  /*: Node*/\n  )\n  /*: boolean*/\n  {\n    var node = el;\n\n    do {\n      if (matchesSelector(node, selector)) return true;\n      if (node === baseNode) return false;\n      node = node.parentNode;\n    } while (node);\n\n    return false;\n  }\n\n  function addEvent(el\n  /*: ?Node*/\n  , event\n  /*: string*/\n  , handler\n  /*: Function*/\n  )\n  /*: void*/\n  {\n    if (!el) {\n      return;\n    }\n\n    if (el.attachEvent) {\n      el.attachEvent('on' + event, handler);\n    } else if (el.addEventListener) {\n      el.addEventListener(event, handler, true);\n    } else {\n      // $FlowIgnore: Doesn't think elements are indexable\n      el['on' + event] = handler;\n    }\n  }\n\n  function removeEvent(el\n  /*: ?Node*/\n  , event\n  /*: string*/\n  , handler\n  /*: Function*/\n  )\n  /*: void*/\n  {\n    if (!el) {\n      return;\n    }\n\n    if (el.detachEvent) {\n      el.detachEvent('on' + event, handler);\n    } else if (el.removeEventListener) {\n      el.removeEventListener(event, handler, true);\n    } else {\n      // $FlowIgnore: Doesn't think elements are indexable\n      el['on' + event] = null;\n    }\n  }\n\n  function outerHeight(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    // This is deliberately excluding margin for our calculations, since we are using\n    // offsetTop which is including margin. See getBoundPosition\n    var height = node.clientHeight;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    height += int(computedStyle.borderTopWidth);\n    height += int(computedStyle.borderBottomWidth);\n    return height;\n  }\n\n  function outerWidth(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    // This is deliberately excluding margin for our calculations, since we are using\n    // offsetLeft which is including margin. See getBoundPosition\n    var width = node.clientWidth;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    width += int(computedStyle.borderLeftWidth);\n    width += int(computedStyle.borderRightWidth);\n    return width;\n  }\n\n  function innerHeight(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    var height = node.clientHeight;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    height -= int(computedStyle.paddingTop);\n    height -= int(computedStyle.paddingBottom);\n    return height;\n  }\n\n  function innerWidth(node\n  /*: HTMLElement*/\n  )\n  /*: number*/\n  {\n    var width = node.clientWidth;\n    var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n    width -= int(computedStyle.paddingLeft);\n    width -= int(computedStyle.paddingRight);\n    return width;\n  } // Get from offsetParent\n\n\n  function offsetXYFromParent(evt\n  /*: {clientX: number, clientY: number}*/\n  , offsetParent\n  /*: HTMLElement*/\n  )\n  /*: ControlPosition*/\n  {\n    var isBody = offsetParent === offsetParent.ownerDocument.body;\n    var offsetParentRect = isBody ? {\n      left: 0,\n      top: 0\n    } : offsetParent.getBoundingClientRect();\n    var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n    var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function createCSSTransform(controlPos\n  /*: ControlPosition*/\n  , positionOffset\n  /*: PositionOffsetControlPosition*/\n  )\n  /*: Object*/\n  {\n    var translation = getTranslation(controlPos, positionOffset, 'px');\n    return defineProperty({}, browserPrefixToKey('transform', browserPrefix), translation);\n  }\n\n  function createSVGTransform(controlPos\n  /*: ControlPosition*/\n  , positionOffset\n  /*: PositionOffsetControlPosition*/\n  )\n  /*: string*/\n  {\n    var translation = getTranslation(controlPos, positionOffset, '');\n    return translation;\n  }\n\n  function getTranslation(_ref2, positionOffset\n  /*: PositionOffsetControlPosition*/\n  , unitSuffix\n  /*: string*/\n  )\n  /*: string*/\n  {\n    var x = _ref2.x,\n        y = _ref2.y;\n    var translation = 'translate(' + x + unitSuffix + ',' + y + unitSuffix + ')';\n\n    if (positionOffset) {\n      var defaultX = '' + (typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n      var defaultY = '' + (typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n      translation = 'translate(' + defaultX + ', ' + defaultY + ')' + translation;\n    }\n\n    return translation;\n  }\n\n  function getTouch(e\n  /*: MouseTouchEvent*/\n  , identifier\n  /*: number*/\n  )\n  /*: ?{clientX: number, clientY: number}*/\n  {\n    return e.targetTouches && findInArray(e.targetTouches, function (t) {\n      return identifier === t.identifier;\n    }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n      return identifier === t.identifier;\n    });\n  }\n\n  function getTouchIdentifier(e\n  /*: MouseTouchEvent*/\n  )\n  /*: ?number*/\n  {\n    if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n    if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n  } // User-select Hacks:\n  //\n  // Useful for preventing blue highlights all over everything when dragging.\n  // Note we're passing `document` b/c we could be iframed\n\n\n  function addUserSelectStyles(doc\n  /*: ?Document*/\n  ) {\n    if (!doc) return;\n    var styleEl = doc.getElementById('react-draggable-style-el');\n\n    if (!styleEl) {\n      styleEl = doc.createElement('style');\n      styleEl.type = 'text/css';\n      styleEl.id = 'react-draggable-style-el';\n      styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n      styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n      doc.getElementsByTagName('head')[0].appendChild(styleEl);\n    }\n\n    if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n  }\n\n  function removeUserSelectStyles(doc\n  /*: ?Document*/\n  ) {\n    try {\n      if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection'); // $FlowIgnore: IE\n\n      if (doc.selection) {\n        // $FlowIgnore: IE\n        doc.selection.empty();\n      } else {\n        window.getSelection().removeAllRanges(); // remove selection caused by scroll\n      }\n    } catch (e) {// probably IE\n    }\n  }\n\n  function styleHacks()\n  /*: Object*/\n  {\n    var childStyle\n    /*: Object*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Workaround IE pointer events; see #51\n    // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\n    return _extends({\n      touchAction: 'none'\n    }, childStyle);\n  }\n\n  function addClassName(el\n  /*: HTMLElement*/\n  , className\n  /*: string*/\n  ) {\n    if (el.classList) {\n      el.classList.add(className);\n    } else {\n      if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n        el.className += ' ' + className;\n      }\n    }\n  }\n\n  function removeClassName(el\n  /*: HTMLElement*/\n  , className\n  /*: string*/\n  ) {\n    if (el.classList) {\n      el.classList.remove(className);\n    } else {\n      el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n    }\n  }\n  /*:: import type Draggable from '../Draggable';*/\n\n  /*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\n  /*:: import type DraggableCore from '../DraggableCore';*/\n\n\n  function getBoundPosition(draggable\n  /*: Draggable*/\n  , x\n  /*: number*/\n  , y\n  /*: number*/\n  )\n  /*: [number, number]*/\n  {\n    // If no bounds, short-circuit and move on\n    if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n    var bounds = draggable.props.bounds;\n    bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n    var node = findDOMNode(draggable);\n\n    if (typeof bounds === 'string') {\n      var ownerDocument = node.ownerDocument;\n      var ownerWindow = ownerDocument.defaultView;\n      var boundNode = void 0;\n\n      if (bounds === 'parent') {\n        boundNode = node.parentNode;\n      } else {\n        boundNode = ownerDocument.querySelector(bounds);\n      }\n\n      if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n        throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n      }\n\n      var nodeStyle = ownerWindow.getComputedStyle(node);\n      var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n      bounds = {\n        left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n        top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n        right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n        bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n      };\n    } // Keep x and y below right and bottom limits...\n\n\n    if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n    if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n    if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n    if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n    return [x, y];\n  }\n\n  function snapToGrid(grid\n  /*: [number, number]*/\n  , pendingX\n  /*: number*/\n  , pendingY\n  /*: number*/\n  )\n  /*: [number, number]*/\n  {\n    var x = Math.round(pendingX / grid[0]) * grid[0];\n    var y = Math.round(pendingY / grid[1]) * grid[1];\n    return [x, y];\n  }\n\n  function canDragX(draggable\n  /*: Draggable*/\n  )\n  /*: boolean*/\n  {\n    return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n  }\n\n  function canDragY(draggable\n  /*: Draggable*/\n  )\n  /*: boolean*/\n  {\n    return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n  } // Get {x, y} positions from event.\n\n\n  function getControlPosition(e\n  /*: MouseTouchEvent*/\n  , touchIdentifier\n  /*: ?number*/\n  , draggableCore\n  /*: DraggableCore*/\n  )\n  /*: ?ControlPosition*/\n  {\n    var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n    if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n    var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n    var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n    return offsetXYFromParent(touchObj || e, offsetParent);\n  } // Create an data object exposed by <DraggableCore>'s events\n\n\n  function createCoreData(draggable\n  /*: DraggableCore*/\n  , x\n  /*: number*/\n  , y\n  /*: number*/\n  )\n  /*: DraggableData*/\n  {\n    var state = draggable.state;\n    var isStart = !isNum(state.lastX);\n    var node = findDOMNode(draggable);\n\n    if (isStart) {\n      // If this is our first move, use the x and y as last coords.\n      return {\n        node: node,\n        deltaX: 0,\n        deltaY: 0,\n        lastX: x,\n        lastY: y,\n        x: x,\n        y: y\n      };\n    } else {\n      // Otherwise calculate proper values.\n      return {\n        node: node,\n        deltaX: x - state.lastX,\n        deltaY: y - state.lastY,\n        lastX: state.lastX,\n        lastY: state.lastY,\n        x: x,\n        y: y\n      };\n    }\n  } // Create an data exposed by <Draggable>'s events\n\n\n  function createDraggableData(draggable\n  /*: Draggable*/\n  , coreData\n  /*: DraggableData*/\n  )\n  /*: DraggableData*/\n  {\n    var scale = draggable.props.scale;\n    return {\n      node: coreData.node,\n      x: draggable.state.x + coreData.deltaX / scale,\n      y: draggable.state.y + coreData.deltaY / scale,\n      deltaX: coreData.deltaX / scale,\n      deltaY: coreData.deltaY / scale,\n      lastX: draggable.state.x,\n      lastY: draggable.state.y\n    };\n  } // A lot faster than stringify/parse\n\n\n  function cloneBounds(bounds\n  /*: Bounds*/\n  )\n  /*: Bounds*/\n  {\n    return {\n      left: bounds.left,\n      top: bounds.top,\n      right: bounds.right,\n      bottom: bounds.bottom\n    };\n  }\n\n  function findDOMNode(draggable\n  /*: Draggable | DraggableCore*/\n  )\n  /*: HTMLElement*/\n  {\n    var node = ReactDOM.findDOMNode(draggable);\n\n    if (!node) {\n      throw new Error('<DraggableCore>: Unmounted during event!');\n    } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n    return node;\n  }\n  /*eslint no-console:0*/\n\n\n  function log() {}\n  /*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n  // Simple abstraction for dragging events names.\n\n  /*:: import type {Element as ReactElement} from 'react';*/\n\n\n  var eventsFor = {\n    touch: {\n      start: 'touchstart',\n      move: 'touchmove',\n      stop: 'touchend'\n    },\n    mouse: {\n      start: 'mousedown',\n      move: 'mousemove',\n      stop: 'mouseup'\n    }\n  }; // Default to mouse events.\n\n  var dragEventFor = eventsFor.mouse;\n  /*:: type DraggableCoreState = {\n    dragging: boolean,\n    lastX: number,\n    lastY: number,\n    touchIdentifier: ?number\n  };*/\n\n  /*:: export type DraggableBounds = {\n    left: number,\n    right: number,\n    top: number,\n    bottom: number,\n  };*/\n\n  /*:: export type DraggableData = {\n    node: HTMLElement,\n    x: number, y: number,\n    deltaX: number, deltaY: number,\n    lastX: number, lastY: number,\n  };*/\n\n  /*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\n  /*:: export type ControlPosition = {x: number, y: number};*/\n\n  /*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n  //\n  // Define <DraggableCore>.\n  //\n  // <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n  // work well with libraries that require more control over the element.\n  //\n\n  /*:: export type DraggableCoreProps = {\n    allowAnyClick: boolean,\n    cancel: string,\n    children: ReactElement<any>,\n    disabled: boolean,\n    enableUserSelectHack: boolean,\n    offsetParent: HTMLElement,\n    grid: [number, number],\n    handle: string,\n    onStart: DraggableEventHandler,\n    onDrag: DraggableEventHandler,\n    onStop: DraggableEventHandler,\n    onMouseDown: (e: MouseEvent) => void,\n  };*/\n\n  var DraggableCore = function (_React$Component) {\n    inherits(DraggableCore, _React$Component);\n\n    function DraggableCore() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      classCallCheck(this, DraggableCore);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        dragging: false,\n        // Used while dragging to determine deltas.\n        lastX: NaN,\n        lastY: NaN,\n        touchIdentifier: null\n      }, _this.handleDragStart = function (e) {\n        // Make it possible to attach event handlers on top of this one.\n        _this.props.onMouseDown(e); // Only accept left-clicks.\n\n\n        if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Get nodes. Be sure to grab relative document (could be iframed)\n\n        var thisNode = ReactDOM.findDOMNode(_this);\n\n        if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n          throw new Error('<DraggableCore> not mounted on DragStart!');\n        }\n\n        var ownerDocument = thisNode.ownerDocument; // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n        if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n          return;\n        } // Set touch identifier in component state if this is a touch event. This allows us to\n        // distinguish between individual touches on multitouch screens by identifying which\n        // touchpoint was set to this element.\n\n\n        var touchIdentifier = getTouchIdentifier(e);\n\n        _this.setState({\n          touchIdentifier: touchIdentifier\n        }); // Get the current drag point from the event. This is used as the offset.\n\n\n        var position = getControlPosition(e, touchIdentifier, _this);\n        if (position == null) return; // not possible but satisfies flow\n\n        var x = position.x,\n            y = position.y; // Create an event object with all the data parents need to make a decision here.\n\n        var coreEvent = createCoreData(_this, x, y); // Call event handler. If it returns explicit false, cancel.\n\n        log('calling', _this.props.onStart);\n\n        var shouldUpdate = _this.props.onStart(e, coreEvent);\n\n        if (shouldUpdate === false) return; // Add a style to the body to disable user-select. This prevents text from\n        // being selected all over the page.\n\n        if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument); // Initiate dragging. Set the current x and y as offsets\n        // so we know how much we've moved during the drag. This allows us\n        // to drag elements around even if they have been moved, without issue.\n\n        _this.setState({\n          dragging: true,\n          lastX: x,\n          lastY: y\n        }); // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n        // this element. We use different events depending on whether or not we have detected that this\n        // is a touch-capable device.\n\n\n        addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n        addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n      }, _this.handleDrag = function (e) {\n        // Prevent scrolling on mobile devices, like ipad/iphone.\n        if (e.type === 'touchmove') e.preventDefault(); // Get the current drag point from the event. This is used as the offset.\n\n        var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n        if (position == null) return;\n        var x = position.x,\n            y = position.y; // Snap to grid if prop has been provided\n\n        if (Array.isArray(_this.props.grid)) {\n          var _deltaX = x - _this.state.lastX,\n              _deltaY = y - _this.state.lastY;\n\n          var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n          var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n          _deltaX = _snapToGrid2[0];\n          _deltaY = _snapToGrid2[1];\n          if (!_deltaX && !_deltaY) return; // skip useless drag\n\n          x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n        }\n\n        var coreEvent = createCoreData(_this, x, y); // Call event handler. If it returns explicit false, trigger end.\n\n        var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\n        if (shouldUpdate === false) {\n          try {\n            // $FlowIgnore\n            _this.handleDragStop(new MouseEvent('mouseup'));\n          } catch (err) {\n            // Old browsers\n            var event = document.createEvent('MouseEvents')\n            /*: any*/\n            ; // I see why this insanity was deprecated\n            // $FlowIgnore\n\n            event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n            _this.handleDragStop(event);\n          }\n\n          return;\n        }\n\n        _this.setState({\n          lastX: x,\n          lastY: y\n        });\n      }, _this.handleDragStop = function (e) {\n        if (!_this.state.dragging) return;\n        var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n        if (position == null) return;\n        var x = position.x,\n            y = position.y;\n        var coreEvent = createCoreData(_this, x, y);\n        var thisNode = ReactDOM.findDOMNode(_this);\n\n        if (thisNode) {\n          // Remove user-select hack\n          if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n        } // Reset the el.\n\n\n        _this.setState({\n          dragging: false,\n          lastX: NaN,\n          lastY: NaN\n        }); // Call event handler\n\n\n        _this.props.onStop(e, coreEvent);\n\n        if (thisNode) {\n          removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n          removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n        }\n      }, _this.onMouseDown = function (e) {\n        dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n        return _this.handleDragStart(e);\n      }, _this.onMouseUp = function (e) {\n        dragEventFor = eventsFor.mouse;\n        return _this.handleDragStop(e);\n      }, _this.onTouchStart = function (e) {\n        // We're on a touch device now, so change the event handlers\n        dragEventFor = eventsFor.touch;\n        return _this.handleDragStart(e);\n      }, _this.onTouchEnd = function (e) {\n        // We're on a touch device now, so change the event handlers\n        dragEventFor = eventsFor.touch;\n        return _this.handleDragStop(e);\n      }, _temp), possibleConstructorReturn(_this, _ret);\n    }\n\n    createClass(DraggableCore, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n        // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n        var thisNode = ReactDOM.findDOMNode(this);\n\n        if (thisNode) {\n          var ownerDocument = thisNode.ownerDocument;\n          removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n          removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n          removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n          removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n          if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n        }\n      } // Same as onMouseDown (start drag), but now consider this a touch device.\n\n    }, {\n      key: 'render',\n      value: function render() {\n        // Reuse the child provided\n        // This makes it flexible to use whatever element is wanted (div, ul, etc)\n        return React.cloneElement(React.Children.only(this.props.children), {\n          style: styleHacks(this.props.children.props.style),\n          // Note: mouseMove handler is attached to document so it will still function\n          // when the user drags quickly and leaves the bounds of the element.\n          onMouseDown: this.onMouseDown,\n          onTouchStart: this.onTouchStart,\n          onMouseUp: this.onMouseUp,\n          onTouchEnd: this.onTouchEnd\n        });\n      }\n    }]);\n    return DraggableCore;\n  }(React.Component);\n\n  DraggableCore.displayName = 'DraggableCore';\n  DraggableCore.propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: propTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     */\n    disabled: propTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: propTypes.bool,\n\n    /**\n     * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n     * instead of using the parent node.\n     */\n    offsetParent: function offsetParent(props\n    /*: DraggableCoreProps*/\n    , propName\n    /*: $Keys<DraggableCoreProps>*/\n    ) {\n      if (props[propName] && props[propName].nodeType !== 1) {\n        throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n      }\n    },\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     */\n    grid: propTypes.arrayOf(propTypes.number),\n\n    /**\n     * `scale` specifies the scale of the area you are dragging inside of. It allows\n     * the drag deltas to scale correctly with how far zoomed in/out you are.\n     */\n    scale: propTypes.number,\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: propTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *                     <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: propTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onStart: propTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onDrag: propTypes.func,\n\n    /**\n     * Called when dragging stops.\n     * If this function returns the boolean false, the drag will remain active.\n     */\n    onStop: propTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (as there is internal use of onMouseDown)\n     */\n    onMouseDown: propTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n  DraggableCore.defaultProps = {\n    allowAnyClick: false,\n    // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    offsetParent: null,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function onStart() {},\n    onDrag: function onDrag() {},\n    onStop: function onStop() {},\n    onMouseDown: function onMouseDown() {}\n  };\n  /*:: import type {DraggableEventHandler} from './utils/types';*/\n\n  /*:: import type {Element as ReactElement} from 'react';*/\n\n  /*:: type DraggableState = {\n    dragging: boolean,\n    dragged: boolean,\n    x: number, y: number,\n    slackX: number, slackY: number,\n    isElementSVG: boolean\n  };*/\n  //\n  // Define <Draggable>\n  //\n\n  /*:: export type DraggableProps = {\n    ...$Exact<DraggableCoreProps>,\n    axis: 'both' | 'x' | 'y' | 'none',\n    bounds: DraggableBounds | string | false,\n    defaultClassName: string,\n    defaultClassNameDragging: string,\n    defaultClassNameDragged: string,\n    defaultPosition: ControlPosition,\n    positionOffset: PositionOffsetControlPosition,\n    position: ControlPosition,\n    scale: number\n  };*/\n\n  var Draggable = function (_React$Component) {\n    inherits(Draggable, _React$Component);\n\n    function Draggable(props\n    /*: DraggableProps*/\n    ) {\n      classCallCheck(this, Draggable);\n\n      var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n      _this.onDragStart = function (e, coreData) {\n        // Short-circuit if user's callback killed it.\n        var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData)); // Kills start event on core as well, so move handlers are never bound.\n\n\n        if (shouldStart === false) return false;\n\n        _this.setState({\n          dragging: true,\n          dragged: true\n        });\n      };\n\n      _this.onDrag = function (e, coreData) {\n        if (!_this.state.dragging) return false;\n        var uiData = createDraggableData(_this, coreData);\n        var newState\n        /*: $Shape<DraggableState>*/\n        = {\n          x: uiData.x,\n          y: uiData.y\n        }; // Keep within bounds.\n\n        if (_this.props.bounds) {\n          // Save original x and y.\n          var _x = newState.x,\n              _y = newState.y; // Add slack to the values used to calculate bound position. This will ensure that if\n          // we start removing slack, the element won't react to it right away until it's been\n          // completely removed.\n\n          newState.x += _this.state.slackX;\n          newState.y += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n          var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n              _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n              newStateX = _getBoundPosition2[0],\n              newStateY = _getBoundPosition2[1];\n\n          newState.x = newStateX;\n          newState.y = newStateY; // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\n          newState.slackX = _this.state.slackX + (_x - newState.x);\n          newState.slackY = _this.state.slackY + (_y - newState.y); // Update the event we fire to reflect what really happened after bounds took effect.\n\n          uiData.x = newState.x;\n          uiData.y = newState.y;\n          uiData.deltaX = newState.x - _this.state.x;\n          uiData.deltaY = newState.y - _this.state.y;\n        } // Short-circuit if user's callback killed it.\n\n\n        var shouldUpdate = _this.props.onDrag(e, uiData);\n\n        if (shouldUpdate === false) return false;\n\n        _this.setState(newState);\n      };\n\n      _this.onDragStop = function (e, coreData) {\n        if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.\n\n        var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\n        if (shouldStop === false) return false;\n        var newState\n        /*: $Shape<DraggableState>*/\n        = {\n          dragging: false,\n          slackX: 0,\n          slackY: 0\n        }; // If this is a controlled component, the result of this operation will be to\n        // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\n        var controlled = Boolean(_this.props.position);\n\n        if (controlled) {\n          var _this$props$position = _this.props.position,\n              _x2 = _this$props$position.x,\n              _y2 = _this$props$position.y;\n          newState.x = _x2;\n          newState.y = _y2;\n        }\n\n        _this.setState(newState);\n      };\n\n      _this.state = {\n        // Whether or not we are currently dragging.\n        dragging: false,\n        // Whether or not we have been dragged before.\n        dragged: false,\n        // Current transform x and y.\n        x: props.position ? props.position.x : props.defaultPosition.x,\n        y: props.position ? props.position.y : props.defaultPosition.y,\n        // Used for compensating for out-of-bounds drags\n        slackX: 0,\n        slackY: 0,\n        // Can only determine if SVG after mounting\n        isElementSVG: false\n      };\n\n      if (props.position && !(props.onDrag || props.onStop)) {\n        // eslint-disable-next-line no-console\n        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n      }\n\n      return _this;\n    }\n\n    createClass(Draggable, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Check to see if the element passed is an instanceof SVGElement\n        if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n          this.setState({\n            isElementSVG: true\n          });\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps\n      /*: Object*/\n      ) {\n        // Set x/y if position has changed\n        if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n          this.setState({\n            x: nextProps.position.x,\n            y: nextProps.position.y\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.setState({\n          dragging: false\n        }); // prevents invariant if unmounted while dragging\n      }\n    }, {\n      key: 'render',\n      value: function render()\n      /*: ReactElement<any>*/\n      {\n        var _classNames;\n\n        var style = {},\n            svgTransform = null; // If this is controlled, we don't want to move it - unless it's dragging.\n\n        var controlled = Boolean(this.props.position);\n        var draggable = !controlled || this.state.dragging;\n        var position = this.props.position || this.props.defaultPosition;\n        var transformOpts = {\n          // Set left if horizontal drag is enabled\n          x: canDragX(this) && draggable ? this.state.x : position.x,\n          // Set top if vertical drag is enabled\n          y: canDragY(this) && draggable ? this.state.y : position.y\n        }; // If this element was SVG, we use the `transform` attribute.\n\n        if (this.state.isElementSVG) {\n          svgTransform = createSVGTransform(transformOpts, this.props.positionOffset);\n        } else {\n          // Add a CSS transform to move the element around. This allows us to move the element around\n          // without worrying about whether or not it is relatively or absolutely positioned.\n          // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n          // has a clean slate.\n          style = createCSSTransform(transformOpts, this.props.positionOffset);\n        }\n\n        var _props = this.props,\n            defaultClassName = _props.defaultClassName,\n            defaultClassNameDragging = _props.defaultClassNameDragging,\n            defaultClassNameDragged = _props.defaultClassNameDragged;\n        var children = React.Children.only(this.props.children); // Mark with class while dragging\n\n        var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames)); // Reuse the child provided\n        // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n        return React.createElement(DraggableCore, _extends({}, this.props, {\n          onStart: this.onDragStart,\n          onDrag: this.onDrag,\n          onStop: this.onDragStop\n        }), React.cloneElement(children, {\n          className: className,\n          style: _extends({}, children.props.style, style),\n          transform: svgTransform\n        }));\n      }\n    }]);\n    return Draggable;\n  }(React.Component);\n\n  Draggable.displayName = 'Draggable';\n  Draggable.propTypes = _extends({}, DraggableCore.propTypes, {\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: propTypes.oneOfType([propTypes.shape({\n      left: propTypes.number,\n      right: propTypes.number,\n      top: propTypes.number,\n      bottom: propTypes.number\n    }), propTypes.string, propTypes.oneOf([false])]),\n    defaultClassName: propTypes.string,\n    defaultClassNameDragging: propTypes.string,\n    defaultClassNameDragged: propTypes.string,\n\n    /**\n     * `defaultPosition` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    defaultPosition: propTypes.shape({\n      x: propTypes.number,\n      y: propTypes.number\n    }),\n    positionOffset: propTypes.shape({\n      x: propTypes.oneOfType([propTypes.number, propTypes.string]),\n      y: propTypes.oneOfType([propTypes.number, propTypes.string])\n    }),\n\n    /**\n     * `position`, if present, defines the current position of the element.\n     *\n     *  This is similar to how form elements in React work - if no `position` is supplied, the component\n     *  is uncontrolled.\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable position={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    position: propTypes.shape({\n      x: propTypes.number,\n      y: propTypes.number\n    }),\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  });\n  Draggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n    axis: 'both',\n    bounds: false,\n    defaultClassName: 'react-draggable',\n    defaultClassNameDragging: 'react-draggable-dragging',\n    defaultClassNameDragged: 'react-draggable-dragged',\n    defaultPosition: {\n      x: 0,\n      y: 0\n    },\n    position: null,\n    scale: 1\n  }); // Previous versions of this lib exported <Draggable> as the root export. As to not break\n  // them, or TypeScript, we export *both* as the root and as 'default'.\n  // See https://github.com/mzabriskie/react-draggable/pull/254\n  // and https://github.com/mzabriskie/react-draggable/issues/266\n\n  Draggable.default = Draggable;\n  Draggable.DraggableCore = DraggableCore;\n  return Draggable;\n});","map":{"version":3,"sources":["../node_modules/fbjs/lib/emptyFunction.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/warning.js","../node_modules/object-assign/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/checkPropTypes.js","../node_modules/prop-types/factoryWithTypeCheckers.js","../node_modules/prop-types/index.js","../node_modules/classnames/index.js","../lib/utils/shims.js","../lib/utils/getPrefix.js","../lib/utils/domFns.js","../lib/utils/positionFns.js","../lib/utils/log.js","../lib/DraggableCore.js","../lib/Draggable.js","../lib/umd.js"],"names":["emptyFunction","invariant","require$$0","warning","require$$1","ReactPropTypesSecret","require$$2","assign","checkPropTypes","define","i","length","array","callback","Object","isNaN","parseInt","props","prefixes","prop","window","style","browserPrefixToKey","prefix","kebabToTitleCase","out","shouldCapitalize","str","getPrefix","matchesSelectorFunc","isFunction","el","node","matchesSelector","height","computedStyle","int","width","isBody","offsetParent","offsetParentRect","left","top","x","evt","y","translation","getTranslation","defaultX","positionOffset","defaultY","e","identifier","t","styleEl","doc","addClassName","removeClassName","childStyle","touchAction","draggable","bounds","cloneBounds","findDOMNode","ownerDocument","ownerWindow","boundNode","nodeStyle","boundNodeStyle","right","innerWidth","outerWidth","bottom","innerHeight","outerHeight","isNum","Math","pendingX","grid","pendingY","touchObj","getTouch","draggableCore","offsetXYFromParent","state","isStart","deltaX","deltaY","lastX","lastY","scale","coreData","ReactDOM","eventsFor","touch","start","move","stop","mouse","dragEventFor","DraggableCore","React","Component","displayName","propTypes","allowAnyClick","PropTypes","disabled","enableUserSelectHack","handle","cancel","onStart","onDrag","onStop","onMouseDown","className","transform","dontSetMe","defaultProps","dragging","touchIdentifier","thisNode","removeEvent","removeUserSelectStyles","handleDragStart","matchesSelectorAndParentsTo","getTouchIdentifier","position","getControlPosition","coreEvent","createCoreData","log","shouldUpdate","addUserSelectStyles","addEvent","handleDrag","Array","snapToGrid","event","document","handleDragStop","NaN","onMouseUp","onTouchStart","onTouchEnd","styleHacks","Draggable","axis","number","defaultClassName","string","defaultClassNameDragging","defaultClassNameDragged","defaultPosition","dragged","slackX","slackY","isElementSVG","console","nextProps","shouldStart","createDraggableData","uiData","newState","newStateX","newStateY","getBoundPosition","shouldStop","controlled","Boolean","svgTransform","transformOpts","canDragX","canDragY","createSVGTransform","createCSSTransform","children","classNames"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// @flow\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nexport function findInArray(array: Array<any> | TouchList, callback: Function): any {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nexport function isFunction(func: any): boolean {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nexport function isNum(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nexport function int(a: string): number {\n  return parseInt(a, 10);\n}\n\nexport function dontSetMe(props: Object, propName: string, componentName: string) {\n  if (props[propName]) {\n    return new Error(`Invalid prop ${propName} passed to ${componentName} - do not set this, set it on the child.`);\n  }\n}\n","// @flow\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nexport function getPrefix(prop: string='transform'): string {\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n  const style = window.document.documentElement.style;\n\n  if (prop in style) return '';\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nexport function browserPrefixToKey(prop: string, prefix: string): string {\n  return prefix ? `${prefix}${kebabToTitleCase(prop)}` : prop;\n}\n\nexport function browserPrefixToStyle(prop: string, prefix: string): string {\n  return prefix ? `-${prefix.toLowerCase()}-${prop}` : prop;\n}\n\nfunction kebabToTitleCase(str: string): string {\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nexport default getPrefix();\n","// @flow\nimport {findInArray, isFunction, int} from './shims';\nimport browserPrefix, {browserPrefixToKey} from './getPrefix';\n\nimport type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';\n\nlet matchesSelectorFunc = '';\nexport function matchesSelector(el: Node, selector: string): boolean {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      // $FlowIgnore: Doesn't think elements are indexable\n      return isFunction(el[method]);\n    });\n  }\n\n  // Might not be found entirely (not an Element?) - in that case, bail\n  // $FlowIgnore: Doesn't think elements are indexable\n  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc](selector);\n}\n\n// Works up the tree to the draggable itself attempting to match selector.\nexport function matchesSelectorAndParentsTo(el: Node, selector: string, baseNode: Node): boolean {\n  let node = el;\n  do {\n    if (matchesSelector(node, selector)) return true;\n    if (node === baseNode) return false;\n    node = node.parentNode;\n  } while (node);\n\n  return false;\n}\n\nexport function addEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nexport function removeEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nexport function outerHeight(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nexport function outerWidth(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nexport function innerHeight(node: HTMLElement): number {\n  let height = node.clientHeight;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nexport function innerWidth(node: HTMLElement): number {\n  let width = node.clientWidth;\n  const computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\n// Get from offsetParent\nexport function offsetXYFromParent(evt: {clientX: number, clientY: number}, offsetParent: HTMLElement): ControlPosition {\n  const isBody = offsetParent === offsetParent.ownerDocument.body;\n  const offsetParentRect = isBody ? {left: 0, top: 0} : offsetParent.getBoundingClientRect();\n\n  const x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n  const y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n  return {x, y};\n}\n\nexport function createCSSTransform(controlPos: ControlPosition, positionOffset: PositionOffsetControlPosition): Object {\n  const translation = getTranslation(controlPos, positionOffset, 'px');\n  return {[browserPrefixToKey('transform', browserPrefix)]: translation };\n}\n\nexport function createSVGTransform(controlPos: ControlPosition, positionOffset: PositionOffsetControlPosition): string {\n  const translation = getTranslation(controlPos, positionOffset, '');\n  return translation;\n}\nexport function getTranslation({x, y}: ControlPosition, positionOffset: PositionOffsetControlPosition, unitSuffix: string): string {\n  let translation = `translate(${x}${unitSuffix},${y}${unitSuffix})`;\n  if (positionOffset) {\n    const defaultX = `${(typeof positionOffset.x === 'string') ? positionOffset.x : positionOffset.x + unitSuffix}`;\n    const defaultY = `${(typeof positionOffset.y === 'string') ? positionOffset.y : positionOffset.y + unitSuffix}`;\n    translation = `translate(${defaultX}, ${defaultY})` + translation;\n  }\n  return translation;\n}\n\nexport function getTouch(e: MouseTouchEvent, identifier: number): ?{clientX: number, clientY: number} {\n  return (e.targetTouches && findInArray(e.targetTouches, t => identifier === t.identifier)) ||\n         (e.changedTouches && findInArray(e.changedTouches, t => identifier === t.identifier));\n}\n\nexport function getTouchIdentifier(e: MouseTouchEvent): ?number {\n  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n\n// Note we're passing `document` b/c we could be iframed\nexport function addUserSelectStyles(doc: ?Document) {\n  if (!doc) return;\n  let styleEl = doc.getElementById('react-draggable-style-el');\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nexport function removeUserSelectStyles(doc: ?Document) {\n  try {\n    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n    // $FlowIgnore: IE\n    if (doc.selection) {\n      // $FlowIgnore: IE\n      doc.selection.empty();\n    } else {\n      window.getSelection().removeAllRanges();  // remove selection caused by scroll\n    }\n  } catch (e) {\n    // probably IE\n  }\n}\n\nexport function styleHacks(childStyle: Object = {}): Object {\n  // Workaround IE pointer events; see #51\n  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n  return {\n    touchAction: 'none',\n    ...childStyle\n  };\n}\n\nexport function addClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    if (!el.className.match(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`))) {\n      el.className += ` ${className}`;\n    }\n  }\n}\n\nexport function removeClassName(el: HTMLElement, className: string) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp(`(?:^|\\\\s)${className}(?!\\\\S)`, 'g'), '');\n  }\n}\n","// @flow\nimport {isNum, int} from './shims';\nimport ReactDOM from 'react-dom';\nimport {getTouch, innerWidth, innerHeight, offsetXYFromParent, outerWidth, outerHeight} from './domFns';\n\nimport type Draggable from '../Draggable';\nimport type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';\nimport type DraggableCore from '../DraggableCore';\n\nexport function getBoundPosition(draggable: Draggable, x: number, y: number): [number, number] {\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y];\n\n  // Clone new bounds\n  let {bounds} = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    const {ownerDocument} = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft +\n        int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop +\n        int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n  return [x, y];\n}\n\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nexport function canDragX(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nexport function canDragY(draggable: Draggable): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nexport function getControlPosition(e: MouseTouchEvent, touchIdentifier: ?number, draggableCore: DraggableCore): ?ControlPosition {\n  const touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return offsetXYFromParent(touchObj || e, offsetParent);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nexport function createCoreData(draggable: DraggableCore, x: number, y: number): DraggableData {\n  const state = draggable.state;\n  const isStart = !isNum(state.lastX);\n  const node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0, deltaY: 0,\n      lastX: x, lastY: y,\n      x, y,\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - state.lastX, deltaY: y - state.lastY,\n      lastX: state.lastX, lastY: state.lastY,\n      x, y,\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nexport function createDraggableData(draggable: Draggable, coreData: DraggableData): DraggableData {\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + (coreData.deltaX / scale),\n    y: draggable.state.y + (coreData.deltaY / scale),\n    deltaX: (coreData.deltaX / scale),\n    deltaY: (coreData.deltaY / scale),\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds: Bounds): Bounds {\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable: Draggable | DraggableCore): HTMLElement {\n  const node = ReactDOM.findDOMNode(draggable);\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}\n","// @flow\n/*eslint no-console:0*/\nexport default function log(...args: any) {\n  if (process.env.DRAGGABLE_DEBUG) console.log(...args);\n}\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport {matchesSelectorAndParentsTo, addEvent, removeEvent, addUserSelectStyles, getTouchIdentifier,\n        removeUserSelectStyles, styleHacks} from './utils/domFns';\nimport {createCoreData, getControlPosition, snapToGrid} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport log from './utils/log';\n\nimport type {EventHandler, MouseTouchEvent} from './utils/types';\nimport type {Element as ReactElement} from 'react';\n\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n\ntype DraggableCoreState = {\n  dragging: boolean,\n  lastX: number,\n  lastY: number,\n  touchIdentifier: ?number\n};\n\nexport type DraggableBounds = {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number,\n};\n\nexport type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};\n\nexport type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;\n\nexport type ControlPosition = {x: number, y: number};\nexport type PositionOffsetControlPosition = {x: number|string, y: number|string};\n\nexport type DraggableCoreProps = {\n  allowAnyClick: boolean,\n  cancel: string,\n  children: ReactElement<any>,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n};\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nexport default class DraggableCore extends React.Component<DraggableCoreProps, DraggableCoreState> {\n\n  static displayName = 'DraggableCore';\n\n  static propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: PropTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: PropTypes.bool,\n\n    /**\n     * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n     * instead of using the parent node.\n     */\n    offsetParent: function(props: DraggableCoreProps, propName: $Keys<DraggableCoreProps>) {\n      if (props[propName] && props[propName].nodeType !== 1) {\n        throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n      }\n    },\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     */\n    grid: PropTypes.arrayOf(PropTypes.number),\n    \n    /**\n     * `scale` specifies the scale of the area you are dragging inside of. It allows\n     * the drag deltas to scale correctly with how far zoomed in/out you are.\n     */\n    scale: PropTypes.number,\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *                     <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: PropTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onStart: PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     */\n    onDrag: PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     * If this function returns the boolean false, the drag will remain active.\n     */\n    onStop: PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (as there is internal use of onMouseDown)\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    allowAnyClick: false, // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    offsetParent: null,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function(){},\n    onDrag: function(){},\n    onStop: function(){},\n    onMouseDown: function(){}\n  };\n\n  state = {\n    dragging: false,\n    // Used while dragging to determine deltas.\n    lastX: NaN, lastY: NaN,\n    touchIdentifier: null\n  };\n\n  componentWillUnmount() {\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      const {ownerDocument} = thisNode;\n      removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n    }\n  }\n\n  handleDragStart: EventHandler<MouseTouchEvent> = (e) => {\n    // Make it possible to attach event handlers on top of this one.\n    this.props.onMouseDown(e);\n\n    // Only accept left-clicks.\n    if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n    // Get nodes. Be sure to grab relative document (could be iframed)\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n      throw new Error('<DraggableCore> not mounted on DragStart!');\n    }\n    const {ownerDocument} = thisNode;\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match.\n    if (this.props.disabled ||\n      (!(e.target instanceof ownerDocument.defaultView.Node)) ||\n      (this.props.handle && !matchesSelectorAndParentsTo(e.target, this.props.handle, thisNode)) ||\n      (this.props.cancel && matchesSelectorAndParentsTo(e.target, this.props.cancel, thisNode))) {\n      return;\n    }\n\n    // Set touch identifier in component state if this is a touch event. This allows us to\n    // distinguish between individual touches on multitouch screens by identifying which\n    // touchpoint was set to this element.\n    const touchIdentifier = getTouchIdentifier(e);\n    this.setState({touchIdentifier});\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, touchIdentifier, this);\n    if (position == null) return; // not possible but satisfies flow\n    const {x, y} = position;\n\n    // Create an event object with all the data parents need to make a decision here.\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDragStart: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', this.props.onStart);\n    const shouldUpdate = this.props.onStart(e, coreEvent);\n    if (shouldUpdate === false) return;\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n\n      lastX: x,\n      lastY: y\n    });\n\n    // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n    // this element. We use different events depending on whether or not we have detected that this\n    // is a touch-capable device.\n    addEvent(ownerDocument, dragEventFor.move, this.handleDrag);\n    addEvent(ownerDocument, dragEventFor.stop, this.handleDragStop);\n  };\n\n  handleDrag: EventHandler<MouseTouchEvent> = (e) => {\n\n    // Prevent scrolling on mobile devices, like ipad/iphone.\n    if (e.type === 'touchmove') e.preventDefault();\n\n    // Get the current drag point from the event. This is used as the offset.\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    let {x, y} = position;\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      let deltaX = x - this.state.lastX, deltaY = y - this.state.lastY;\n      [deltaX, deltaY] = snapToGrid(this.props.grid, deltaX, deltaY);\n      if (!deltaX && !deltaY) return; // skip useless drag\n      x = this.state.lastX + deltaX, y = this.state.lastY + deltaY;\n    }\n\n    const coreEvent = createCoreData(this, x, y);\n\n    log('DraggableCore: handleDrag: %j', coreEvent);\n\n    // Call event handler. If it returns explicit false, trigger end.\n    const shouldUpdate = this.props.onDrag(e, coreEvent);\n    if (shouldUpdate === false) {\n      try {\n        // $FlowIgnore\n        this.handleDragStop(new MouseEvent('mouseup'));\n      } catch (err) {\n        // Old browsers\n        const event = ((document.createEvent('MouseEvents'): any): MouseTouchEvent);\n        // I see why this insanity was deprecated\n        // $FlowIgnore\n        event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        this.handleDragStop(event);\n      }\n      return;\n    }\n\n    this.setState({\n      lastX: x,\n      lastY: y\n    });\n  };\n\n  handleDragStop: EventHandler<MouseTouchEvent> = (e) => {\n    if (!this.state.dragging) return;\n\n    const position = getControlPosition(e, this.state.touchIdentifier, this);\n    if (position == null) return;\n    const {x, y} = position;\n    const coreEvent = createCoreData(this, x, y);\n\n    const thisNode = ReactDOM.findDOMNode(this);\n    if (thisNode) {\n      // Remove user-select hack\n      if (this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n    }\n\n    log('DraggableCore: handleDragStop: %j', coreEvent);\n\n    // Reset the el.\n    this.setState({\n      dragging: false,\n      lastX: NaN,\n      lastY: NaN\n    });\n\n    // Call event handler\n    this.props.onStop(e, coreEvent);\n\n    if (thisNode) {\n      // Remove event handlers\n      log('DraggableCore: Removing handlers');\n      removeEvent(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n      removeEvent(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n    }\n  };\n\n  onMouseDown: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n    return this.handleDragStart(e);\n  };\n\n  onMouseUp: EventHandler<MouseTouchEvent> = (e) => {\n    dragEventFor = eventsFor.mouse;\n\n    return this.handleDragStop(e);\n  };\n\n  // Same as onMouseDown (start drag), but now consider this a touch device.\n  onTouchStart: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart(e);\n  };\n\n  onTouchEnd: EventHandler<MouseTouchEvent> = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStop(e);\n  };\n\n  render() {\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: styleHacks(this.props.children.props.style),\n\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.onMouseUp,\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport {createCSSTransform, createSVGTransform} from './utils/domFns';\nimport {canDragX, canDragY, createDraggableData, getBoundPosition} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport DraggableCore from './DraggableCore';\nimport type {ControlPosition, PositionOffsetControlPosition, DraggableBounds, DraggableCoreProps} from './DraggableCore';\nimport log from './utils/log';\nimport type {DraggableEventHandler} from './utils/types';\nimport type {Element as ReactElement} from 'react';\n\ntype DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  x: number, y: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean\n};\n\nexport type DraggableProps = {\n  ...$Exact<DraggableCoreProps>,\n  axis: 'both' | 'x' | 'y' | 'none',\n  bounds: DraggableBounds | string | false,\n  defaultClassName: string,\n  defaultClassNameDragging: string,\n  defaultClassNameDragged: string,\n  defaultPosition: ControlPosition,\n  positionOffset: PositionOffsetControlPosition,\n  position: ControlPosition,\n  scale: number\n};\n\n//\n// Define <Draggable>\n//\n\nexport default class Draggable extends React.Component<DraggableProps, DraggableState> {\n\n  static displayName = 'Draggable';\n\n  static propTypes = {\n    // Accepts all props <DraggableCore> accepts.\n    ...DraggableCore.propTypes,\n\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: PropTypes.oneOfType([\n      PropTypes.shape({\n        left: PropTypes.number,\n        right: PropTypes.number,\n        top: PropTypes.number,\n        bottom: PropTypes.number\n      }),\n      PropTypes.string,\n      PropTypes.oneOf([false])\n    ]),\n\n    defaultClassName: PropTypes.string,\n    defaultClassNameDragging: PropTypes.string,\n    defaultClassNameDragged: PropTypes.string,\n\n    /**\n     * `defaultPosition` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    defaultPosition: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n    positionOffset: PropTypes.shape({\n      x: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      y: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }),\n\n    /**\n     * `position`, if present, defines the current position of the element.\n     *\n     *  This is similar to how form elements in React work - if no `position` is supplied, the component\n     *  is uncontrolled.\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable position={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    position: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    ...DraggableCore.defaultProps,\n    axis: 'both',\n    bounds: false,\n    defaultClassName: 'react-draggable',\n    defaultClassNameDragging: 'react-draggable-dragging',\n    defaultClassNameDragged: 'react-draggable-dragged',\n    defaultPosition: {x: 0, y: 0},\n    position: null,\n    scale: 1\n  };\n\n  constructor(props: DraggableProps) {\n    super(props);\n\n    this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n\n      // Whether or not we have been dragged before.\n      dragged: false,\n\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n\n      // Used for compensating for out-of-bounds drags\n      slackX: 0, slackY: 0,\n\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' +\n        'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' +\n        '`position` of this element.');\n    }\n  }\n\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if(typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n      this.setState({ isElementSVG: true });\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Object) {\n    // Set x/y if position has changed\n    if (nextProps.position &&\n        (!this.props.position ||\n          nextProps.position.x !== this.props.position.x ||\n          nextProps.position.y !== this.props.position.y\n        )\n      ) {\n      this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({dragging: false}); // prevents invariant if unmounted while dragging\n  }\n\n  onDragStart: DraggableEventHandler = (e, coreData) => {\n    log('Draggable: onDragStart: %j', coreData);\n\n    // Short-circuit if user's callback killed it.\n    const shouldStart = this.props.onStart(e, createDraggableData(this, coreData));\n    // Kills start event on core as well, so move handlers are never bound.\n    if (shouldStart === false) return false;\n\n    this.setState({dragging: true, dragged: true});\n  };\n\n  onDrag: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n    log('Draggable: onDrag: %j', coreData);\n\n    const uiData = createDraggableData(this, coreData);\n\n    const newState: $Shape<DraggableState> = {\n      x: uiData.x,\n      y: uiData.y\n    };\n\n    // Keep within bounds.\n    if (this.props.bounds) {\n      // Save original x and y.\n      const {x, y} = newState;\n\n      // Add slack to the values used to calculate bound position. This will ensure that if\n      // we start removing slack, the element won't react to it right away until it's been\n      // completely removed.\n      newState.x += this.state.slackX;\n      newState.y += this.state.slackY;\n\n      // Get bound position. This will ceil/floor the x and y within the boundaries.\n      const [newStateX, newStateY] = getBoundPosition(this, newState.x, newState.y);\n      newState.x = newStateX;\n      newState.y = newStateY;\n\n      // Recalculate slack by noting how much was shaved by the boundPosition handler.\n      newState.slackX = this.state.slackX + (x - newState.x);\n      newState.slackY = this.state.slackY + (y - newState.y);\n\n      // Update the event we fire to reflect what really happened after bounds took effect.\n      uiData.x = newState.x;\n      uiData.y = newState.y;\n      uiData.deltaX = newState.x - this.state.x;\n      uiData.deltaY = newState.y - this.state.y;\n    }\n\n    // Short-circuit if user's callback killed it.\n    const shouldUpdate = this.props.onDrag(e, uiData);\n    if (shouldUpdate === false) return false;\n\n    this.setState(newState);\n  };\n\n  onDragStop: DraggableEventHandler = (e, coreData) => {\n    if (!this.state.dragging) return false;\n\n    // Short-circuit if user's callback killed it.\n    const shouldStop = this.props.onStop(e, createDraggableData(this, coreData));\n    if (shouldStop === false) return false;\n\n    log('Draggable: onDragStop: %j', coreData);\n\n    const newState: $Shape<DraggableState> = {\n      dragging: false,\n      slackX: 0,\n      slackY: 0\n    };\n\n    // If this is a controlled component, the result of this operation will be to\n    // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n    const controlled = Boolean(this.props.position);\n    if (controlled) {\n      const {x, y} = this.props.position;\n      newState.x = x;\n      newState.y = y;\n    }\n\n    this.setState(newState);\n  };\n\n  render(): ReactElement<any> {\n    let style = {}, svgTransform = null;\n\n    // If this is controlled, we don't want to move it - unless it's dragging.\n    const controlled = Boolean(this.props.position);\n    const draggable = !controlled || this.state.dragging;\n\n    const position = this.props.position || this.props.defaultPosition;\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: canDragX(this) && draggable ?\n        this.state.x :\n        position.x,\n\n      // Set top if vertical drag is enabled\n      y: canDragY(this) && draggable ?\n        this.state.y :\n        position.y\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = createSVGTransform(transformOpts, this.props.positionOffset);\n    } else {\n      // Add a CSS transform to move the element around. This allows us to move the element around\n      // without worrying about whether or not it is relatively or absolutely positioned.\n      // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n      // has a clean slate.\n      style = createCSSTransform(transformOpts, this.props.positionOffset);\n    }\n\n    const {\n      defaultClassName,\n      defaultClassNameDragging,\n      defaultClassNameDragged\n    } = this.props;\n\n    const children = React.Children.only(this.props.children);\n\n    // Mark with class while dragging\n    const className = classNames((children.props.className || ''), defaultClassName, {\n      [defaultClassNameDragging]: this.state.dragging,\n      [defaultClassNameDragged]: this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return (\n      <DraggableCore {...this.props} onStart={this.onDragStart} onDrag={this.onDrag} onStop={this.onDragStop}>\n        {React.cloneElement(children, {\n          className: className,\n          style: {...children.props.style, ...style},\n          transform: svgTransform\n        })}\n      </DraggableCore>\n    );\n  }\n}\n","import Draggable from './Draggable';\nimport DraggableCore from './DraggableCore';\n\n// Previous versions of this lib exported <Draggable> as the root export. As to not break\n// them, or TypeScript, we export *both* as the root and as 'default'.\n// See https://github.com/mzabriskie/react-draggable/pull/254\n// and https://github.com/mzabriskie/react-draggable/issues/266\nDraggable.default = Draggable;\nDraggable.DraggableCore = DraggableCore;\n\nexport default Draggable;\n"]},"metadata":{},"sourceType":"script"}