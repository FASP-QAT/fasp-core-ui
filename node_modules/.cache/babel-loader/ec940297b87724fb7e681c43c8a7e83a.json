{"ast":null,"code":"'use strict'; // https://github.com/tc39/proposal-observable\n\nvar $ = require('../internals/export');\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar setSpecies = require('../internals/set-species');\n\nvar aFunction = require('../internals/a-function');\n\nvar anObject = require('../internals/an-object');\n\nvar isObject = require('../internals/is-object');\n\nvar anInstance = require('../internals/an-instance');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar redefineAll = require('../internals/redefine-all');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar hostReportErrors = require('../internals/host-report-errors');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar InternalStateModule = require('../internals/internal-state');\n\nvar OBSERVABLE = wellKnownSymbol('observable');\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\n\nvar getMethod = function getMethod(fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function cleanupSubscription(subscriptionState) {\n  var cleanup = subscriptionState.cleanup;\n\n  if (cleanup) {\n    subscriptionState.cleanup = undefined;\n\n    try {\n      cleanup();\n    } catch (error) {\n      hostReportErrors(error);\n    }\n  }\n};\n\nvar subscriptionClosed = function subscriptionClosed(subscriptionState) {\n  return subscriptionState.observer === undefined;\n};\n\nvar close = function close(subscription, subscriptionState) {\n  if (!DESCRIPTORS) {\n    subscription.closed = true;\n    var subscriptionObserver = subscriptionState.subscriptionObserver;\n    if (subscriptionObserver) subscriptionObserver.closed = true;\n  }\n\n  subscriptionState.observer = undefined;\n};\n\nvar Subscription = function Subscription(observer, subscriber) {\n  var subscriptionState = setInternalState(this, {\n    cleanup: undefined,\n    observer: anObject(observer),\n    subscriptionObserver: undefined\n  });\n  var start;\n  if (!DESCRIPTORS) this.closed = false;\n\n  try {\n    if (start = getMethod(observer.start)) start.call(observer, this);\n  } catch (error) {\n    hostReportErrors(error);\n  }\n\n  if (subscriptionClosed(subscriptionState)) return;\n  var subscriptionObserver = subscriptionState.subscriptionObserver = new SubscriptionObserver(this);\n\n  try {\n    var cleanup = subscriber(subscriptionObserver);\n    var subscription = cleanup;\n    if (cleanup != null) subscriptionState.cleanup = typeof cleanup.unsubscribe === 'function' ? function () {\n      subscription.unsubscribe();\n    } : aFunction(cleanup);\n  } catch (error) {\n    subscriptionObserver.error(error);\n    return;\n  }\n\n  if (subscriptionClosed(subscriptionState)) cleanupSubscription(subscriptionState);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() {\n    var subscriptionState = getInternalState(this);\n\n    if (!subscriptionClosed(subscriptionState)) {\n      close(this, subscriptionState);\n      cleanupSubscription(subscriptionState);\n    }\n  }\n});\nif (DESCRIPTORS) defineProperty(Subscription.prototype, 'closed', {\n  configurable: true,\n  get: function get() {\n    return subscriptionClosed(getInternalState(this));\n  }\n});\n\nvar SubscriptionObserver = function SubscriptionObserver(subscription) {\n  setInternalState(this, {\n    subscription: subscription\n  });\n  if (!DESCRIPTORS) this.closed = false;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscriptionState = getInternalState(getInternalState(this).subscription);\n\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n\n      try {\n        var nextMethod = getMethod(observer.next);\n        if (nextMethod) nextMethod.call(observer, value);\n      } catch (error) {\n        hostReportErrors(error);\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = getInternalState(this).subscription;\n    var subscriptionState = getInternalState(subscription);\n\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n      close(subscription, subscriptionState);\n\n      try {\n        var errorMethod = getMethod(observer.error);\n        if (errorMethod) errorMethod.call(observer, value);else hostReportErrors(value);\n      } catch (err) {\n        hostReportErrors(err);\n      }\n\n      cleanupSubscription(subscriptionState);\n    }\n  },\n  complete: function complete() {\n    var subscription = getInternalState(this).subscription;\n    var subscriptionState = getInternalState(subscription);\n\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n      close(subscription, subscriptionState);\n\n      try {\n        var completeMethod = getMethod(observer.complete);\n        if (completeMethod) completeMethod.call(observer);\n      } catch (error) {\n        hostReportErrors(error);\n      }\n\n      cleanupSubscription(subscriptionState);\n    }\n  }\n});\nif (DESCRIPTORS) defineProperty(SubscriptionObserver.prototype, 'closed', {\n  configurable: true,\n  get: function get() {\n    return subscriptionClosed(getInternalState(getInternalState(this).subscription));\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable');\n  setInternalState(this, {\n    subscriber: aFunction(subscriber)\n  });\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    var length = arguments.length;\n    return new Subscription(typeof observer === 'function' ? {\n      next: observer,\n      error: length > 1 ? arguments[1] : undefined,\n      complete: length > 2 ? arguments[2] : undefined\n    } : isObject(observer) ? observer : {}, getInternalState(this).subscriber);\n  }\n});\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var observableMethod = getMethod(anObject(x)[OBSERVABLE]);\n\n    if (observableMethod) {\n      var observable = anObject(observableMethod.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    var iterator = getIterator(x);\n    return new C(function (observer) {\n      iterate(iterator, function (it) {\n        observer.next(it);\n        if (observer.closed) return iterate.stop();\n      }, undefined, false, true);\n      observer.complete();\n    });\n  },\n  of: function of() {\n    var C = typeof this === 'function' ? this : $Observable;\n    var length = arguments.length;\n    var items = new Array(length);\n    var index = 0;\n\n    while (index < length) {\n      items[index] = arguments[index++];\n    }\n\n    return new C(function (observer) {\n      for (var i = 0; i < length; i++) {\n        observer.next(items[i]);\n        if (observer.closed) return;\n      }\n\n      observer.complete();\n    });\n  }\n});\ncreateNonEnumerableProperty($Observable.prototype, OBSERVABLE, function () {\n  return this;\n});\n$({\n  global: true\n}, {\n  Observable: $Observable\n});\nsetSpecies('Observable');","map":{"version":3,"sources":["/home/altius/NetbeansProjects/gitRepos/fasp-core-ui/node_modules/core-js/modules/esnext.observable.js"],"names":["$","require","DESCRIPTORS","setSpecies","aFunction","anObject","isObject","anInstance","defineProperty","f","createNonEnumerableProperty","redefineAll","getIterator","iterate","hostReportErrors","wellKnownSymbol","InternalStateModule","OBSERVABLE","getInternalState","get","setInternalState","set","getMethod","fn","undefined","cleanupSubscription","subscriptionState","cleanup","error","subscriptionClosed","observer","close","subscription","closed","subscriptionObserver","Subscription","subscriber","start","call","SubscriptionObserver","unsubscribe","prototype","configurable","next","value","nextMethod","errorMethod","err","complete","completeMethod","$Observable","Observable","subscribe","length","arguments","from","x","C","observableMethod","observable","constructor","iterator","it","stop","of","items","Array","index","i","global"],"mappings":"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","sourcesContent":["'use strict';\n// https://github.com/tc39/proposal-observable\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar setSpecies = require('../internals/set-species');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar anInstance = require('../internals/an-instance');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefineAll = require('../internals/redefine-all');\nvar getIterator = require('../internals/get-iterator');\nvar iterate = require('../internals/iterate');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar OBSERVABLE = wellKnownSymbol('observable');\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\n\nvar getMethod = function (fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function (subscriptionState) {\n  var cleanup = subscriptionState.cleanup;\n  if (cleanup) {\n    subscriptionState.cleanup = undefined;\n    try {\n      cleanup();\n    } catch (error) {\n      hostReportErrors(error);\n    }\n  }\n};\n\nvar subscriptionClosed = function (subscriptionState) {\n  return subscriptionState.observer === undefined;\n};\n\nvar close = function (subscription, subscriptionState) {\n  if (!DESCRIPTORS) {\n    subscription.closed = true;\n    var subscriptionObserver = subscriptionState.subscriptionObserver;\n    if (subscriptionObserver) subscriptionObserver.closed = true;\n  } subscriptionState.observer = undefined;\n};\n\nvar Subscription = function (observer, subscriber) {\n  var subscriptionState = setInternalState(this, {\n    cleanup: undefined,\n    observer: anObject(observer),\n    subscriptionObserver: undefined\n  });\n  var start;\n  if (!DESCRIPTORS) this.closed = false;\n  try {\n    if (start = getMethod(observer.start)) start.call(observer, this);\n  } catch (error) {\n    hostReportErrors(error);\n  }\n  if (subscriptionClosed(subscriptionState)) return;\n  var subscriptionObserver = subscriptionState.subscriptionObserver = new SubscriptionObserver(this);\n  try {\n    var cleanup = subscriber(subscriptionObserver);\n    var subscription = cleanup;\n    if (cleanup != null) subscriptionState.cleanup = typeof cleanup.unsubscribe === 'function'\n      ? function () { subscription.unsubscribe(); }\n      : aFunction(cleanup);\n  } catch (error) {\n    subscriptionObserver.error(error);\n    return;\n  } if (subscriptionClosed(subscriptionState)) cleanupSubscription(subscriptionState);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() {\n    var subscriptionState = getInternalState(this);\n    if (!subscriptionClosed(subscriptionState)) {\n      close(this, subscriptionState);\n      cleanupSubscription(subscriptionState);\n    }\n  }\n});\n\nif (DESCRIPTORS) defineProperty(Subscription.prototype, 'closed', {\n  configurable: true,\n  get: function () {\n    return subscriptionClosed(getInternalState(this));\n  }\n});\n\nvar SubscriptionObserver = function (subscription) {\n  setInternalState(this, { subscription: subscription });\n  if (!DESCRIPTORS) this.closed = false;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscriptionState = getInternalState(getInternalState(this).subscription);\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n      try {\n        var nextMethod = getMethod(observer.next);\n        if (nextMethod) nextMethod.call(observer, value);\n      } catch (error) {\n        hostReportErrors(error);\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = getInternalState(this).subscription;\n    var subscriptionState = getInternalState(subscription);\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n      close(subscription, subscriptionState);\n      try {\n        var errorMethod = getMethod(observer.error);\n        if (errorMethod) errorMethod.call(observer, value);\n        else hostReportErrors(value);\n      } catch (err) {\n        hostReportErrors(err);\n      } cleanupSubscription(subscriptionState);\n    }\n  },\n  complete: function complete() {\n    var subscription = getInternalState(this).subscription;\n    var subscriptionState = getInternalState(subscription);\n    if (!subscriptionClosed(subscriptionState)) {\n      var observer = subscriptionState.observer;\n      close(subscription, subscriptionState);\n      try {\n        var completeMethod = getMethod(observer.complete);\n        if (completeMethod) completeMethod.call(observer);\n      } catch (error) {\n        hostReportErrors(error);\n      } cleanupSubscription(subscriptionState);\n    }\n  }\n});\n\nif (DESCRIPTORS) defineProperty(SubscriptionObserver.prototype, 'closed', {\n  configurable: true,\n  get: function () {\n    return subscriptionClosed(getInternalState(getInternalState(this).subscription));\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable');\n  setInternalState(this, { subscriber: aFunction(subscriber) });\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    var length = arguments.length;\n    return new Subscription(typeof observer === 'function' ? {\n      next: observer,\n      error: length > 1 ? arguments[1] : undefined,\n      complete: length > 2 ? arguments[2] : undefined\n    } : isObject(observer) ? observer : {}, getInternalState(this).subscriber);\n  }\n});\n\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var observableMethod = getMethod(anObject(x)[OBSERVABLE]);\n    if (observableMethod) {\n      var observable = anObject(observableMethod.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n    var iterator = getIterator(x);\n    return new C(function (observer) {\n      iterate(iterator, function (it) {\n        observer.next(it);\n        if (observer.closed) return iterate.stop();\n      }, undefined, false, true);\n      observer.complete();\n    });\n  },\n  of: function of() {\n    var C = typeof this === 'function' ? this : $Observable;\n    var length = arguments.length;\n    var items = new Array(length);\n    var index = 0;\n    while (index < length) items[index] = arguments[index++];\n    return new C(function (observer) {\n      for (var i = 0; i < length; i++) {\n        observer.next(items[i]);\n        if (observer.closed) return;\n      } observer.complete();\n    });\n  }\n});\n\ncreateNonEnumerableProperty($Observable.prototype, OBSERVABLE, function () { return this; });\n\n$({ global: true }, {\n  Observable: $Observable\n});\n\nsetSpecies('Observable');\n"]},"metadata":{},"sourceType":"script"}