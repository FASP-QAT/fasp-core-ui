{"ast":null,"code":"// import * as JsStore from 'jsstore';\n// import { IDataBase, DATA_TYPE, ITable } from 'jsstore';\n// import CryptoJS from 'crypto-js'\n// import { SECRET_KEY } from '../Constants.js'\n// // This will ensure that we are using only one instance. \n// // Otherwise due to multiple instance multiple worker will be created.\n// export const idbCon = new JsStore.Connection();\n// export const dbname = 'fasp';\n// function getDbSchema() {\n//     var tblDataSource = {\n//         name: 'dataSource',\n//         columns: {\n//             // Here \"Id\" is name of column \n//             dataSourceId: { primaryKey: true },\n//             active: { notNull: true, dataType: \"boolean\" },\n//             dataSourceType: { notNull: true, dataType: \"object\" },\n//             label: { notNull: true, dataType: \"object\" }\n//         }\n//     };\n//     var tblCurrency = {\n//         name: 'currency',\n//         columns: {\n//             // Here \"Id\" is name of column \n//             currencyId: { primaryKey: true, dataType: \"number\" },\n//             conversionRateToUsd: { notNull: true, dataType: \"number\" },\n//             currencyCode: { notNull: true, dataType: \"string\" },\n//             currencySymbol: { notNull: true, dataType: \"string\" },\n//             label: { notNull: true, dataType: \"object\" }\n//         }\n//     };\n//     var db = {\n//         name: dbname,\n//         tables: [tblDataSource, tblCurrency]\n//     }\n//     return db;\n// }\n// export function syncDataSource(json) {\n//     var database = getDbSchema();\n//     var isDbCreated = idbCon.initDb(database);\n//     for (var i = 0; i < json.length; i++) {\n//         console.log(\"in loop\")\n//         var newData = {\n//             dataSourceId: json[i].dataSourceId,\n//             active: json[i].active,\n//             dataSourceType: json[i].dataSourceType,\n//             label: json[i].label\n//         }\n//         console.log(\"datasource\",newData)\n//         idbCon.insert({\n//             into: \"dataSource\",\n//             upsert: true,\n//             values: [newData], //you can insert multiple values at a time\n//         })\n//     }\n// }\n// export function syncCurrency(json) {\n//     var database = getDbSchema();\n//     var isDbCreated = idbCon.initDb(database);\n//     for (var i = 0; i < json.length; i++) {\n//         console.log(\"in loop\")\n//         var newData = {\n//             currencyId: json[i].currencyId,\n//             conversionRateToUsd: json[i].conversionRateToUsd,\n//             currencyCode: json[i].currencyCode,\n//             currencySymbol: json[i].currencySymbol,\n//             label: json[i].label\n//         }\n//         idbCon.insert({\n//             into: \"currency\",\n//             upsert: true,\n//             values: [newData], //you can insert multiple values at a time\n//         })\n//     }\n// }","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/CommonComponent/JsStoreFunctionsCore.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import * as JsStore from 'jsstore';\n// import { IDataBase, DATA_TYPE, ITable } from 'jsstore';\n// import CryptoJS from 'crypto-js'\n// import { SECRET_KEY } from '../Constants.js'\n// // This will ensure that we are using only one instance. \n// // Otherwise due to multiple instance multiple worker will be created.\n// export const idbCon = new JsStore.Connection();\n// export const dbname = 'fasp';\n\n// function getDbSchema() {\n//     var tblDataSource = {\n//         name: 'dataSource',\n//         columns: {\n//             // Here \"Id\" is name of column \n//             dataSourceId: { primaryKey: true },\n//             active: { notNull: true, dataType: \"boolean\" },\n//             dataSourceType: { notNull: true, dataType: \"object\" },\n//             label: { notNull: true, dataType: \"object\" }\n//         }\n//     };\n//     var tblCurrency = {\n//         name: 'currency',\n//         columns: {\n//             // Here \"Id\" is name of column \n//             currencyId: { primaryKey: true, dataType: \"number\" },\n//             conversionRateToUsd: { notNull: true, dataType: \"number\" },\n//             currencyCode: { notNull: true, dataType: \"string\" },\n//             currencySymbol: { notNull: true, dataType: \"string\" },\n//             label: { notNull: true, dataType: \"object\" }\n//         }\n//     };\n//     var db = {\n//         name: dbname,\n//         tables: [tblDataSource, tblCurrency]\n//     }\n//     return db;\n// }\n\n// export function syncDataSource(json) {\n//     var database = getDbSchema();\n//     var isDbCreated = idbCon.initDb(database);\n//     for (var i = 0; i < json.length; i++) {\n//         console.log(\"in loop\")\n//         var newData = {\n//             dataSourceId: json[i].dataSourceId,\n//             active: json[i].active,\n//             dataSourceType: json[i].dataSourceType,\n//             label: json[i].label\n//         }\n//         console.log(\"datasource\",newData)\n//         idbCon.insert({\n//             into: \"dataSource\",\n//             upsert: true,\n//             values: [newData], //you can insert multiple values at a time\n//         })\n//     }\n// }\n\n// export function syncCurrency(json) {\n//     var database = getDbSchema();\n//     var isDbCreated = idbCon.initDb(database);\n//     for (var i = 0; i < json.length; i++) {\n//         console.log(\"in loop\")\n//         var newData = {\n//             currencyId: json[i].currencyId,\n//             conversionRateToUsd: json[i].conversionRateToUsd,\n//             currencyCode: json[i].currencyCode,\n//             currencySymbol: json[i].currencySymbol,\n//             label: json[i].label\n//         }\n//         idbCon.insert({\n//             into: \"currency\",\n//             upsert: true,\n//             values: [newData], //you can insert multiple values at a time\n//         })\n//     }\n// }"]},"metadata":{},"sourceType":"module"}