{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/DownloadProgram.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramServcie from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nvar initialValues = {\n  programId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programId: Yup.string().required('Please select program.')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar DownloadProgram = /*#__PURE__*/function (_Component) {\n  _inherits(DownloadProgram, _Component);\n\n  function DownloadProgram() {\n    var _this;\n\n    _classCallCheck(this, DownloadProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DownloadProgram).call(this));\n    _this.state = {\n      programList: []\n    };\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DownloadProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ProgramServcie.getProgramList().then(function (response) {\n        _this2.setState({\n          programList: response.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit() {\n      var programId = document.getElementById(\"programId\").value;\n      console.log(programId);\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var lan = 'en';\n      var programList = this.state.programList;\n      var programs = programList.length > 0 && programList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.programId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, getLabelText(item.label, lan));\n      }, this);\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n\n          _this3.formSubmit();\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"Download Program Data\")), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: \"3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \"Select Program\")), React.createElement(Col, {\n            xs: \"12\",\n            md: \"9\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, React.createElement(Input, {\n            type: \"select\",\n            value: _this3.state.programId,\n            valid: !errors.programId,\n            invalid: touched.programId && !!errors.programId,\n            onChange: function onChange(e) {\n              handleChange(e);\n            },\n            onBlur: handleBlur,\n            name: \"programId\",\n            id: \"programId\",\n            multiple: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, programs), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, errors.programId)))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            onClick: function onClick() {\n              return _this3.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            size: \"sm\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-dot-circle-o\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }), \" Submit\"), React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-ban\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }), \" Reset\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DownloadProgram;\n}(Component);\n\nexport { DownloadProgram as default };","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/DownloadProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","FormFeedback","Formik","Yup","ProgramServcie","getLabelText","initialValues","programId","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","DownloadProgram","state","programList","formSubmit","bind","getProgramList","then","response","setState","data","catch","message","document","getElementById","value","console","log","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","forms","i","length","name","focus","lan","programs","map","item","label","setSubmitting","setErrors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n    , FormFeedback\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramServcie from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\n\nconst initialValues = {\n    programId: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programId: Yup.string()\n            .required('Please select program.')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\n\nexport default class DownloadProgram extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            programList: []\n        }\n        this.formSubmit=this.formSubmit.bind(this)\n    }\n\n    componentDidMount() {\n\n        ProgramServcie.getProgramList().then(response => {\n            this.setState({\n                programList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    formSubmit(){\n        var programId = document.getElementById(\"programId\").value;\n        console.log(programId);\n    }\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true\n        }\n        )\n        this.validateForm(errors)\n    }\n\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    render() {\n        const lan = 'en';\n        const { programList } = this.state;\n        let programs = programList.length > 0\n            && programList.map((item, i) => {\n                return (\n                    <option key={i} value={item.programId}>{getLabelText(item.label, lan)}</option>\n                )\n            }, this);\n        return (\n            <>\n                <Col xs=\"12\" sm=\"8\">\n                    <Card>\n                        <Formik\n                            initialValues={initialValues}\n                            validate={validate(validationSchema)}\n                            onSubmit={(values, { setSubmitting, setErrors }) => {\n                                this.formSubmit()\n                            }}\n                            render={\n                                ({\n                                    values,\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    isValid,\n                                    setTouched\n                                }) => (\n                                        <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                                            <CardHeader>\n                                                <strong>Download Program Data</strong>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup >\n                                                    <Col md=\"3\">\n                                                        <Label htmlFor=\"select\">Select Program</Label>\n                                                    </Col>\n                                                    <Col xs=\"12\" md=\"9\">\n                                                        <Input type=\"select\"\n                                                            value={this.state.programId}\n                                                            valid={!errors.programId}\n                                                            invalid={touched.programId && !!errors.programId}\n                                                            onChange={(e) => { handleChange(e); }}\n                                                            onBlur={handleBlur} name=\"programId\" id=\"programId\" multiple>\n                                                            {programs}\n                                                        </Input>\n                                                        <FormFeedback>{errors.programId}</FormFeedback>\n                                                    </Col>\n\n                                                </FormGroup>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button type=\"submit\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid} size=\"sm\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i> Submit</Button>\n                                                <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                                            </CardFooter>\n                                        </Form>\n                                    )} />\n                    </Card>\n                </Col>\n            </>\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}