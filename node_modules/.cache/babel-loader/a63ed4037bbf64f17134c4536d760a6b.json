{"ast":null,"code":"// const db1=\"\";\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../Constants.js';\nexport function getDatabase() {\n  console.log(\"in function\");\n  var db1;\n  var storeOS;\n  var openRequest = indexedDB.open('fasp', 3);\n  console.log(\"in open request\", openRequest);\n\n  openRequest.onupgradeneeded = function (e) {\n    console.log(\"in on upgrade needed\");\n    db1 = e.target.result;\n\n    if (!db1.objectStoreNames.contains('programData')) {\n      storeOS = db1.createObjectStore('programData', {\n        keyPath: 'id',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('lastSyncDate')) {\n      storeOS = db1.createObjectStore('lastSyncDate', {\n        keyPath: 'id',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('language')) {\n      storeOS = db1.createObjectStore('language', {\n        keyPath: 'languageId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('country')) {\n      storeOS = db1.createObjectStore('country', {\n        keyPath: 'countryId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('currency')) {\n      storeOS = db1.createObjectStore('currency', {\n        keyPath: 'currencyId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('unit')) {\n      storeOS = db1.createObjectStore('unit', {\n        keyPath: 'unitId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('unitType')) {\n      storeOS = db1.createObjectStore('unitType', {\n        keyPath: 'unitTypeId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('organisation')) {\n      storeOS = db1.createObjectStore('organisation', {\n        keyPath: 'organisationId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('healthArea')) {\n      storeOS = db1.createObjectStore('healthArea', {\n        keyPath: 'healthAreaId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('region')) {\n      storeOS = db1.createObjectStore('region', {\n        keyPath: 'regionId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('fundingSource')) {\n      storeOS = db1.createObjectStore('fundingSource', {\n        keyPath: 'fundingSourceId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('subFundingSource')) {\n      storeOS = db1.createObjectStore('subFundingSource', {\n        keyPath: 'subFundingSourceId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('product')) {\n      storeOS = db1.createObjectStore('product', {\n        keyPath: 'productId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('productCategory')) {\n      storeOS = db1.createObjectStore('productCategory', {\n        keyPath: 'productCategoryId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('dataSource')) {\n      storeOS = db1.createObjectStore('dataSource', {\n        keyPath: 'dataSourceId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('dataSourceType')) {\n      storeOS = db1.createObjectStore('dataSourceType', {\n        keyPath: 'dataSourceTypeId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('shipmentStatus')) {\n      storeOS = db1.createObjectStore('shipmentStatus', {\n        keyPath: 'shipmentStatusId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('shipmentStatusAllowed')) {\n      storeOS = db1.createObjectStore('shipmentStatusAllowed', {\n        keyPath: 'shipmentStatusAllowedId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('manufacturer')) {\n      storeOS = db1.createObjectStore('manufacturer', {\n        keyPath: 'manufacturerId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('logisticsUnit')) {\n      storeOS = db1.createObjectStore('logisticsUnit', {\n        keyPath: 'logisticsUnitId',\n        autoIncrement: true\n      });\n    }\n\n    if (!db1.objectStoreNames.contains('planningUnit')) {\n      storeOS = db1.createObjectStore('planningUnit', {\n        keyPath: 'planningUnitId',\n        autoIncrement: true\n      });\n    }\n  };\n\n  openRequest.onsuccess = function (e) {\n    console.log(\"in success\");\n    db1 = e.target.result;\n    return db1;\n  };\n}\nexport function saveProgram(json) {\n  console.log(\"in save program\");\n  var db1;\n  var openRequest = indexedDB.open('fasp', 3);\n\n  openRequest.onsuccess = function (e) {\n    db1 = e.target.result;\n    var transaction = db1.transaction(['programData'], 'readwrite');\n    var program = transaction.objectStore('programData');\n\n    for (var i = 0; i < json.length; i++) {\n      var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(json[i]), SECRET_KEY);\n      var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n      var userId = userBytes.toString(CryptoJS.enc.Utf8);\n      var item = {\n        id: json[i].programId + \"_v\" + json[i].programVersion + \"_uId_\" + userId,\n        programId: json[i].programId,\n        version: json[i].programVersion,\n        programName: CryptoJS.AES.encrypt(JSON.stringify(json[i].label), SECRET_KEY).toString(),\n        programData: encryptedText.toString(),\n        userId: userId\n      };\n      var putRequest = program.put(item);\n      console.log(\"afyer put\");\n    }\n\n    transaction.oncomplete = function (event) {\n      console.log(\"in trans complete\");\n      var promise = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          return resolve(\"done!\");\n        }, 0);\n      });\n      console.log(\"promise\", promise);\n      return promise;\n    };\n  };\n}","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/CommonComponent/IndexedDbFunctions.js"],"names":["CryptoJS","SECRET_KEY","getDatabase","console","log","db1","storeOS","openRequest","indexedDB","open","onupgradeneeded","e","target","result","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","onsuccess","saveProgram","json","transaction","program","objectStore","i","length","encryptedText","AES","encrypt","JSON","stringify","userBytes","decrypt","localStorage","getItem","userId","toString","enc","Utf8","item","id","programId","programVersion","version","programName","label","programData","putRequest","put","oncomplete","event","promise","Promise","resolve","reject","setTimeout"],"mappings":"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","sourcesContent":["// const db1=\"\";\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../Constants.js'\nexport function getDatabase() {\n    console.log(\"in function\")\n    var db1;\n    var storeOS;\n    var openRequest = indexedDB.open('fasp', 3);\n    console.log(\"in open request\", openRequest);\n    openRequest.onupgradeneeded = function (e) {\n        console.log(\"in on upgrade needed\");\n        db1 = e.target.result;\n        if (!db1.objectStoreNames.contains('programData')) {\n            storeOS = db1.createObjectStore('programData', { keyPath: 'id', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('lastSyncDate')) {\n            storeOS = db1.createObjectStore('lastSyncDate', { keyPath: 'id', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('language')) {\n            storeOS = db1.createObjectStore('language', { keyPath: 'languageId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('country')) {\n            storeOS = db1.createObjectStore('country', { keyPath: 'countryId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('currency')) {\n            storeOS = db1.createObjectStore('currency', { keyPath: 'currencyId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('unit')) {\n            storeOS = db1.createObjectStore('unit', { keyPath: 'unitId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('unitType')) {\n            storeOS = db1.createObjectStore('unitType', { keyPath: 'unitTypeId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('organisation')) {\n            storeOS = db1.createObjectStore('organisation', { keyPath: 'organisationId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('healthArea')) {\n            storeOS = db1.createObjectStore('healthArea', { keyPath: 'healthAreaId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('region')) {\n            storeOS = db1.createObjectStore('region', { keyPath: 'regionId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('fundingSource')) {\n            storeOS = db1.createObjectStore('fundingSource', { keyPath: 'fundingSourceId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('subFundingSource')) {\n            storeOS = db1.createObjectStore('subFundingSource', { keyPath: 'subFundingSourceId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('product')) {\n            storeOS = db1.createObjectStore('product', { keyPath: 'productId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('productCategory')) {\n            storeOS = db1.createObjectStore('productCategory', { keyPath: 'productCategoryId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('dataSource')) {\n            storeOS = db1.createObjectStore('dataSource', { keyPath: 'dataSourceId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('dataSourceType')) {\n            storeOS = db1.createObjectStore('dataSourceType', { keyPath: 'dataSourceTypeId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('shipmentStatus')) {\n            storeOS = db1.createObjectStore('shipmentStatus', { keyPath: 'shipmentStatusId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('shipmentStatusAllowed')) {\n            storeOS = db1.createObjectStore('shipmentStatusAllowed', { keyPath: 'shipmentStatusAllowedId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('manufacturer')) {\n            storeOS = db1.createObjectStore('manufacturer', { keyPath: 'manufacturerId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('logisticsUnit')) {\n            storeOS = db1.createObjectStore('logisticsUnit', { keyPath: 'logisticsUnitId', autoIncrement: true });\n        }\n        if (!db1.objectStoreNames.contains('planningUnit')) {\n            storeOS = db1.createObjectStore('planningUnit', { keyPath: 'planningUnitId', autoIncrement: true });\n        }\n    };\n    openRequest.onsuccess = function (e) {\n        console.log(\"in success\")\n        db1 = e.target.result;\n        return db1;\n    }\n}\n\nexport function saveProgram(json) {\n    console.log(\"in save program\")\n    var db1;\n    var openRequest = indexedDB.open('fasp', 3);\n    openRequest.onsuccess = function (e) {\n        db1 = e.target.result;\n        var transaction = db1.transaction(['programData'], 'readwrite');\n        var program = transaction.objectStore('programData');\n        for (var i = 0; i < json.length; i++) {\n            var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(json[i]), SECRET_KEY);\n            var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n            var userId = userBytes.toString(CryptoJS.enc.Utf8);\n            var item = {\n                id: json[i].programId + \"_v\" + json[i].programVersion + \"_uId_\" + userId,\n                programId: json[i].programId,\n                version: json[i].programVersion,\n                programName: (CryptoJS.AES.encrypt(JSON.stringify((json[i].label)), SECRET_KEY)).toString(),\n                programData: encryptedText.toString(),\n                userId: userId\n            };\n            var putRequest = program.put(item);\n            console.log(\"afyer put\")\n        }\n\n        transaction.oncomplete = function (event) {\n            console.log(\"in trans complete\");\n            let promise = new Promise(function (resolve, reject) {\n                setTimeout(() => resolve(\"done!\"), 0);\n            });\n            console.log(\"promise\",promise)\n            return promise;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}