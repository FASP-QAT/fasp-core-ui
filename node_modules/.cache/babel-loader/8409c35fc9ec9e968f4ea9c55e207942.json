{"ast":null,"code":"var $ = require('../internals/export'); // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\n\n\nvar Set = require('../modules/es.set');\n\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\n\nvar anObject = require('../internals/an-object');\n\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\nvar iterate = require('../internals/iterate');\n\nvar ordinaryOwnMetadataKeys = ReflectMetadataModule.keys;\nvar toMetadataKey = ReflectMetadataModule.toKey;\n\nvar from = function from(iter) {\n  var result = [];\n  iterate(iter, result.push, result);\n  return result;\n};\n\nvar ordinaryMetadataKeys = function ordinaryMetadataKeys(O, P) {\n  var oKeys = ordinaryOwnMetadataKeys(O, P);\n  var parent = getPrototypeOf(O);\n  if (parent === null) return oKeys;\n  var pKeys = ordinaryMetadataKeys(parent, P);\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n}; // `Reflect.getMetadataKeys` method\n// https://github.com/rbuckton/reflect-metadata\n\n\n$({\n  target: 'Reflect',\n  stat: true\n}, {\n  getMetadataKeys: function getMetadataKeys(target\n  /* , targetKey */\n  ) {\n    var targetKey = arguments.length < 2 ? undefined : toMetadataKey(arguments[1]);\n    return ordinaryMetadataKeys(anObject(target), targetKey);\n  }\n});","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/core-js/modules/esnext.reflect.get-metadata-keys.js"],"names":["$","require","Set","ReflectMetadataModule","anObject","getPrototypeOf","iterate","ordinaryOwnMetadataKeys","keys","toMetadataKey","toKey","from","iter","result","push","ordinaryMetadataKeys","O","P","oKeys","parent","pKeys","length","concat","target","stat","getMetadataKeys","targetKey","arguments","undefined"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf,C,CACA;;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,mBAAD,CAAjB;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,sCAAD,CAA5B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIM,uBAAuB,GAAGJ,qBAAqB,CAACK,IAApD;AACA,IAAIC,aAAa,GAAGN,qBAAqB,CAACO,KAA1C;;AAEA,IAAIC,IAAI,GAAG,SAAPA,IAAO,CAAUC,IAAV,EAAgB;AACzB,MAAIC,MAAM,GAAG,EAAb;AACAP,EAAAA,OAAO,CAACM,IAAD,EAAOC,MAAM,CAACC,IAAd,EAAoBD,MAApB,CAAP;AACA,SAAOA,MAAP;AACD,CAJD;;AAMA,IAAIE,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUC,CAAV,EAAaC,CAAb,EAAgB;AACzC,MAAIC,KAAK,GAAGX,uBAAuB,CAACS,CAAD,EAAIC,CAAJ,CAAnC;AACA,MAAIE,MAAM,GAAGd,cAAc,CAACW,CAAD,CAA3B;AACA,MAAIG,MAAM,KAAK,IAAf,EAAqB,OAAOD,KAAP;AACrB,MAAIE,KAAK,GAAGL,oBAAoB,CAACI,MAAD,EAASF,CAAT,CAAhC;AACA,SAAOG,KAAK,CAACC,MAAN,GAAeH,KAAK,CAACG,MAAN,GAAeV,IAAI,CAAC,IAAIT,GAAJ,CAAQgB,KAAK,CAACI,MAAN,CAAaF,KAAb,CAAR,CAAD,CAAnB,GAAoDA,KAAnE,GAA2EF,KAAlF;AACD,CAND,C,CAQA;AACA;;;AACAlB,CAAC,CAAC;AAAEuB,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAD,EAAoC;AACnCC,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBF;AAAO;AAAhC,IAAmD;AAClE,QAAIG,SAAS,GAAGC,SAAS,CAACN,MAAV,GAAmB,CAAnB,GAAuBO,SAAvB,GAAmCnB,aAAa,CAACkB,SAAS,CAAC,CAAD,CAAV,CAAhE;AACA,WAAOZ,oBAAoB,CAACX,QAAQ,CAACmB,MAAD,CAAT,EAAmBG,SAAnB,CAA3B;AACD;AAJkC,CAApC,CAAD","sourcesContent":["var $ = require('../internals/export');\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nvar Set = require('../modules/es.set');\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\nvar anObject = require('../internals/an-object');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar iterate = require('../internals/iterate');\n\nvar ordinaryOwnMetadataKeys = ReflectMetadataModule.keys;\nvar toMetadataKey = ReflectMetadataModule.toKey;\n\nvar from = function (iter) {\n  var result = [];\n  iterate(iter, result.push, result);\n  return result;\n};\n\nvar ordinaryMetadataKeys = function (O, P) {\n  var oKeys = ordinaryOwnMetadataKeys(O, P);\n  var parent = getPrototypeOf(O);\n  if (parent === null) return oKeys;\n  var pKeys = ordinaryMetadataKeys(parent, P);\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n};\n\n// `Reflect.getMetadataKeys` method\n// https://github.com/rbuckton/reflect-metadata\n$({ target: 'Reflect', stat: true }, {\n  getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {\n    var targetKey = arguments.length < 2 ? undefined : toMetadataKey(arguments[1]);\n    return ordinaryMetadataKeys(anObject(target), targetKey);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}