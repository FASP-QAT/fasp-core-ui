{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/ProductCategory/AddProductCategory.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport jexcel from 'jexcel';\nimport \"./style.css\";\nimport \"../../../node_modules/jexcel/dist/jexcel.css\";\n\nvar AddProductCategory = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddProductCategory, _React$Component);\n\n  function AddProductCategory(props) {\n    var _this;\n\n    _classCallCheck(this, AddProductCategory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProductCategory).call(this, props));\n\n    _this.componentDidMount = function () {\n      this.el = jexcel(ReactDOM.findDOMNode(this).children[0], this.options);\n    };\n\n    _this.addRow = function () {\n      this.el.insertRow();\n    };\n\n    _this.getUpdatedData = function () {\n      console.log(this.el.getData());\n    };\n\n    _this.options = props.options;\n    return _this;\n  }\n\n  _createClass(AddProductCategory, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Add new row\",\n        onClick: function onClick() {\n          return _this2.addRow();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Get Updated Data\",\n        onClick: function onClick() {\n          return _this2.getUpdatedData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Increase Indent\",\n        onClick: function onClick() {\n          return _this2.increaseIndent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Decrease Indent\",\n        onClick: function onClick() {\n          return _this2.decreaseIndent();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Move Row Up\",\n        onClick: function onClick() {\n          return _this2.moveRowUp();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddProductCategory;\n}(React.Component);\n\nexport { AddProductCategory as default };\nvar options = {\n  data: [[1, 'Cheese', 1, '0'], [2, 'Apples', 1, '0.1'], [3, 'Carrots', 1, '1']],\n  minDimensions: [3, 10],\n  colHeaders: ['Product Category Id', 'Product Category Name', 'Indent/Level', 'Sort Level'],\n  colWidths: [200, 300, 200, 200],\n  colAlignments: ['left', 'left', 'left', 'left'],\n  style: [{\n    A1: 'background-color: orange; '\n  }, {\n    B1: 'background-color: orange; '\n  }, {\n    C1: 'background-color: orange; '\n  }, {\n    D1: 'background-color: orange; '\n  }],\n  contextMenu: function contextMenu(obj, x, y, e) {\n    var items = []; // Move Row Up By one Index\n\n    items.push({\n      title: \"Move Selected Row Up\",\n      onclick: function onclick() {\n        obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) - 1);\n      }\n    }); // Move Row Down By one Index\n\n    items.push({\n      title: \"Move Selected Row Down\",\n      onclick: function onclick() {\n        obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) + 1);\n      }\n    }); //Add Indent To Selected Cell Data\n\n    items.push({\n      title: \"Increse Indent\",\n      onclick: function onclick() {\n        console.log(obj);\n        console.log(obj.getSelectedRows().innerText);\n      }\n    }); // -------------------------------------\n\n    if (y == null) {\n      // Insert a new column\n      if (obj.options.allowInsertColumn == true) {\n        items.push({\n          title: obj.options.text.insertANewColumnBefore,\n          onclick: function onclick() {\n            obj.insertColumn(1, parseInt(x), 1);\n          }\n        });\n      }\n\n      if (obj.options.allowInsertColumn == true) {\n        items.push({\n          title: obj.options.text.insertANewColumnAfter,\n          onclick: function onclick() {\n            obj.insertColumn(1, parseInt(x), 0);\n          }\n        });\n      } // Delete a column\n\n\n      if (obj.options.allowDeleteColumn == true) {\n        items.push({\n          title: obj.options.text.deleteSelectedColumns,\n          onclick: function onclick() {\n            obj.deleteColumn(obj.getSelectedColumns().length ? undefined : parseInt(x));\n          }\n        });\n      } // Rename column\n\n\n      if (obj.options.allowRenameColumn == true) {\n        items.push({\n          title: obj.options.text.renameThisColumn,\n          onclick: function onclick() {\n            obj.setHeader(x);\n          }\n        });\n      } // Sorting\n\n\n      if (obj.options.columnSorting == true) {\n        // Line\n        items.push({\n          type: 'line'\n        });\n        items.push({\n          title: obj.options.text.orderAscending,\n          onclick: function onclick() {\n            obj.orderBy(x, 0);\n          }\n        });\n        items.push({\n          title: obj.options.text.orderDescending,\n          onclick: function onclick() {\n            obj.orderBy(x, 1);\n          }\n        });\n      }\n    } else {\n      // Insert new row\n      if (obj.options.allowInsertRow == true) {\n        items.push({\n          title: obj.options.text.insertANewRowBefore,\n          onclick: function onclick() {\n            obj.insertRow(1, parseInt(y), 1);\n          }\n        });\n        items.push({\n          title: obj.options.text.insertANewRowAfter,\n          onclick: function onclick() {\n            obj.insertRow(1, parseInt(y));\n          }\n        });\n      }\n\n      if (obj.options.allowDeleteRow == true) {\n        items.push({\n          title: obj.options.text.deleteSelectedRows,\n          onclick: function onclick() {\n            obj.deleteRow(obj.getSelectedRows().length ? undefined : parseInt(y));\n          }\n        });\n      }\n\n      if (x) {\n        if (obj.options.allowComments == true) {\n          items.push({\n            type: 'line'\n          });\n          var title = obj.records[y][x].getAttribute('title') || '';\n          items.push({\n            title: title ? obj.options.text.editComments : obj.options.text.addComments,\n            onclick: function onclick() {\n              obj.setComments([x, y], prompt(obj.options.text.comments, title));\n            }\n          });\n\n          if (title) {\n            items.push({\n              title: obj.options.text.clearComments,\n              onclick: function onclick() {\n                obj.setComments([x, y], '');\n              }\n            });\n          }\n        }\n      }\n    } // Line\n\n\n    items.push({\n      type: 'line'\n    }); // Save\n\n    if (obj.options.allowExport) {\n      items.push({\n        title: obj.options.text.saveAs,\n        shortcut: 'Ctrl + S',\n        onclick: function onclick() {\n          obj.download();\n        }\n      });\n    } // About\n\n\n    if (obj.options.about) {\n      items.push({\n        title: obj.options.text.about,\n        onclick: function onclick() {\n          alert(obj.options.about);\n        }\n      });\n    }\n\n    return items;\n  }\n}; // document.getElementById(\"root\").jexcel({\n//     data:options.data,\n//     colHeaders: [ 'Product', 'Quantity', 'Price', 'Total' ],\n//     colWidths: [ 300, 100, 100, 100 ],\n//     columns: [\n//         { type: 'autocomplete', source:[ 'Apples','Bananas','Carrots','Oranges','Cheese','Pears' ] },\n//         { type: 'number' },\n//         { type: 'number' },\n//         { type: 'number' },\n//     ]\n// });\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(AddProductCategory, {\n  options: options,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 265\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/ProductCategory/AddProductCategory.js"],"names":["React","ReactDOM","jexcel","AddProductCategory","props","componentDidMount","el","findDOMNode","children","options","addRow","insertRow","getUpdatedData","console","log","getData","increaseIndent","decreaseIndent","moveRowUp","Component","data","minDimensions","colHeaders","colWidths","colAlignments","style","A1","B1","C1","D1","contextMenu","obj","x","y","e","items","push","title","onclick","moveRow","getSelectedRows","rowIndex","undefined","parseInt","innerText","allowInsertColumn","text","insertANewColumnBefore","insertColumn","insertANewColumnAfter","allowDeleteColumn","deleteSelectedColumns","deleteColumn","getSelectedColumns","length","allowRenameColumn","renameThisColumn","setHeader","columnSorting","type","orderAscending","orderBy","orderDescending","allowInsertRow","insertANewRowBefore","insertANewRowAfter","allowDeleteRow","deleteSelectedRows","deleteRow","allowComments","records","getAttribute","editComments","addComments","setComments","prompt","comments","clearComments","allowExport","saveAs","shortcut","download","about","alert","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport jexcel from 'jexcel';\nimport \"./style.css\";\nimport \"../../../node_modules/jexcel/dist/jexcel.css\";\n\nexport default class AddProductCategory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.options = props.options;\n    }\n\n    componentDidMount = function () {\n        this.el = jexcel(ReactDOM.findDOMNode(this).children[0], this.options);\n    };\n\n    addRow = function () {\n        this.el.insertRow();\n    };\n    getUpdatedData = function () {\n        console.log(this.el.getData());\n    };\n    render() {\n        return (\n            <div>\n                <div />\n                <br />\n                <input\n                    type=\"button\"\n                    value=\"Add new row\"\n                    onClick={() => this.addRow()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Get Updated Data\"\n                    onClick={() => this.getUpdatedData()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Increase Indent\"\n                    onClick={() => this.increaseIndent()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Decrease Indent\"\n                    onClick={() => this.decreaseIndent()}\n                />\n                &nbsp;\n                 <input\n                    type=\"button\"\n                    value=\"Move Row Up\"\n                    onClick={() => this.moveRowUp()}\n                />\n            </div>\n        );\n    }\n}\n\nvar options = {\n    data: [\n        [1, 'Cheese', 1, '0'],\n        [2, 'Apples', 1, '0.1'],\n        [3, 'Carrots', 1, '1']\n\n    ],\n    minDimensions: [3, 10],\n    colHeaders: ['Product Category Id', 'Product Category Name', 'Indent/Level', 'Sort Level'],\n    colWidths: [200, 300, 200, 200],\n    colAlignments:['left','left','left','left'],\n    style:[\n        { A1: 'background-color: orange; ' },\n        { B1: 'background-color: orange; ' },\n        { C1: 'background-color: orange; ' },\n        { D1: 'background-color: orange; ' },\n    ],\n    contextMenu: function (obj, x, y, e) {\n        var items = [];\n\n\n        // Move Row Up By one Index\n\n        items.push({\n            title: \"Move Selected Row Up\",\n            onclick: function () {\n                obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) - 1);\n            }\n        });\n\n        // Move Row Down By one Index\n        items.push({\n            title: \"Move Selected Row Down\",\n            onclick: function () {\n                obj.moveRow(obj.getSelectedRows().rowIndex ? undefined : parseInt(y), obj.getSelectedRows().rowIndex ? undefined : parseInt(y) + 1);\n            }\n        });\n\n        //Add Indent To Selected Cell Data\n\n        items.push({\n            title: \"Increse Indent\",\n            onclick: function () {\n                console.log(obj);\n                console.log(obj.getSelectedRows().innerText);\n            }\n        });\n        // -------------------------------------\n\n        if (y == null) {\n            // Insert a new column\n            if (obj.options.allowInsertColumn == true) {\n                items.push({\n                    title: obj.options.text.insertANewColumnBefore,\n                    onclick: function () {\n                        obj.insertColumn(1, parseInt(x), 1);\n                    }\n                });\n            }\n\n            if (obj.options.allowInsertColumn == true) {\n                items.push({\n                    title: obj.options.text.insertANewColumnAfter,\n                    onclick: function () {\n                        obj.insertColumn(1, parseInt(x), 0);\n                    }\n                });\n            }\n\n            // Delete a column\n            if (obj.options.allowDeleteColumn == true) {\n                items.push({\n                    title: obj.options.text.deleteSelectedColumns,\n                    onclick: function () {\n                        obj.deleteColumn(obj.getSelectedColumns().length ? undefined : parseInt(x));\n                    }\n                });\n            }\n\n\n\n            // Rename column\n            if (obj.options.allowRenameColumn == true) {\n                items.push({\n                    title: obj.options.text.renameThisColumn,\n                    onclick: function () {\n                        obj.setHeader(x);\n                    }\n                });\n            }\n\n            // Sorting\n            if (obj.options.columnSorting == true) {\n                // Line\n                items.push({ type: 'line' });\n\n                items.push({\n                    title: obj.options.text.orderAscending,\n                    onclick: function () {\n                        obj.orderBy(x, 0);\n                    }\n                });\n                items.push({\n                    title: obj.options.text.orderDescending,\n                    onclick: function () {\n                        obj.orderBy(x, 1);\n                    }\n                });\n            }\n        } else {\n            // Insert new row\n            if (obj.options.allowInsertRow == true) {\n                items.push({\n                    title: obj.options.text.insertANewRowBefore,\n                    onclick: function () {\n                        obj.insertRow(1, parseInt(y), 1);\n                    }\n                });\n\n                items.push({\n                    title: obj.options.text.insertANewRowAfter,\n                    onclick: function () {\n                        obj.insertRow(1, parseInt(y));\n                    }\n                });\n            }\n\n            if (obj.options.allowDeleteRow == true) {\n                items.push({\n                    title: obj.options.text.deleteSelectedRows,\n                    onclick: function () {\n                        obj.deleteRow(obj.getSelectedRows().length ? undefined : parseInt(y));\n                    }\n                });\n            }\n\n            if (x) {\n                if (obj.options.allowComments == true) {\n                    items.push({ type: 'line' });\n\n                    var title = obj.records[y][x].getAttribute('title') || '';\n\n                    items.push({\n                        title: title ? obj.options.text.editComments : obj.options.text.addComments,\n                        onclick: function () {\n                            obj.setComments([x, y], prompt(obj.options.text.comments, title));\n                        }\n                    });\n\n                    if (title) {\n                        items.push({\n                            title: obj.options.text.clearComments,\n                            onclick: function () {\n                                obj.setComments([x, y], '');\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n        // Line\n        items.push({ type: 'line' });\n\n        // Save\n        if (obj.options.allowExport) {\n            items.push({\n                title: obj.options.text.saveAs,\n                shortcut: 'Ctrl + S',\n                onclick: function () {\n                    obj.download();\n                }\n            });\n        }\n\n        // About\n        if (obj.options.about) {\n            items.push({\n                title: obj.options.text.about,\n                onclick: function () {\n                    alert(obj.options.about);\n                }\n            });\n        }\n        return items;\n    }\n\n};\n\n\n// document.getElementById(\"root\").jexcel({\n//     data:options.data,\n//     colHeaders: [ 'Product', 'Quantity', 'Price', 'Total' ],\n//     colWidths: [ 300, 100, 100, 100 ],\n//     columns: [\n//         { type: 'autocomplete', source:[ 'Apples','Bananas','Carrots','Oranges','Cheese','Pears' ] },\n//         { type: 'number' },\n//         { type: 'number' },\n//         { type: 'number' },\n//     ]\n// });\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<AddProductCategory options={options} />, rootElement);\n"]},"metadata":{},"sourceType":"module"}