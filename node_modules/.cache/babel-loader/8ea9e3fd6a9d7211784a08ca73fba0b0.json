{"ast":null,"code":"var simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/memoize-one/dist/memoize-one.esm.js"],"names":["simpleIsEqual","a","b","index","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","isNewArgEqualToLast","newArg","result","_len","arguments","length","newArgs","Array","_key","every","apply"],"mappings":"AAAA,IAAIA,aAAa,GAAG,SAASA,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC/C,SAAOD,CAAC,KAAKC,CAAb;AACD,CAFD;;AAIA,SAASC,KAAT,CAAgBC,QAAhB,EAA0BC,OAA1B,EAAmC;AACjC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAGL,aAAV;AACD;;AAED,MAAIM,QAAJ;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAJ;AACA,MAAIC,UAAU,GAAG,KAAjB;;AAEA,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,MAA7B,EAAqCR,KAArC,EAA4C;AACpE,WAAOE,OAAO,CAACM,MAAD,EAASJ,QAAQ,CAACJ,KAAD,CAAjB,CAAd;AACD,GAFD;;AAIA,MAAIS,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,OAAO,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAAvC,EAAwDK,IAAI,GAAG,CAApE,EAAuEA,IAAI,GAAGL,IAA9E,EAAoFK,IAAI,EAAxF,EAA4F;AAC1FF,MAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBJ,SAAS,CAACI,IAAD,CAAzB;AACD;;AAED,QAAIT,UAAU,IAAIH,QAAQ,KAAK,IAA3B,IAAmCU,OAAO,CAACD,MAAR,KAAmBR,QAAQ,CAACQ,MAA/D,IAAyEC,OAAO,CAACG,KAAR,CAAcT,mBAAd,CAA7E,EAAiH;AAC/G,aAAOF,UAAP;AACD;;AAEDA,IAAAA,UAAU,GAAGJ,QAAQ,CAACgB,KAAT,CAAe,IAAf,EAAqBJ,OAArB,CAAb;AACAP,IAAAA,UAAU,GAAG,IAAb;AACAH,IAAAA,QAAQ,GAAG,IAAX;AACAC,IAAAA,QAAQ,GAAGS,OAAX;AACA,WAAOR,UAAP;AACD,GAdD;;AAgBA,SAAOI,MAAP;AACD;;AAED,eAAeT,KAAf","sourcesContent":["var simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}