{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend'; //import LanguageDetector from 'i18next-browser-languagedetector';\n\nimport { initReactI18next } from 'react-i18next'; //import moment from 'moment';\n\nvar lang = localStorage.getItem('lang');\n\nif (lang == null) {\n  lang = 'en';\n  localStorage.setItem('lang', lang);\n}\n\ni18n.use(Backend).use(initReactI18next).init({\n  lng: lang,\n  backend: {\n    /* translation file path */\n    loadPath: '/locales/{{lng}}.json',\n    crossDomain: true\n  },\n  fallbackLng: 'en',\n  debug: true,\n\n  /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n  ns: ['translations'],\n  defaultNS: 'translations',\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: ','\n  },\n  react: {\n    wait: true\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/i18n.js"],"names":["i18n","Backend","initReactI18next","lang","localStorage","getItem","setItem","use","init","lng","backend","loadPath","crossDomain","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,eAAjC,C,CACA;;AACA,IAAIC,IAAI,GAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAV;;AACA,IAAGF,IAAI,IAAE,IAAT,EAAc;AACZA,EAAAA,IAAI,GAAC,IAAL;AACAC,EAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA4BH,IAA5B;AAED;;AACGH,IAAI,CACLO,GADC,CACGN,OADH,EAEDM,GAFC,CAEGL,gBAFH,EAGDM,IAHC,CAGI;AACJC,EAAAA,GAAG,EAAEN,IADD;AAEJO,EAAAA,OAAO,EAAE;AACP;AACAC,IAAAA,QAAQ,EAAE,uBAFH;AAGPC,IAAAA,WAAW,EAAE;AAHN,GAFL;AAOJC,EAAAA,WAAW,EAAE,IAPT;AAQJC,EAAAA,KAAK,EAAE,IARH;;AASJ;AACAC,EAAAA,EAAE,EAAE,CAAC,cAAD,CAVA;AAWJC,EAAAA,SAAS,EAAE,cAXP;AAYJC,EAAAA,YAAY,EAAE,KAZV;AAaJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA;AAEbC,IAAAA,eAAe,EAAE;AAFJ,GAbX;AAiBJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AAjBH,CAHJ;AA0BF,eAAetB,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\n//import LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n//import moment from 'moment';\nvar lang =localStorage.getItem('lang');\nif(lang==null){\n  lang='en';\n  localStorage.setItem('lang',lang);\n\n}\n    i18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    lng: lang,\n    backend: {\n      /* translation file path */\n      loadPath: '/locales/{{lng}}.json',\n      crossDomain: true\n    },\n    fallbackLng: 'en',\n    debug: true,\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\n    ns: ['translations'],\n    defaultNS: 'translations',\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n      formatSeparator: ','\n    },\n    react: {\n      wait: true\n    }\n  })\n\n\n  export default i18n;"]},"metadata":{},"sourceType":"module"}