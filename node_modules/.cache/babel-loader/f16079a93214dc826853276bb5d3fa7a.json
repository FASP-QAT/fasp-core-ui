{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar createClass = require('create-react-class');\n\nvar QuillMixin = require('./mixin');\n\nvar find = require('lodash/find');\n\nvar some = require('lodash/some');\n\nvar isEqual = require('lodash/isEqual');\n\nvar T = require('prop-types');\n\nvar DOM = require('react-dom-factories');\n\nvar QuillComponent = createClass({\n  displayName: 'Quill',\n  mixins: [QuillMixin],\n  propTypes: {\n    id: T.string,\n    className: T.string,\n    theme: T.string,\n    style: T.object,\n    readOnly: T.bool,\n    value: T.oneOfType([T.string, T.shape({\n      ops: T.array\n    })]),\n    defaultValue: T.oneOfType([T.string, T.shape({\n      ops: T.array\n    })]),\n    placeholder: T.string,\n    tabIndex: T.number,\n    bounds: T.oneOfType([T.string, T.element]),\n    onChange: T.func,\n    onChangeSelection: T.func,\n    onFocus: T.func,\n    onBlur: T.func,\n    onKeyPress: T.func,\n    onKeyDown: T.func,\n    onKeyUp: T.func,\n    preserveWhitespace: T.bool,\n    modules: function modules(props) {\n      var isNotObject = T.object.apply(this, arguments);\n      if (isNotObject) return isNotObject;\n      if (props.modules && props.modules.toolbar && props.modules.toolbar[0] && props.modules.toolbar[0].type) return new Error('Since v1.0.0, React Quill will not create a custom toolbar for you ' + 'anymore. Create a toolbar explictly, or let Quill create one. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');\n    },\n    toolbar: function toolbar(props) {\n      if ('toolbar' in props) return new Error('The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');\n    },\n    formats: function formats(props) {\n      var isNotArrayOfString = T.arrayOf(T.string).apply(this, arguments);\n      if (isNotArrayOfString) return new Error('You cannot specify custom `formats` anymore. Use Parchment instead.  ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    styles: function styles(props) {\n      if ('styles' in props) return new Error('The `styles` prop has been deprecated. Use custom stylesheets instead. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    pollInterval: function pollInterval(props) {\n      if ('pollInterval' in props) return new Error('The `pollInterval` property does not have any effect anymore. ' + 'You can safely remove it from your props.' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    children: function children(props) {\n      // Validate that the editor has only one child element and it is not a <textarea>\n      var isNotASingleElement = T.element.apply(this, arguments);\n      if (isNotASingleElement) return new Error('The Quill editing area can only be composed of a single React element.');\n\n      if (React.Children.count(props.children)) {\n        var child = React.Children.only(props.children);\n        if (child.type === 'textarea') return new Error('Quill does not support editing on a <textarea>. Use a <div> instead.');\n      }\n    }\n  },\n\n  /*\n  Changing one of these props should cause a full re-render.\n  */\n  dirtyProps: ['modules', 'formats', 'bounds', 'theme', 'children'],\n\n  /*\n  Changing one of these props should cause a regular update.\n  */\n  cleanProps: ['id', 'className', 'style', 'placeholder', 'tabIndex', 'onChange', 'onChangeSelection', 'onFocus', 'onBlur', 'onKeyPress', 'onKeyDown', 'onKeyUp'],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      theme: 'snow',\n      modules: {}\n    };\n  },\n\n  /*\n  We consider the component to be controlled if `value` is being sent in props.\n  */\n  isControlled: function isControlled() {\n    return 'value' in this.props;\n  },\n  getInitialState: function getInitialState() {\n    return {\n      generation: 0,\n      value: this.isControlled() ? this.props.value : this.props.defaultValue\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps, nextState) {\n    var editor = this.editor; // If the component is unmounted and mounted too quickly\n    // an error is thrown in setEditorContents since editor is\n    // still undefined. Must check if editor is undefined\n    // before performing this call.\n\n    if (!editor) return; // Update only if we've been passed a new `value`.\n    // This leaves components using `defaultValue` alone.\n\n    if ('value' in nextProps) {\n      var currentContents = this.getEditorContents();\n      var nextContents = nextProps.value;\n      if (nextContents === this.lastDeltaChangeSet) throw new Error('You are passing the `delta` object from the `onChange` event back ' + 'as `value`. You most probably want `editor.getContents()` instead. ' + 'See: https://github.com/zenoamaro/react-quill#using-deltas'); // NOTE: Seeing that Quill is missing a way to prevent\n      //       edits, we have to settle for a hybrid between\n      //       controlled and uncontrolled mode. We can't prevent\n      //       the change, but we'll still override content\n      //       whenever `value` differs from current state.\n      // NOTE: Comparing an HTML string and a Quill Delta will always trigger \n      //       a change, regardless of whether they represent the same document.\n\n      if (!this.isEqualValue(nextContents, currentContents)) {\n        this.setEditorContents(editor, nextContents);\n      }\n    } // We can update readOnly state in-place.\n\n\n    if ('readOnly' in nextProps) {\n      if (nextProps.readOnly !== this.props.readOnly) {\n        this.setEditorReadOnly(editor, nextProps.readOnly);\n      }\n    } // If we need to regenerate the component, we can avoid a detailed\n    // in-place update step, and just let everything rerender.\n\n\n    if (this.shouldComponentRegenerate(nextProps, nextState)) {\n      return this.regenerate();\n    }\n  },\n  componentDidMount: function componentDidMount() {\n    this.editor = this.createEditor(this.getEditingArea(), this.getEditorConfig()); // Restore editor from Quill's native formats in regeneration scenario\n\n    if (this.quillDelta) {\n      this.editor.setContents(this.quillDelta);\n      this.editor.setSelection(this.quillSelection);\n      this.editor.focus();\n      this.quillDelta = this.quillSelection = null;\n      return;\n    }\n\n    if (this.state.value) {\n      this.setEditorContents(this.editor, this.state.value);\n      return;\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var editor;\n\n    if (editor = this.getEditor()) {\n      this.unhookEditor(editor);\n      this.editor = null;\n    }\n  },\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n    var self = this; // If the component has been regenerated, we already know we should update.\n\n    if (this.state.generation !== nextState.generation) {\n      return true;\n    } // Compare props that require React updating the DOM.\n\n\n    return some(this.cleanProps, function (prop) {\n      // Note that `isEqual` compares deeply, making it safe to perform\n      // non-immutable updates, at the cost of performance.\n      return !isEqual(nextProps[prop], self.props[prop]);\n    });\n  },\n  shouldComponentRegenerate: function shouldComponentRegenerate(nextProps, nextState) {\n    var self = this; // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n\n    return some(this.dirtyProps, function (prop) {\n      // Note that `isEqual` compares deeply, making it safe to perform\n      // non-immutable updates, at the cost of performance.\n      return !isEqual(nextProps[prop], self.props[prop]);\n    });\n  },\n\n  /*\n  If we could not update settings from the new props in-place, we have to tear\n  down everything and re-render from scratch.\n  */\n  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n    if (this.state.generation !== nextState.generation) {\n      this.componentWillUnmount();\n    }\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n    if (this.state.generation !== prevState.generation) {\n      this.componentDidMount();\n    }\n  },\n  getEditorConfig: function getEditorConfig() {\n    return {\n      bounds: this.props.bounds,\n      formats: this.props.formats,\n      modules: this.props.modules,\n      placeholder: this.props.placeholder,\n      readOnly: this.props.readOnly,\n      scrollingContainer: this.props.scrollingContainer,\n      tabIndex: this.props.tabIndex,\n      theme: this.props.theme\n    };\n  },\n  getEditor: function getEditor() {\n    return this.editor;\n  },\n  getEditingArea: function getEditingArea() {\n    return ReactDOM.findDOMNode(this.editingArea);\n  },\n  getEditorContents: function getEditorContents() {\n    return this.state.value;\n  },\n  getEditorSelection: function getEditorSelection() {\n    return this.state.selection;\n  },\n\n  /*\n  True if the value is a Delta instance or a Delta look-alike.\n  */\n  isDelta: function isDelta(value) {\n    return value && value.ops;\n  },\n\n  /*\n  Special comparison function that knows how to compare Deltas.\n  */\n  isEqualValue: function isEqualValue(value, nextValue) {\n    if (this.isDelta(value) && this.isDelta(nextValue)) {\n      return isEqual(value.ops, nextValue.ops);\n    } else {\n      return isEqual(value, nextValue);\n    }\n  },\n\n  /*\n  Regenerating the editor will cause the whole tree, including the container,\n  to be cleaned up and re-rendered from scratch.\n  */\n  regenerate: function regenerate() {\n    // Cache selection and contents in Quill's native format to be restored later\n    this.quillDelta = this.editor.getContents();\n    this.quillSelection = this.editor.getSelection();\n    this.setState({\n      generation: this.state.generation + 1\n    });\n  },\n\n  /*\n  Renders an editor area, unless it has been provided one to clone.\n  */\n  renderEditingArea: function renderEditingArea() {\n    var self = this;\n    var children = this.props.children;\n    var preserveWhitespace = this.props.preserveWhitespace;\n    var properties = {\n      key: this.state.generation,\n      tabIndex: this.props.tabIndex,\n      ref: function ref(element) {\n        self.editingArea = element;\n      }\n    };\n    var customElement = React.Children.count(children) ? React.Children.only(children) : null;\n    var defaultElement = preserveWhitespace ? DOM.pre : DOM.div;\n    var editingArea = customElement ? React.cloneElement(customElement, properties) : defaultElement(properties);\n    return editingArea;\n  },\n  render: function render() {\n    return DOM.div({\n      id: this.props.id,\n      style: this.props.style,\n      key: this.state.generation,\n      className: ['quill'].concat(this.props.className).join(' '),\n      onKeyPress: this.props.onKeyPress,\n      onKeyDown: this.props.onKeyDown,\n      onKeyUp: this.props.onKeyUp\n    }, this.renderEditingArea());\n  },\n  onEditorChangeText: function onEditorChangeText(value, delta, source, editor) {\n    var currentContents = this.getEditorContents(); // We keep storing the same type of value as what the user gives us,\n    // so that value comparisons will be more stable and predictable.\n\n    var nextContents = this.isDelta(currentContents) ? editor.getContents() : editor.getHTML();\n\n    if (!this.isEqualValue(nextContents, currentContents)) {\n      // Taint this `delta` object, so we can recognize whether the user\n      // is trying to send it back as `value`, preventing a likely loop.\n      this.lastDeltaChangeSet = delta;\n      this.setState({\n        value: nextContents\n      });\n\n      if (this.props.onChange) {\n        this.props.onChange(value, delta, source, editor);\n      }\n    }\n  },\n  onEditorChangeSelection: function onEditorChangeSelection(nextSelection, source, editor) {\n    var currentSelection = this.getEditorSelection();\n    var hasGainedFocus = !currentSelection && nextSelection;\n    var hasLostFocus = currentSelection && !nextSelection;\n\n    if (isEqual(nextSelection, currentSelection)) {\n      return;\n    }\n\n    this.setState({\n      selection: nextSelection\n    });\n\n    if (this.props.onChangeSelection) {\n      this.props.onChangeSelection(nextSelection, source, editor);\n    }\n\n    if (hasGainedFocus && this.props.onFocus) {\n      this.props.onFocus(nextSelection, source, editor);\n    } else if (hasLostFocus && this.props.onBlur) {\n      this.props.onBlur(currentSelection, source, editor);\n    }\n  },\n  focus: function focus() {\n    this.editor.focus();\n  },\n  blur: function blur() {\n    this.setEditorSelection(this.editor, null);\n  }\n});\nmodule.exports = QuillComponent;","map":{"version":3,"sources":["/home/altius/fasp-core-ui/node_modules/react-quill/lib/component.js"],"names":["React","require","ReactDOM","createClass","QuillMixin","find","some","isEqual","T","DOM","QuillComponent","displayName","mixins","propTypes","id","string","className","theme","style","object","readOnly","bool","value","oneOfType","shape","ops","array","defaultValue","placeholder","tabIndex","number","bounds","element","onChange","func","onChangeSelection","onFocus","onBlur","onKeyPress","onKeyDown","onKeyUp","preserveWhitespace","modules","props","isNotObject","apply","arguments","toolbar","type","Error","formats","isNotArrayOfString","arrayOf","styles","pollInterval","children","isNotASingleElement","Children","count","child","only","dirtyProps","cleanProps","getDefaultProps","isControlled","getInitialState","generation","componentWillReceiveProps","nextProps","nextState","editor","currentContents","getEditorContents","nextContents","lastDeltaChangeSet","isEqualValue","setEditorContents","setEditorReadOnly","shouldComponentRegenerate","regenerate","componentDidMount","createEditor","getEditingArea","getEditorConfig","quillDelta","setContents","setSelection","quillSelection","focus","state","componentWillUnmount","getEditor","unhookEditor","shouldComponentUpdate","self","prop","componentWillUpdate","componentDidUpdate","prevProps","prevState","scrollingContainer","findDOMNode","editingArea","getEditorSelection","selection","isDelta","nextValue","getContents","getSelection","setState","renderEditingArea","properties","key","ref","customElement","defaultElement","pre","div","cloneElement","render","concat","join","onEditorChangeText","delta","source","getHTML","onEditorChangeSelection","nextSelection","currentSelection","hasGainedFocus","hasLostFocus","blur","setEditorSelection","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar createClass = require('create-react-class');\nvar QuillMixin = require('./mixin');\nvar find = require('lodash/find');\nvar some = require('lodash/some');\nvar isEqual = require('lodash/isEqual');\nvar T = require('prop-types');\nvar DOM = require('react-dom-factories');\n\nvar QuillComponent = createClass({\n\n\tdisplayName: 'Quill',\n\n\tmixins: [ QuillMixin ],\n\n\tpropTypes: {\n\t\tid: T.string,\n\t\tclassName: T.string,\n\t\ttheme: T.string,\n\t\tstyle: T.object,\n\t\treadOnly: T.bool,\n\t\tvalue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tdefaultValue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tplaceholder: T.string,\n\t\ttabIndex: T.number,\n\t\tbounds: T.oneOfType([T.string, T.element]),\n\t\tonChange: T.func,\n\t\tonChangeSelection: T.func,\n\t\tonFocus: T.func,\n\t\tonBlur: T.func,\n\t\tonKeyPress: T.func,\n\t\tonKeyDown: T.func,\n\t\tonKeyUp: T.func,\n\t\tpreserveWhitespace: T.bool,\n\n\t\tmodules: function(props) {\n\t\t\tvar isNotObject = T.object.apply(this, arguments);\n\t\t\tif (isNotObject) return isNotObject;\n\n\t\t\tif (\n\t\t\t\tprops.modules && \n\t\t\t\tprops.modules.toolbar &&\n\t\t\t\tprops.modules.toolbar[0] &&\n\t\t\t\tprops.modules.toolbar[0].type\n\t\t\t) return new Error(\n\t\t\t\t'Since v1.0.0, React Quill will not create a custom toolbar for you ' +\n\t\t\t\t'anymore. Create a toolbar explictly, or let Quill create one. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\ttoolbar: function(props) {\n\t\t\tif ('toolbar' in props) return new Error(\n\t\t\t\t'The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\tformats: function(props) {\n\t\t\tvar isNotArrayOfString = T.arrayOf(T.string).apply(this, arguments);\n\n\t\t\tif (isNotArrayOfString) return new Error(\n\t\t\t\t'You cannot specify custom `formats` anymore. Use Parchment instead.  ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tstyles: function(props) {\n\t\t\tif ('styles' in props) return new Error(\n\t\t\t\t'The `styles` prop has been deprecated. Use custom stylesheets instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tpollInterval: function(props) {\n\t\t\tif ('pollInterval' in props) return new Error(\n\t\t\t\t'The `pollInterval` property does not have any effect anymore. ' +\n\t\t\t\t'You can safely remove it from your props.' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tchildren: function(props) {\n\t\t\t// Validate that the editor has only one child element and it is not a <textarea>\n\t\t\tvar isNotASingleElement = T.element.apply(this, arguments);\n\t\t\tif (isNotASingleElement) return new Error(\n\t\t\t\t'The Quill editing area can only be composed of a single React element.'\n\t\t\t);\n\n\t\t\tif (React.Children.count(props.children)) {\n\t\t\t\tvar child = React.Children.only(props.children);\n\t\t\t\tif (child.type === 'textarea') return new Error(\n\t\t\t\t\t'Quill does not support editing on a <textarea>. Use a <div> instead.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\t\n\t/*\n\tChanging one of these props should cause a full re-render.\n\t*/\n\tdirtyProps: [\n\t\t'modules',\n\t\t'formats',\n\t\t'bounds',\n\t\t'theme',\n\t\t'children',\n\t],\n\n\t/*\n\tChanging one of these props should cause a regular update.\n\t*/\n\tcleanProps: [\n\t\t'id',\n\t\t'className',\n\t\t'style',\n\t\t'placeholder',\n\t\t'tabIndex',\n\t\t'onChange',\n\t\t'onChangeSelection',\n\t\t'onFocus',\n\t\t'onBlur',\n\t\t'onKeyPress',\n\t\t'onKeyDown',\n\t\t'onKeyUp',\n\t],\n\n\tgetDefaultProps: function() {\n\t\treturn {\n\t\t\ttheme: 'snow',\n\t\t\tmodules: {},\n\t\t};\n\t},\n\n\t/*\n\tWe consider the component to be controlled if `value` is being sent in props.\n\t*/\n\tisControlled: function() {\n\t\treturn 'value' in this.props;\n\t},\n\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tgeneration: 0,\n\t\t\tvalue: this.isControlled()\n\t\t\t\t? this.props.value\n\t\t\t\t: this.props.defaultValue\n\t\t};\n\t},\n\n\tcomponentWillReceiveProps: function(nextProps, nextState) {\n\t\tvar editor = this.editor;\n\n\t\t// If the component is unmounted and mounted too quickly\n\t\t// an error is thrown in setEditorContents since editor is\n\t\t// still undefined. Must check if editor is undefined\n\t\t// before performing this call.\n\t\tif (!editor) return;\n\t\t\n\t\t// Update only if we've been passed a new `value`.\n\t\t// This leaves components using `defaultValue` alone.\n\t\tif ('value' in nextProps) {\n\t\t\tvar currentContents = this.getEditorContents();\n\t\t\tvar nextContents = nextProps.value;\n\n\t\t\tif (nextContents === this.lastDeltaChangeSet) throw new Error(\n\t\t\t\t'You are passing the `delta` object from the `onChange` event back ' +\n\t\t\t\t'as `value`. You most probably want `editor.getContents()` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#using-deltas'\n\t\t\t);\n\n\t\t\t// NOTE: Seeing that Quill is missing a way to prevent\n\t\t\t//       edits, we have to settle for a hybrid between\n\t\t\t//       controlled and uncontrolled mode. We can't prevent\n\t\t\t//       the change, but we'll still override content\n\t\t\t//       whenever `value` differs from current state.\n\t\t\t// NOTE: Comparing an HTML string and a Quill Delta will always trigger \n\t\t\t//       a change, regardless of whether they represent the same document.\n\t\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t\tthis.setEditorContents(editor, nextContents);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// We can update readOnly state in-place.\n\t\tif ('readOnly' in nextProps) {\n\t\t\tif (nextProps.readOnly !== this.props.readOnly) {\n\t\t\t\tthis.setEditorReadOnly(editor, nextProps.readOnly);\n\t\t\t}\n\t\t}\n\n\t\t// If we need to regenerate the component, we can avoid a detailed\n\t\t// in-place update step, and just let everything rerender.\n\t\tif (this.shouldComponentRegenerate(nextProps, nextState)) {\n\t\t\treturn this.regenerate();\n\t\t}\n\t},\n\n\tcomponentDidMount: function() {\n\t\tthis.editor = this.createEditor(\n\t\t\tthis.getEditingArea(),\n\t\t\tthis.getEditorConfig()\n\t\t);\n\t\t// Restore editor from Quill's native formats in regeneration scenario\n\t\tif (this.quillDelta) {\n\t\t\tthis.editor.setContents(this.quillDelta);\n\t\t\tthis.editor.setSelection(this.quillSelection);\t\t\n\t\t\tthis.editor.focus();\n\t\t\tthis.quillDelta = this.quillSelection = null;\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.value) {\n\t\t\tthis.setEditorContents(this.editor, this.state.value);\n\t\t\treturn;\n\t\t}\n\t},\n\n\tcomponentWillUnmount: function() {\n\t\tvar editor; if ((editor = this.getEditor())) {\n\t\t\tthis.unhookEditor(editor);\n\t\t\tthis.editor = null;\n\t\t}\n\t},\n\n\tshouldComponentUpdate: function(nextProps, nextState) {\n\t\tvar self = this;\n\n\t\t// If the component has been regenerated, we already know we should update.\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Compare props that require React updating the DOM.\n\t\treturn some(this.cleanProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\tshouldComponentRegenerate: function(nextProps, nextState) {\n\t\tvar self = this;\n\t\t// Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n\t\treturn some(this.dirtyProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\t/*\n\tIf we could not update settings from the new props in-place, we have to tear\n\tdown everything and re-render from scratch.\n\t*/\n\tcomponentWillUpdate: function(nextProps, nextState) {\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\tthis.componentWillUnmount();\n\t\t}\n\t},\n\n\tcomponentDidUpdate: function(prevProps, prevState) {\n\t\tif (this.state.generation !== prevState.generation) {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t},\n\n\tgetEditorConfig: function() {\n\t\treturn {\n\t\t\tbounds:       this.props.bounds,\n\t\t\tformats:      this.props.formats,\n\t\t\tmodules:      this.props.modules,\n\t\t\tplaceholder:  this.props.placeholder,\n\t\t\treadOnly:     this.props.readOnly,\n      \t\t\tscrollingContainer: this.props.scrollingContainer,\n\t\t\ttabIndex:     this.props.tabIndex,\n\t\t\ttheme:        this.props.theme,\n\t\t};\n\t},\n\n\tgetEditor: function() {\n\t\treturn this.editor;\n\t},\n\n\tgetEditingArea: function () {\n\t\treturn ReactDOM.findDOMNode(this.editingArea);\n\t},\n\n\tgetEditorContents: function() {\n\t\treturn this.state.value;\n\t},\n\n\tgetEditorSelection: function() {\n\t\treturn this.state.selection;\n\t},\n\n\t/*\n\tTrue if the value is a Delta instance or a Delta look-alike.\n\t*/\n\tisDelta: function(value) {\n\t\treturn value && value.ops;\n\t},\n\n\t/*\n\tSpecial comparison function that knows how to compare Deltas.\n\t*/\n\tisEqualValue: function(value, nextValue) {\n\t\tif (this.isDelta(value) && this.isDelta(nextValue)) {\n\t\t\treturn isEqual(value.ops, nextValue.ops);\n\t\t} else {\n\t\t\treturn isEqual(value, nextValue);\n\t\t}\n\t},\n\n\t/*\n\tRegenerating the editor will cause the whole tree, including the container,\n\tto be cleaned up and re-rendered from scratch.\n\t*/\n\tregenerate: function() {\n\t\t// Cache selection and contents in Quill's native format to be restored later\n\t\tthis.quillDelta = this.editor.getContents();\n\t\tthis.quillSelection = this.editor.getSelection();\n\t\tthis.setState({\n\t\t\tgeneration: this.state.generation + 1,\n\t\t});\n\t},\n\n\t/*\n\tRenders an editor area, unless it has been provided one to clone.\n\t*/\n\trenderEditingArea: function() {\n\t\tvar self = this;\n\t\tvar children = this.props.children;\n\t\tvar preserveWhitespace = this.props.preserveWhitespace;\n\n\t\tvar properties = {\n\t\t\tkey: this.state.generation,\n\t\t\ttabIndex: this.props.tabIndex,\n\t\t\tref: function(element) { self.editingArea = element },\n\t\t};\n\n\t\tvar customElement = React.Children.count(children)\n\t\t\t? React.Children.only(children)\n\t\t\t: null;\n\t\tvar defaultElement = preserveWhitespace ? DOM.pre : DOM.div;\n\t\tvar editingArea = customElement\n\t\t\t? React.cloneElement(customElement, properties)\n\t\t\t: defaultElement(properties);\n\n\t\treturn editingArea;\n\t},\n\n\trender: function() {\n\t\treturn DOM.div({\n\t\t\tid: this.props.id,\n\t\t\tstyle: this.props.style,\n\t\t\tkey: this.state.generation,\n\t\t\tclassName: ['quill'].concat(this.props.className).join(' '),\n\t\t\tonKeyPress: this.props.onKeyPress,\n\t\t\tonKeyDown: this.props.onKeyDown,\n\t\t\tonKeyUp: this.props.onKeyUp },\n\t\t\tthis.renderEditingArea()\n\t\t);\n\t},\n\n\tonEditorChangeText: function(value, delta, source, editor) {\n\t\tvar currentContents = this.getEditorContents();\n\n\t\t// We keep storing the same type of value as what the user gives us,\n\t\t// so that value comparisons will be more stable and predictable.\n\t\tvar nextContents = this.isDelta(currentContents)\n\t\t\t? editor.getContents()\n\t\t\t: editor.getHTML();\n\t\t\n\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t// Taint this `delta` object, so we can recognize whether the user\n\t\t\t// is trying to send it back as `value`, preventing a likely loop.\n\t\t\tthis.lastDeltaChangeSet = delta;\n\n\t\t\tthis.setState({ value: nextContents });\n\n\t\t\tif (this.props.onChange) {\n\t\t\t\tthis.props.onChange(value, delta, source, editor);\n\t\t\t}\n\t\t}\n\t},\n\n\tonEditorChangeSelection: function(nextSelection, source, editor) {\n\t\tvar currentSelection = this.getEditorSelection();\n\t\tvar hasGainedFocus = !currentSelection && nextSelection;\n\t\tvar hasLostFocus = currentSelection && !nextSelection;\n\n\t\tif (isEqual(nextSelection, currentSelection)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setState({ selection: nextSelection });\n\t\t\n\t\tif (this.props.onChangeSelection) {\n\t\t\tthis.props.onChangeSelection(nextSelection, source, editor);\n\t\t}\n\n\t\tif (hasGainedFocus && this.props.onFocus) {\n\t\t\tthis.props.onFocus(nextSelection, source, editor);\n\t\t} else if (hasLostFocus && this.props.onBlur) {\n\t\t\tthis.props.onBlur(currentSelection, source, editor);\n\t\t}\n\t},\n\n\tfocus: function() {\n\t\tthis.editor.focus();\n\t},\n\n\tblur: function() {\n\t\tthis.setEditorSelection(this.editor, null);\n\t}\n\n});\n\nmodule.exports = QuillComponent;\n"]},"metadata":{},"sourceType":"script"}