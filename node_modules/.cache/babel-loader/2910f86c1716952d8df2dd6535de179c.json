{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Program/ImportProgram.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\";\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport i18n from '../../i18n';\nvar initialValues = {\n  programId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programId: Yup.string().required(i18n.t('static.program.validselectprogramtext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar ImportProgram = /*#__PURE__*/function (_Component) {\n  _inherits(ImportProgram, _Component);\n\n  function ImportProgram(props) {\n    var _this;\n\n    _classCallCheck(this, ImportProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImportProgram).call(this, props));\n    _this.state = {\n      programList: []\n    };\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_this));\n    _this.importFile = _this.importFile.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImportProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.getElementById(\"programIdDiv\").style.display = \"none\";\n      document.getElementById(\"formSubmitButton\").style.display = \"none\";\n      document.getElementById(\"fileImportDiv\").style.display = \"block\";\n      document.getElementById(\"fileImportButton\").style.display = \"block\";\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit() {\n      if (window.File && window.FileReader && window.FileList && window.Blob) {\n        if (document.querySelector('input[type=file]').files[0] == undefined) {\n          alert(i18n.t('static.program.selectfile'));\n        } else {\n          var file = document.querySelector('input[type=file]').files[0];\n          var selectedPrgArr = this.state.programId;\n          var db1;\n          var openRequest = indexedDB.open('fasp', 1);\n\n          openRequest.onsuccess = function (e) {\n            console.log(\"in success\");\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var count = 0; // console.log(\"ProgramListArray\",programListArray)\n\n            var getRequest = program.getAll();\n\n            getRequest.onerror = function (event) {// Handle errors!\n            };\n\n            getRequest.onsuccess = function (event) {\n              var _this2 = this;\n\n              var myResult = [];\n              myResult = getRequest.result;\n              var programDataJson = this.state.programListArray;\n              console.log(\"program data json\", programDataJson);\n\n              for (var i = 0; i < myResult.length; i++) {\n                for (var j = 0; j < programDataJson.length; j++) {\n                  for (var k = 0; k < selectedPrgArr.length; k++) {\n                    console.log(\"1\", programDataJson[j].filename);\n\n                    if (programDataJson[j].filename == selectedPrgArr[k].value) {\n                      var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                      var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                      console.log(\"Id\", myResult[i].id);\n                      console.log(\"Id from list\", programDataJson[j].programId + \"_v\" + programDataJson[j].version + \"_uId_\" + userId);\n\n                      if (myResult[i].id == programDataJson[j].programId + \"_v\" + programDataJson[j].version + \"_uId_\" + userId) {\n                        count++;\n                      }\n                    }\n                  }\n                }\n\n                console.log(\"count\", count);\n              }\n\n              if (count == 0) {\n                JSZip.loadAsync(file).then(function (zip) {\n                  Object.keys(zip.files).forEach(function (filename) {\n                    zip.files[filename].async('string').then(function (fileData) {\n                      for (var j = 0; j < selectedPrgArr.length; j++) {\n                        if (selectedPrgArr[j].value == filename) {\n                          var json = JSON.parse(fileData);\n                          db1 = e.target.result;\n                          var transaction2 = db1.transaction(['programData'], 'readwrite');\n                          var program2 = transaction2.objectStore('programData');\n                          var json = JSON.parse(fileData);\n                          var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                          var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                          json.userId = userId;\n                          json.id = json.programId + \"_v\" + json.version + \"_uId_\" + userId;\n                          var addProgramDataRequest = program2.put(json);\n\n                          addProgramDataRequest.onerror = function (event) {};\n                        }\n                      }\n                    });\n                  });\n                });\n                this.setState({\n                  message: i18n.t('static.program.dataimportsuccess')\n                });\n                this.props.history.push(\"/dashboard/\" + i18n.t('static.program.dataimportsuccess'));\n              } else {\n                confirmAlert({\n                  title: i18n.t('static.program.confirmsubmit'),\n                  message: i18n.t('static.program.programwithsameversion'),\n                  buttons: [{\n                    label: i18n.t('static.program.yes'),\n                    onClick: function onClick() {\n                      JSZip.loadAsync(file).then(function (zip) {\n                        Object.keys(zip.files).forEach(function (filename) {\n                          zip.files[filename].async('string').then(function (fileData) {\n                            for (var j = 0; j < selectedPrgArr.length; j++) {\n                              if (selectedPrgArr[j].value == filename) {\n                                var json = JSON.parse(fileData);\n                                db1 = e.target.result;\n                                var transaction2 = db1.transaction(['programData'], 'readwrite');\n                                var program2 = transaction2.objectStore('programData');\n                                var json = JSON.parse(fileData);\n                                var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                                var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                                json.userId = userId;\n                                json.id = json.programId + \"_v\" + json.version + \"_uId_\" + userId;\n                                var addProgramDataRequest = program2.put(json);\n\n                                addProgramDataRequest.onerror = function (event) {};\n                              }\n                            }\n                          });\n                        });\n                      });\n\n                      _this2.setState({\n                        message: i18n.t('static.program.dataimportsuccess')\n                      });\n\n                      _this2.props.history.push(\"/dashboard/\" + i18n.t('static.program.dataimportsuccess'));\n                    }\n                  }, {\n                    label: i18n.t('static.program.no'),\n                    onClick: function onClick() {\n                      _this2.setState({\n                        message: i18n.t('static.program.actioncancelled')\n                      });\n\n                      _this2.props.history.push(\"/program/downloadProgram/\" + i18n.t('static.program.actioncancelled'));\n                    }\n                  }]\n                });\n              }\n            }.bind(this);\n          }.bind(this);\n        }\n      }\n    }\n  }, {\n    key: \"importFile\",\n    value: function importFile() {\n      if (window.File && window.FileReader && window.FileList && window.Blob) {\n        if (document.querySelector('input[type=file]').files[0] == undefined) {\n          alert(i18n.t('static.program.selectfile'));\n        } else {\n          var file = document.querySelector('input[type=file]').files[0];\n          var fileName = file.name;\n          var fileExtenstion = fileName.split(\".\");\n\n          if (fileExtenstion[1] == \"zip\") {\n            var lan = 'en';\n            JSZip.loadAsync(file).then(function (zip) {\n              var i = 0;\n              var fileName = [];\n              var programListArray = [];\n              var size = 0;\n              Object.keys(zip.files).forEach(function (filename) {\n                size++;\n              });\n              Object.keys(zip.files).forEach(function (filename) {\n                zip.files[filename].async('string').then(function (fileData) {\n                  var programDataJson = JSON.parse(fileData);\n                  var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                  var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                  var programDataJsonDecrypted = JSON.parse(plaintext);\n                  console.log(\"programDatajson\", programDataJsonDecrypted.label);\n                  console.log(\"displayName\", getLabelText(programDataJsonDecrypted.label, lan));\n                  console.log(\"filename\", filename);\n                  programDataJson.filename = filename;\n                  fileName[i] = {\n                    value: filename,\n                    label: getLabelText(programDataJsonDecrypted.label, lan) + \"~v\" + programDataJsonDecrypted.programVersion\n                  };\n                  programListArray[i] = programDataJson;\n                  i++;\n                  console.log(\"Program data list in import\", programListArray);\n\n                  if (i === size) {\n                    this.setState({\n                      programList: fileName,\n                      programListArray: programListArray\n                    });\n                    console.log(\"programList\", fileName);\n                    console.log(\"programDataArrayList after state set\", programListArray);\n                    document.getElementById(\"programIdDiv\").style.display = \"block\";\n                    document.getElementById(\"formSubmitButton\").style.display = \"block\";\n                    document.getElementById(\"fileImportDiv\").style.display = \"none\";\n                    document.getElementById(\"fileImportButton\").style.display = \"none\";\n                  }\n                }.bind(this));\n              }.bind(this));\n            }.bind(this));\n          } else {\n            alert(i18n.t('static.program.selectzipfile'));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"updateFieldData\",\n    value: function updateFieldData(value) {\n      console.log(\"Value\", value); // console.log(event.value)\n\n      this.setState({\n        programId: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        render: function render(_ref) {\n          var errors = _ref.errors,\n              touched = _ref.touched,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur;\n          return React.createElement(Form, {\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }, i18n.t('static.program.import'))), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            id: \"fileImportDiv\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: \"3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"file-input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }, i18n.t('static.program.fileinput'))), React.createElement(Col, {\n            xs: \"12\",\n            md: \"9\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          }, React.createElement(Input, {\n            type: \"file\",\n            id: \"file-input\",\n            name: \"file-input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320\n            },\n            __self: this\n          }))), React.createElement(FormGroup, {\n            id: \"programIdDiv\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324\n            },\n            __self: this\n          }, i18n.t('static.program.program')), React.createElement(Select, {\n            bsSize: \"sm\",\n            valid: !errors.programId,\n            invalid: touched.programId && !!errors.programId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.updateFieldData(e);\n            },\n            onBlur: handleBlur,\n            name: \"programId\",\n            id: \"programId\",\n            multi: true,\n            options: _this3.state.programList,\n            value: _this3.state.programId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335\n            },\n            __self: this\n          }, errors.programId))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 339\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"warning\",\n            className: \"float-right mr-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-refresh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.reset')), React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this3.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"button\",\n            id: \"fileImportButton\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this3.importFile();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), React.createElement(Button, {\n            type: \"button\",\n            id: \"formSubmitButton\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this3.formSubmit();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/dashboard/\" + i18n.t('static.program.actioncancelled'));\n    }\n  }]);\n\n  return ImportProgram;\n}(Component);\n\nexport { ImportProgram as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Program/ImportProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","FormFeedback","Formik","Yup","getLabelText","JsStoreFunction","Select","SECRET_KEY","JSZip","CryptoJS","confirmAlert","i18n","initialValues","programId","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","ImportProgram","props","state","programList","formSubmit","bind","importFile","cancelClicked","document","getElementById","style","display","window","File","FileReader","FileList","Blob","querySelector","files","undefined","alert","file","selectedPrgArr","db1","openRequest","indexedDB","open","onsuccess","e","console","log","target","result","transaction","program","objectStore","count","getRequest","getAll","onerror","event","myResult","programDataJson","programListArray","i","length","j","k","filename","value","userBytes","AES","decrypt","localStorage","getItem","userId","toString","enc","Utf8","id","version","loadAsync","then","zip","Object","keys","forEach","async","fileData","json","JSON","parse","transaction2","program2","addProgramDataRequest","put","setState","message","history","push","title","buttons","label","onClick","fileName","name","fileExtenstion","split","lan","size","bytes","programData","plaintext","programDataJsonDecrypted","programVersion","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","forms","focus","touched","handleChange","handleBlur","updateFieldData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n    , FormFeedback\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\"\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport i18n from '../../i18n';\nconst initialValues = {\n    programId: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programId: Yup.string()\n        .required(i18n.t('static.program.validselectprogramtext'))\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\n\nexport default class ImportProgram extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programList: []\n        }\n        this.formSubmit = this.formSubmit.bind(this)\n        this.importFile = this.importFile.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        document.getElementById(\"programIdDiv\").style.display = \"none\";\n        document.getElementById(\"formSubmitButton\").style.display = \"none\";\n        document.getElementById(\"fileImportDiv\").style.display = \"block\";\n        document.getElementById(\"fileImportButton\").style.display = \"block\";\n    }\n\n    formSubmit() {\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            if (document.querySelector('input[type=file]').files[0] == undefined) {\n                alert(i18n.t('static.program.selectfile'));\n            } else {\n                var file = document.querySelector('input[type=file]').files[0];\n                var selectedPrgArr = this.state.programId;\n                var db1;\n                var openRequest = indexedDB.open('fasp', 1);\n                openRequest.onsuccess = function (e) {\n                    console.log(\"in success\");\n                    db1 = e.target.result;\n                    var transaction = db1.transaction(['programData'], 'readwrite');\n                    var program = transaction.objectStore('programData');\n                    var count = 0;\n                    // console.log(\"ProgramListArray\",programListArray)\n                    var getRequest = program.getAll();\n                    getRequest.onerror = function (event) {\n                        // Handle errors!\n                    };\n                    getRequest.onsuccess = function (event) {\n                        var myResult = [];\n                        myResult = getRequest.result;\n                        var programDataJson = this.state.programListArray;\n                        console.log(\"program data json\", programDataJson)\n                        for (var i = 0; i < myResult.length; i++) {\n                            for (var j = 0; j < programDataJson.length; j++) {\n                                for(var k=0;k<selectedPrgArr.length;k++){\n                                console.log(\"1\",programDataJson[j].filename);\n                                if (programDataJson[j].filename == selectedPrgArr[k].value) {\n                                    var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                                    var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                                    console.log(\"Id\", myResult[i].id)\n                                    console.log(\"Id from list\", programDataJson[j].programId + \"_v\" + programDataJson[j].version + \"_uId_\" + userId)\n                                    if (myResult[i].id == programDataJson[j].programId + \"_v\" + programDataJson[j].version + \"_uId_\" + userId) {\n                                        count++;\n                                    }\n                                }\n                            }\n                            }\n                            console.log(\"count\", count)\n                        }\n                        if (count == 0) {\n                            JSZip.loadAsync(file).then(function (zip) {\n                                Object.keys(zip.files).forEach(function (filename) {\n                                    zip.files[filename].async('string').then(function (fileData) {\n                                        for (var j = 0; j < selectedPrgArr.length; j++) {\n                                            if (selectedPrgArr[j].value == filename) {\n                                                var json = JSON.parse(fileData);\n                                                db1 = e.target.result;\n                                                var transaction2 = db1.transaction(['programData'], 'readwrite');\n                                                var program2 = transaction2.objectStore('programData');\n                                                var json = JSON.parse(fileData);\n                                                var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                                                var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                                                json.userId = userId;\n                                                json.id = json.programId + \"_v\" + json.version + \"_uId_\" + userId\n                                                var addProgramDataRequest = program2.put(json);\n                                                addProgramDataRequest.onerror = function (event) {\n                                                };\n                                            }\n\n                                        }\n                                    })\n                                })\n                            })\n                            this.setState({\n                                message:i18n.t('static.program.dataimportsuccess') \n                            })\n                            this.props.history.push(`/dashboard/` + i18n.t('static.program.dataimportsuccess'))\n                        } else {\n                            confirmAlert({\n                                title: i18n.t('static.program.confirmsubmit'),\n                                message: i18n.t('static.program.programwithsameversion'),\n                                buttons: [\n                                    {\n                                        label: i18n.t('static.program.yes'),\n                                        onClick: () => {\n                                            JSZip.loadAsync(file).then(function (zip) {\n                                                Object.keys(zip.files).forEach(function (filename) {\n                                                    zip.files[filename].async('string').then(function (fileData) {\n                                                        for (var j = 0; j < selectedPrgArr.length; j++) {\n                                                            if (selectedPrgArr[j].value == filename) {\n                                                                var json = JSON.parse(fileData);\n                                                                db1 = e.target.result;\n                                                                var transaction2 = db1.transaction(['programData'], 'readwrite');\n                                                                var program2 = transaction2.objectStore('programData');\n                                                                var json = JSON.parse(fileData);\n                                                                var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                                                                var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                                                                json.userId = userId;\n                                                                json.id = json.programId + \"_v\" + json.version + \"_uId_\" + userId\n                                                                var addProgramDataRequest = program2.put(json);\n                                                                addProgramDataRequest.onerror = function (event) {\n                                                                };\n                                                            }\n\n                                                        }\n                                                    })\n                                                })\n                                            })\n                                            this.setState({\n                                                message: i18n.t('static.program.dataimportsuccess')\n                                            })\n                                            this.props.history.push(`/dashboard/` + i18n.t('static.program.dataimportsuccess'))\n                                        }\n                                    },\n                                    {\n                                        label: i18n.t('static.program.no'),\n                                        onClick: () => {\n                                            this.setState({\n                                                message: i18n.t('static.program.actioncancelled')\n                                            })\n                                            this.props.history.push(`/program/downloadProgram/` + i18n.t('static.program.actioncancelled'))\n                                        }\n                                    }\n                                ]\n                            });\n                        }\n                    }.bind(this)\n                }.bind(this)\n\n            }\n        }\n\n    }\n\n    importFile() {\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            if (document.querySelector('input[type=file]').files[0] == undefined) {\n                alert(i18n.t('static.program.selectfile'));\n            } else {\n                var file = document.querySelector('input[type=file]').files[0];\n                var fileName = file.name;\n                var fileExtenstion = fileName.split(\".\");\n                if (fileExtenstion[1] == \"zip\") {\n                    const lan = 'en'\n                    JSZip.loadAsync(file).then(function (zip) {\n                        var i = 0;\n                        var fileName = []\n                        var programListArray = []\n                        var size = 0;\n                        Object.keys(zip.files).forEach(function (filename) {\n                            size++;\n                        })\n                        Object.keys(zip.files).forEach(function (filename) {\n                            zip.files[filename].async('string').then(function (fileData) {\n\n                                var programDataJson = JSON.parse(fileData);\n                                var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                                var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                                var programDataJsonDecrypted = JSON.parse(plaintext);\n                                console.log(\"programDatajson\", programDataJsonDecrypted.label);\n                                console.log(\"displayName\", getLabelText((programDataJsonDecrypted.label), lan));\n                                console.log(\"filename\", filename);\n                                programDataJson.filename = filename;\n                                fileName[i] = {\n                                    value: filename, label: (getLabelText((programDataJsonDecrypted.label), lan)) + \"~v\" + programDataJsonDecrypted.programVersion\n                                }\n                                programListArray[i] = programDataJson;\n                                i++;\n                                console.log(\"Program data list in import\", programListArray)\n                                if (i === size) {\n                                    this.setState({\n                                        programList: fileName,\n                                        programListArray: programListArray\n                                    })\n                                    console.log(\"programList\", fileName)\n                                    console.log(\"programDataArrayList after state set\", programListArray)\n\n                                    document.getElementById(\"programIdDiv\").style.display = \"block\";\n                                    document.getElementById(\"formSubmitButton\").style.display = \"block\";\n                                    document.getElementById(\"fileImportDiv\").style.display = \"none\";\n                                    document.getElementById(\"fileImportButton\").style.display = \"none\";\n                                }\n                            }.bind(this))\n\n                        }.bind(this))\n\n                    }.bind(this))\n                } else {\n                    alert(i18n.t('static.program.selectzipfile'))\n                }\n            }\n\n        }\n\n    }\n\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true\n        }\n        )\n        this.validateForm(errors)\n    }\n\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    updateFieldData(value) {\n        console.log(\"Value\", value);\n        // console.log(event.value)\n        this.setState({ programId: value });\n    }\n\n    render() {\n        return (\n            <>\n                <Col xs=\"12\" sm=\"8\">\n                    <Card>\n                        <Formik\n                            initialValues={initialValues}\n                            render={\n                                ({\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                }) => (\n                                        <Form noValidate name='simpleForm'>\n                                            <CardHeader>\n                                                <strong>{i18n.t('static.program.import')}</strong>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup id=\"fileImportDiv\">\n                                                    <Col md=\"3\">\n                                                        <Label htmlFor=\"file-input\">{i18n.t('static.program.fileinput')}</Label>\n                                                    </Col>\n                                                    <Col xs=\"12\" md=\"9\">\n                                                        <Input type=\"file\" id=\"file-input\" name=\"file-input\" />\n                                                    </Col>\n                                                </FormGroup>\n                                                <FormGroup id=\"programIdDiv\">\n                                                    <Label htmlFor=\"select\">{i18n.t('static.program.program')}</Label>\n                                                    <Select\n                                                        bsSize=\"sm\"\n                                                        valid={!errors.programId}\n                                                        invalid={touched.programId && !!errors.programId}\n                                                        onChange={(e) => { handleChange(e); this.updateFieldData(e) }}\n                                                        onBlur={handleBlur} name=\"programId\" id=\"programId\"\n                                                        multi\n                                                        options={this.state.programList}\n                                                        value={this.state.programId}\n                                                    />\n                                                    <FormFeedback>{errors.programId}</FormFeedback>\n                                                </FormGroup>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <FormGroup>\n                                                    <Button type=\"reset\" size=\"sm\" color=\"warning\" className=\"float-right mr-1\"><i className=\"fa fa-refresh\"></i> {i18n.t('static.common.reset')}</Button>\n                                                    <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                    <Button type=\"button\" id=\"fileImportButton\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.importFile()}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                    <Button type=\"button\" id=\"formSubmitButton\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.formSubmit()}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                    &nbsp;\n                                                </FormGroup>\n                                            </CardFooter>\n                                        </Form>\n                                    )} />\n                    </Card>\n                </Col>\n            </>\n        )\n\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/dashboard/` + i18n.t('static.program.actioncancelled'))\n    }\n\n}"]},"metadata":{},"sourceType":"module"}