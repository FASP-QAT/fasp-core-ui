{"ast":null,"code":"'use strict';\n\nvar ArrayReader = require('./ArrayReader');\n\nvar utils = require('../utils');\n\nfunction Uint8ArrayReader(data) {\n  ArrayReader.call(this, data);\n}\n\nutils.inherits(Uint8ArrayReader, ArrayReader);\n/**\n * @see DataReader.readData\n */\n\nUint8ArrayReader.prototype.readData = function (size) {\n  this.checkOffset(size);\n\n  if (size === 0) {\n    // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n    return new Uint8Array(0);\n  }\n\n  var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n  this.index += size;\n  return result;\n};\n\nmodule.exports = Uint8ArrayReader;","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/jszip/lib/reader/Uint8ArrayReader.js"],"names":["ArrayReader","require","utils","Uint8ArrayReader","data","call","inherits","prototype","readData","size","checkOffset","Uint8Array","result","subarray","zero","index","module","exports"],"mappings":"AAAA;;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AAEA,SAASE,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5BJ,EAAAA,WAAW,CAACK,IAAZ,CAAiB,IAAjB,EAAuBD,IAAvB;AACH;;AACDF,KAAK,CAACI,QAAN,CAAeH,gBAAf,EAAiCH,WAAjC;AACA;;;;AAGAG,gBAAgB,CAACI,SAAjB,CAA2BC,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,OAAKC,WAAL,CAAiBD,IAAjB;;AACA,MAAGA,IAAI,KAAK,CAAZ,EAAe;AACX;AACA,WAAO,IAAIE,UAAJ,CAAe,CAAf,CAAP;AACH;;AACD,MAAIC,MAAM,GAAG,KAAKR,IAAL,CAAUS,QAAV,CAAmB,KAAKC,IAAL,GAAY,KAAKC,KAApC,EAA2C,KAAKD,IAAL,GAAY,KAAKC,KAAjB,GAAyBN,IAApE,CAAb;AACA,OAAKM,KAAL,IAAcN,IAAd;AACA,SAAOG,MAAP;AACH,CATD;;AAUAI,MAAM,CAACC,OAAP,GAAiBd,gBAAjB","sourcesContent":["'use strict';\nvar ArrayReader = require('./ArrayReader');\nvar utils = require('../utils');\n\nfunction Uint8ArrayReader(data) {\n    ArrayReader.call(this, data);\n}\nutils.inherits(Uint8ArrayReader, ArrayReader);\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n"]},"metadata":{},"sourceType":"script"}