{"ast":null,"code":"import _classCallCheck from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/fasp-core-ui/src/views/Program/AddProgram.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form } from 'reactstrap';\nvar initialValues = {\n  programName: '',\n  realmId: '',\n  realmCountryId: '',\n  organisationId: '',\n  programManagerUserId: '',\n  airFreightPercentage: '',\n  seaFreightPercentage: '',\n  deliveredToRecivedLeadTime: '',\n  draftToSubmittedLeadTime: '',\n  planDraftLeadTime: '',\n  submittedToApprovedLeadTime: '',\n  approvedToShippedLeadTime: '',\n  monthInFutureForAmc: '',\n  monthInPastForAmc: '',\n  healthAreaId: '',\n  programNotes: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programName: Yup.string().required(\"Please enter programName\"),\n    realmId: Yup.string().required(\"Please select realm\"),\n    realmCountryId: Yup.string().required('Please select country.'),\n    organisationId: Yup.string().required('Please select organisation'),\n    programManagerUserId: Yup.string().required('Please select program manager'),\n    airFreightPercentage: Yup.string().required('Please enter air freight percentage'),\n    seaFreightPercentage: Yup.string().required('Please enter sea freight percentage'),\n    deliveredToRecivedLeadTime: Yup.string().required('Please enter deliverd to recived lead time'),\n    draftToSubmittedLeadTime: Yup.string().required('Please enter draft to submitted lead time'),\n    planDraftLeadTime: Yup.string().required('Please enter plan to draft lead time'),\n    submittedToApprovedLeadTime: Yup.string().required('Please enter submit to approved lead time'),\n    approvedToShippedLeadTime: Yup.string().required('Please enter approved to shippedLeadTime'),\n    monthInFutureForAmc: Yup.string().required('Please enter month in funture for AMC'),\n    healthAreaId: Yup.string().required('Please enter month in past fro AMC'),\n    programNotes: Yup.string().required('Please enter notes')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddProgram = /*#__PURE__*/function (_Component) {\n  _inherits(AddProgram, _Component);\n\n  function AddProgram(props) {\n    var _this;\n\n    _classCallCheck(this, AddProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProgram).call(this, props));\n    _this.state = {\n      program: {\n        label: {\n          label_en: ''\n        },\n        realm: {\n          realmId: ''\n        },\n        realmCountry: {\n          realmCountryId: ''\n        },\n        organisation: {\n          organisationId: ''\n        },\n        programManager: {\n          programManagerUserId: ''\n        },\n        airFreightPercentage: '',\n        seaFreightPercentage: '',\n        deliveredToRecivedLeadTime: '',\n        draftToSubmittedLeadTime: '',\n        planDraftLeadTime: '',\n        submittedToApprovedLeadTime: '',\n        approvedToShippedLeadTime: '',\n        monthInFutureForAmc: '',\n        monthInPastForAmc: '',\n        healthAreaId: '',\n        programNotes: ''\n      }\n    };\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var _this2 = this;\n\n      var program = this.state.program;\n\n      if (event.target.name == \"programName\") {\n        program.label.label_en = event.target.value;\n      }\n\n      if (event.target.name == \"realmId\") {\n        program.realm.realmId = event.target.value;\n      }\n\n      if (event.target.name == 'realmCountryId') {\n        program.realmCountry.realmCountryId = event.target.value;\n      }\n\n      if (event.target.name == 'organisationId') {\n        program.organisation.organisationId = event.target.value;\n      }\n\n      if (event.target.name == 'airFreightPercentage') {\n        program.airFreightPercentage = event.target.value;\n      }\n\n      if (event.target.name == 'seaFreightPercentage') {\n        program.seaFreightPercentage = event.target.value;\n      }\n\n      if (event.target.name == 'deliveredToRecivedLeadTime') {\n        program.deliveredToRecivedLeadTime = event.target.value;\n      }\n\n      if (event.target.name == 'draftToSubmittedLeadTime') {\n        program.draftToSubmittedLeadTime = event.target.value;\n      }\n\n      if (event.target.name == 'planDraftLeadTime') {\n        program.planDraftLeadTime = event.target.value;\n      }\n\n      if (event.target.name == 'submittedToApprovedLeadTime') {\n        program.submittedToApprovedLeadTime = event.target.value;\n      }\n\n      if (event.target.name == 'approvedToShippedLeadTime') {\n        program.approvedToShippedLeadTime = event.target.value;\n      }\n\n      if (event.target.name == 'monthInFutureForAmc') {\n        program.monthInFutureForAmc = event.target.value;\n      }\n\n      if (event.target.name == 'monthInPastForAmc') {\n        program.monthInPastForAmc = event.target.value;\n      }\n\n      if (event.target.name == 'healthAreaId') {\n        program.health.healthAreaId = event.target.value;\n      } else if (event.target.name == 'programNotes') {\n        program.programNotes = event.target.value;\n      }\n\n      this.setState({\n        program: program\n      }, function () {\n        console.log(\"updated state--\", _this2.state.program);\n      });\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true,\n        budget: true,\n        subFundingSourceId: true,\n        budgetAmt: true,\n        startDate: true,\n        stopDate: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Add Program\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Select Realm\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"realmId\",\n        id: \"realmId\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Realm #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Realm #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Realm #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Select Country\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"realmCountryId\",\n        id: \"realmCountryId\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Country #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Country #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Country #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Select Organisation\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"organisationId\",\n        id: \"organisationId\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"product #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"product #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"product #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Select Health Area\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"healthAreaId\",\n        id: \"healthAreaId\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Health Area #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Health Area #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Health Area #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Select Program Manager\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"programManagerUserId\",\n        id: \"programManagerUserId\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"product #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"product #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"product #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Program Notes\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"programNotes\",\n        id: \"programNotes\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Air Freight Percentage\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"airFreightPercentage\",\n        id: \"airFreightPercentage\",\n        placeholder: \"Enter air freight percentage\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Sea Freight Percentage\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"seaFreightPercentage\",\n        id: \"seaFreightPercentage\",\n        placeholder: \"Enter sea freight percentage\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Plan Draft Lead Time\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"planDraftLeadTime\",\n        id: \"planDraftLeadTime\",\n        placeholder: \"Enter plan to draft lead time\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Draft To Submitted Lead Time\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"draftToSubmittedLeadTime\",\n        id: \"draftToSubmittedLeadTime\",\n        placeholder: \"Enter draft to submitted lead time\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Submitted To Approved Lead Time\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"submittedToApprovedLeadTime\",\n        id: \"submittedToApprovedLeadTime\",\n        placeholder: \"Enter submited to approved lead time\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Approve To Shipped Lead Time\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"approvedToShippedLeadTime\",\n        id: \"approvedToShippedLeadTime\",\n        placeholder: \"Enter draft to submitted lead time\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Delivered To Recived Lead Time\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"deliveredToRecivedLeadTime\",\n        id: \"deliveredToRecivedLeadTime\",\n        placeholder: \"Enter delivered to reacived lead time\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Month In Past For AMC\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"monthInPastForAmc\",\n        id: \"monthInPastForAmc\",\n        placeholder: \"Enter month in past for AMC\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Month In Future For AMC\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"monthInFutureForAmc\",\n        id: \"monthInFutureForAmc\",\n        placeholder: \"Enter month in future for AMC\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), \"Submit \")))));\n    }\n  }]);\n\n  return AddProgram;\n}(Component);\n\nexport { AddProgram as default };","map":{"version":3,"sources":["/home/altius/fasp-core-ui/src/views/Program/AddProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","initialValues","programName","realmId","realmCountryId","organisationId","programManagerUserId","airFreightPercentage","seaFreightPercentage","deliveredToRecivedLeadTime","draftToSubmittedLeadTime","planDraftLeadTime","submittedToApprovedLeadTime","approvedToShippedLeadTime","monthInFutureForAmc","monthInPastForAmc","healthAreaId","programNotes","validationSchema","values","Yup","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddProgram","props","state","program","label","label_en","realm","realmCountry","organisation","programManager","dataChange","bind","event","target","name","value","health","setState","console","log","setTouched","programId","budget","subFundingSourceId","budgetAmt","startDate","stopDate","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","updateFieldData","submitForm"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,UADpB,EAEIC,KAFJ,EAEWC,KAFX,EAEkBC,SAFlB,EAGIC,UAHJ,EAGgBC,MAHhB,EAGwBC,GAHxB,EAG6BC,IAH7B,QAIO,YAJP;AAOA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,OAAO,EAAE,EAFS;AAGlBC,EAAAA,cAAc,EAAE,EAHE;AAIlBC,EAAAA,cAAc,EAAE,EAJE;AAKlBC,EAAAA,oBAAoB,EAAE,EALJ;AAMlBC,EAAAA,oBAAoB,EAAE,EANJ;AAOlBC,EAAAA,oBAAoB,EAAE,EAPJ;AAQlBC,EAAAA,0BAA0B,EAAE,EARV;AASlBC,EAAAA,wBAAwB,EAAE,EATR;AAUlBC,EAAAA,iBAAiB,EAAE,EAVD;AAWlBC,EAAAA,2BAA2B,EAAE,EAXX;AAYlBC,EAAAA,yBAAyB,EAAE,EAZT;AAalBC,EAAAA,mBAAmB,EAAE,EAbH;AAclBC,EAAAA,iBAAiB,EAAE,EAdD;AAelBC,EAAAA,YAAY,EAAE,EAfI;AAgBlBC,EAAAA,YAAY,EAAE;AAhBI,CAAtB;;AAmBA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,MAAV,EAAkB;AACvC,SAAOC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACtBpB,IAAAA,WAAW,EAAEkB,GAAG,CAACG,MAAJ,GACRC,QADQ,CACC,0BADD,CADS;AAGtBrB,IAAAA,OAAO,EAAEiB,GAAG,CAACG,MAAJ,GACJC,QADI,CACK,qBADL,CAHa;AAKtBpB,IAAAA,cAAc,EAAEgB,GAAG,CAACG,MAAJ,GACXC,QADW,CACF,wBADE,CALM;AAOtBnB,IAAAA,cAAc,EAAEe,GAAG,CAACG,MAAJ,GACXC,QADW,CACF,4BADE,CAPM;AAStBlB,IAAAA,oBAAoB,EAAEc,GAAG,CAACG,MAAJ,GACjBC,QADiB,CACR,+BADQ,CATA;AAWtBjB,IAAAA,oBAAoB,EAAEa,GAAG,CAACG,MAAJ,GACjBC,QADiB,CACR,qCADQ,CAXA;AAatBhB,IAAAA,oBAAoB,EAAEY,GAAG,CAACG,MAAJ,GACjBC,QADiB,CACR,qCADQ,CAbA;AAetBf,IAAAA,0BAA0B,EAAEW,GAAG,CAACG,MAAJ,GACvBC,QADuB,CACd,4CADc,CAfN;AAiBtBd,IAAAA,wBAAwB,EAAEU,GAAG,CAACG,MAAJ,GACrBC,QADqB,CACZ,2CADY,CAjBJ;AAmBtBb,IAAAA,iBAAiB,EAAES,GAAG,CAACG,MAAJ,GACdC,QADc,CACL,sCADK,CAnBG;AAqBtBZ,IAAAA,2BAA2B,EAAEQ,GAAG,CAACG,MAAJ,GACxBC,QADwB,CACf,2CADe,CArBP;AAuBtBX,IAAAA,yBAAyB,EAAEO,GAAG,CAACG,MAAJ,GACtBC,QADsB,CACb,0CADa,CAvBL;AAyBtBV,IAAAA,mBAAmB,EAAEM,GAAG,CAACG,MAAJ,GAChBC,QADgB,CACP,uCADO,CAzBC;AA2BtBR,IAAAA,YAAY,EAAEI,GAAG,CAACG,MAAJ,GACTC,QADS,CACA,oCADA,CA3BQ;AA6BtBP,IAAAA,YAAY,EAAEG,GAAG,CAACG,MAAJ,GACTC,QADS,CACA,oBADA;AA7BQ,GAAnB,CAAP;AAkCH,CAnCD;;AAqCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,mBAAD,EAAyB;AACtC,SAAO,UAACP,MAAD,EAAY;AACf,QAAMD,gBAAgB,GAAGQ,mBAAmB,CAACP,MAAD,CAA5C;;AACA,QAAI;AACAD,MAAAA,gBAAgB,CAACS,YAAjB,CAA8BR,MAA9B,EAAsC;AAAES,QAAAA,UAAU,EAAE;AAAd,OAAtC;AACA,aAAO,EAAP;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,aAAOC,4BAA4B,CAACD,KAAD,CAAnC;AACH;AACJ,GARD;AASH,CAVD;;AAYA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,eAAD,EAAqB;AACtD,MAAMC,WAAW,GAAG,CAApB;AACA,SAAOD,eAAe,CAACE,KAAhB,CAAsBC,MAAtB,CAA6B,UAACC,MAAD,EAASN,KAAT,EAAmB;AACnD,6BACOM,MADP,sBAEKN,KAAK,CAACO,IAFX,EAEkBP,KAAK,CAACM,MAAN,CAAaH,WAAb,CAFlB;AAIH,GALM,EAKJ,EALI,CAAP;AAMH,CARD;;IAUqBK,U;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE;AADP,SADF;AAILC,QAAAA,KAAK,EAAE;AACHxC,UAAAA,OAAO,EAAE;AADN,SAJF;AAOLyC,QAAAA,YAAY,EAAE;AACVxC,UAAAA,cAAc,EAAE;AADN,SAPT;AAULyC,QAAAA,YAAY,EAAE;AACVxC,UAAAA,cAAc,EAAE;AADN,SAVT;AAaLyC,QAAAA,cAAc,EAAE;AACZxC,UAAAA,oBAAoB,EAAE;AADV,SAbX;AAgBLC,QAAAA,oBAAoB,EAAE,EAhBjB;AAiBLC,QAAAA,oBAAoB,EAAE,EAjBjB;AAkBLC,QAAAA,0BAA0B,EAAE,EAlBvB;AAmBLC,QAAAA,wBAAwB,EAAE,EAnBrB;AAoBLC,QAAAA,iBAAiB,EAAE,EApBd;AAqBLC,QAAAA,2BAA2B,EAAE,EArBxB;AAsBLC,QAAAA,yBAAyB,EAAE,EAtBtB;AAuBLC,QAAAA,mBAAmB,EAAE,EAvBhB;AAwBLC,QAAAA,iBAAiB,EAAE,EAxBd;AAyBLC,QAAAA,YAAY,EAAE,EAzBT;AA0BLC,QAAAA,YAAY,EAAE;AA1BT;AADA,KAAb;AA8BA,UAAK8B,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AAhCe;AAkClB;;;;wCACmB,CAGnB;;;+BAEUC,K,EAAO;AAAA;;AAAA,UACRT,OADQ,GACI,KAAKD,KADT,CACRC,OADQ;;AAEd,UAAIS,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,aAAzB,EAAwC;AACpCX,QAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,GAAyBO,KAAK,CAACC,MAAN,CAAaE,KAAtC;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,SAAzB,EAAoC;AAClCX,QAAAA,OAAO,CAACG,KAAR,CAAcxC,OAAd,GAAwB8C,KAAK,CAACC,MAAN,CAAaE,KAArC;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,gBAAzB,EAA2C;AACzCX,QAAAA,OAAO,CAACI,YAAR,CAAqBxC,cAArB,GAAsC6C,KAAK,CAACC,MAAN,CAAaE,KAAnD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,gBAAzB,EAA2C;AACzCX,QAAAA,OAAO,CAACK,YAAR,CAAqBxC,cAArB,GAAsC4C,KAAK,CAACC,MAAN,CAAaE,KAAnD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,sBAAzB,EAAiD;AAC/CX,QAAAA,OAAO,CAACjC,oBAAR,GAA+B0C,KAAK,CAACC,MAAN,CAAaE,KAA5C;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,sBAAzB,EAAiD;AAC/CX,QAAAA,OAAO,CAAChC,oBAAR,GAA+ByC,KAAK,CAACC,MAAN,CAAaE,KAA5C;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,4BAAzB,EAAuD;AACrDX,QAAAA,OAAO,CAAC/B,0BAAR,GAAqCwC,KAAK,CAACC,MAAN,CAAaE,KAAlD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,0BAAzB,EAAqD;AACnDX,QAAAA,OAAO,CAAC9B,wBAAR,GAAmCuC,KAAK,CAACC,MAAN,CAAaE,KAAhD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,mBAAzB,EAA8C;AAC5CX,QAAAA,OAAO,CAAC7B,iBAAR,GAA4BsC,KAAK,CAACC,MAAN,CAAaE,KAAzC;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,6BAAzB,EAAwD;AACtDX,QAAAA,OAAO,CAAC5B,2BAAR,GAAsCqC,KAAK,CAACC,MAAN,CAAaE,KAAnD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,2BAAzB,EAAsD;AACpDX,QAAAA,OAAO,CAAC3B,yBAAR,GAAoCoC,KAAK,CAACC,MAAN,CAAaE,KAAjD;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,qBAAzB,EAAgD;AAC9CX,QAAAA,OAAO,CAAC1B,mBAAR,GAA8BmC,KAAK,CAACC,MAAN,CAAaE,KAA3C;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,mBAAzB,EAA8C;AAC5CX,QAAAA,OAAO,CAACzB,iBAAR,GAA4BkC,KAAK,CAACC,MAAN,CAAaE,KAAzC;AACH;;AAAC,UAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,cAAzB,EAAyC;AACvCX,QAAAA,OAAO,CAACa,MAAR,CAAerC,YAAf,GAA8BiC,KAAK,CAACC,MAAN,CAAaE,KAA3C;AACH,OAFC,MAEK,IAAIH,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,cAAzB,EAAyC;AAC5CX,QAAAA,OAAO,CAACvB,YAAR,GAAuBgC,KAAK,CAACC,MAAN,CAAaE,KAApC;AACH;;AAED,WAAKE,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAPA;AAAF,OAAd,EAA2B,YAAM;AAAEe,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAI,CAACjB,KAAL,CAAWC,OAA1C;AAAoD,OAAvF;AAEH;;;6BACQiB,U,EAAYtB,M,EAAQ;AACzBsB,MAAAA,UAAU,CAAC;AACPC,QAAAA,SAAS,EAAE,IADJ;AAEPC,QAAAA,MAAM,EAAE,IAFD;AAGPC,QAAAA,kBAAkB,EAAE,IAHb;AAIPC,QAAAA,SAAS,EAAE,IAJJ;AAKPC,QAAAA,SAAS,EAAE,IALJ;AAMPC,QAAAA,QAAQ,EAAE;AANH,OAAD,CAAV;AASA,WAAKC,YAAL,CAAkB7B,MAAlB;AACH;;;iCACYA,M,EAAQ;AACjB,WAAK8B,cAAL,CAAoB,YAApB,EAAkC,UAACC,SAAD,EAAe;AAC7C,eAAOC,OAAO,CAAChC,MAAM,CAAC+B,SAAD,CAAP,CAAd;AACH,OAFD;AAGH;;;mCACcE,Q,EAAUC,Q,EAAU;AAC/B,UAAMC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAeJ,QAAf,CAAb;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAIJ,QAAQ,CAACC,IAAI,CAACG,CAAD,CAAJ,CAAQtB,IAAT,CAAZ,EAA4B;AACxBmB,UAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,KAAR;AACA;AACH;AACJ;AACJ;;;6BAEQ;AACL,aACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,SAA1B;AAAoC,QAAA,EAAE,EAAC,SAAvC;AAAiD,QAAA,QAAQ,EAAE,KAAKC,eAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,CAJJ,CADJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,gBAA1B;AAA2C,QAAA,EAAE,EAAC,gBAA9C;AAA+D,QAAA,QAAQ,EAAE,KAAKA,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADJ,CAJJ,CAdJ,EA2BI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,gBAA1B;AAA2C,QAAA,EAAE,EAAC,gBAA9C;AAA+D,QAAA,QAAQ,EAAE,KAAKA,eAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADJ,CAJJ,CA3BJ,EAwCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,cAA1B;AAAyC,QAAA,EAAE,EAAC,cAA5C;AAA2D,QAAA,QAAQ,EAAE,KAAKA,eAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADJ,CAJJ,CAxCJ,EAqDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,sBAA1B;AAAiD,QAAA,EAAE,EAAC,sBAApD;AAA2E,QAAA,QAAQ,EAAE,KAAKA,eAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADJ,CAJJ,CArDJ,EAkEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,cAA5B;AAA2C,QAAA,EAAE,EAAC,cAA9C;AAA6D,QAAA,QAAQ,EAAE,KAAKA,eAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAlEJ,EA2EI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,sBAAxB;AAA+C,QAAA,EAAE,EAAC,sBAAlD;AAAyE,QAAA,WAAW,EAAC,8BAArF;AAAoH,QAAA,QAAQ,EAAE,KAAKA,eAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CA3EJ,EAmFI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,sBAAxB;AAA+C,QAAA,EAAE,EAAC,sBAAlD;AAAyE,QAAA,WAAW,EAAC,8BAArF;AAAoH,QAAA,QAAQ,EAAE,KAAKA,eAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAnFJ,EA2FI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,mBAA1B;AAA8C,QAAA,EAAE,EAAC,mBAAjD;AAAqE,QAAA,WAAW,EAAC,+BAAjF;AAAiH,QAAA,QAAQ,EAAE,KAAKA,eAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CA3FJ,EAmGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,0BAA1B;AAAqD,QAAA,EAAE,EAAC,0BAAxD;AAAmF,QAAA,WAAW,EAAC,oCAA/F;AAAoI,QAAA,QAAQ,EAAE,KAAKA,eAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAnGJ,EA2GI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,6BAA1B;AAAwD,QAAA,EAAE,EAAC,6BAA3D;AAAyF,QAAA,WAAW,EAAC,sCAArG;AAA4I,QAAA,QAAQ,EAAE,KAAKA,eAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CA3GJ,EAmHI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,2BAA1B;AAAsD,QAAA,EAAE,EAAC,2BAAzD;AAAqF,QAAA,WAAW,EAAC,oCAAjG;AAAsI,QAAA,QAAQ,EAAE,KAAKA,eAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAnHJ,EA2HI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,4BAA1B;AAAuD,QAAA,EAAE,EAAC,4BAA1D;AAAuF,QAAA,WAAW,EAAC,uCAAnG;AAA2I,QAAA,QAAQ,EAAE,KAAKA,eAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CA3HJ,EAmII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,mBAA1B;AAA8C,QAAA,EAAE,EAAC,mBAAjD;AAAqE,QAAA,WAAW,EAAC,6BAAjF;AAA+G,QAAA,QAAQ,EAAE,KAAKA,eAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAnIJ,EA2II,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,qBAA1B;AAAgD,QAAA,EAAE,EAAC,qBAAnD;AAAyE,QAAA,WAAW,EAAC,+BAArF;AAAqH,QAAA,QAAQ,EAAE,KAAKA,eAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CA3IJ,CAJJ,EAyJI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,SAAtC;AAAgD,QAAA,OAAO,EAAE,KAAKC,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0E;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1E,YADJ,CAzJJ,CADJ,CADJ,CADJ;AAoKH;;;;EA/QmCvF,S;;SAAnB+C,U","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n} from 'reactstrap';\n\n\nconst initialValues = {\n    programName: '',\n    realmId: '',\n    realmCountryId: '',\n    organisationId: '',\n    programManagerUserId: '',\n    airFreightPercentage: '',\n    seaFreightPercentage: '',\n    deliveredToRecivedLeadTime: '',\n    draftToSubmittedLeadTime: '',\n    planDraftLeadTime: '',\n    submittedToApprovedLeadTime: '',\n    approvedToShippedLeadTime: '',\n    monthInFutureForAmc: '',\n    monthInPastForAmc: '',\n    healthAreaId: '',\n    programNotes: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programName: Yup.string()\n            .required(\"Please enter programName\"),\n        realmId: Yup.string()\n            .required(\"Please select realm\"),\n        realmCountryId: Yup.string()\n            .required('Please select country.'),\n        organisationId: Yup.string()\n            .required('Please select organisation'),\n        programManagerUserId: Yup.string()\n            .required('Please select program manager'),\n        airFreightPercentage: Yup.string()\n            .required('Please enter air freight percentage'),\n        seaFreightPercentage: Yup.string()\n            .required('Please enter sea freight percentage'),\n        deliveredToRecivedLeadTime: Yup.string()\n            .required('Please enter deliverd to recived lead time'),\n        draftToSubmittedLeadTime: Yup.string()\n            .required('Please enter draft to submitted lead time'),\n        planDraftLeadTime: Yup.string()\n            .required('Please enter plan to draft lead time'),\n        submittedToApprovedLeadTime: Yup.string()\n            .required('Please enter submit to approved lead time'),\n        approvedToShippedLeadTime: Yup.string()\n            .required('Please enter approved to shippedLeadTime'),\n        monthInFutureForAmc: Yup.string()\n            .required('Please enter month in funture for AMC'),\n        healthAreaId: Yup.string()\n            .required('Please enter month in past fro AMC'),\n        programNotes: Yup.string()\n            .required('Please enter notes'),\n\n\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\nexport default class AddProgram extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            program: {\n                label: {\n                    label_en: ''\n                },\n                realm: {\n                    realmId: ''\n                },\n                realmCountry: {\n                    realmCountryId: ''\n                },\n                organisation: {\n                    organisationId: ''\n                },\n                programManager: {\n                    programManagerUserId: ''\n                },\n                airFreightPercentage: '',\n                seaFreightPercentage: '',\n                deliveredToRecivedLeadTime: '',\n                draftToSubmittedLeadTime: '',\n                planDraftLeadTime: '',\n                submittedToApprovedLeadTime: '',\n                approvedToShippedLeadTime: '',\n                monthInFutureForAmc: '',\n                monthInPastForAmc: '',\n                healthAreaId: '',\n                programNotes: ''\n            }\n        }\n        this.dataChange = this.dataChange.bind(this);\n\n    }\n    componentDidMount() {\n\n\n    }\n\n    dataChange(event) {\n        let { program } = this.state;\n        if (event.target.name == \"programName\") {\n            program.label.label_en = event.target.value;\n        } if (event.target.name == \"realmId\") {\n            program.realm.realmId = event.target.value;\n        } if (event.target.name == 'realmCountryId') {\n            program.realmCountry.realmCountryId = event.target.value;\n        } if (event.target.name == 'organisationId') {\n            program.organisation.organisationId = event.target.value;\n        } if (event.target.name == 'airFreightPercentage') {\n            program.airFreightPercentage = event.target.value;\n        } if (event.target.name == 'seaFreightPercentage') {\n            program.seaFreightPercentage = event.target.value;\n        } if (event.target.name == 'deliveredToRecivedLeadTime') {\n            program.deliveredToRecivedLeadTime = event.target.value;\n        } if (event.target.name == 'draftToSubmittedLeadTime') {\n            program.draftToSubmittedLeadTime = event.target.value;\n        } if (event.target.name == 'planDraftLeadTime') {\n            program.planDraftLeadTime = event.target.value;\n        } if (event.target.name == 'submittedToApprovedLeadTime') {\n            program.submittedToApprovedLeadTime = event.target.value;\n        } if (event.target.name == 'approvedToShippedLeadTime') {\n            program.approvedToShippedLeadTime = event.target.value;\n        } if (event.target.name == 'monthInFutureForAmc') {\n            program.monthInFutureForAmc = event.target.value;\n        } if (event.target.name == 'monthInPastForAmc') {\n            program.monthInPastForAmc = event.target.value;\n        } if (event.target.name == 'healthAreaId') {\n            program.health.healthAreaId = event.target.value;\n        } else if (event.target.name == 'programNotes') {\n            program.programNotes = event.target.value;\n        }\n\n        this.setState({ program }, () => { console.log(\"updated state--\", this.state.program) })\n\n    }\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true,\n            budget: true,\n            subFundingSourceId: true,\n            budgetAmt: true,\n            startDate: true,\n            stopDate: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Col xs=\"12\" sm=\"8\">\n                <Card>\n                    <Form>\n                        <CardHeader>\n                            <strong>Add Program</strong>\n                        </CardHeader>\n                        <CardBody>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Select Realm</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"select\" name=\"realmId\" id=\"realmId\" onChange={this.updateFieldData}>\n                                        <option value=\"0\">Please select</option>\n                                        <option value=\"1\">Realm #1</option>\n                                        <option value=\"2\">Realm #2</option>\n                                        <option value=\"3\">Realm #3</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Select Country</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"select\" name=\"realmCountryId\" id=\"realmCountryId\" onChange={this.updateFieldData}>\n                                        <option value=\"0\">Please select</option>\n                                        <option value=\"1\">Country #1</option>\n                                        <option value=\"2\">Country #2</option>\n                                        <option value=\"3\">Country #3</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Select Organisation</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"select\" name=\"organisationId\" id=\"organisationId\" onChange={this.updateFieldData}>\n                                        <option value=\"0\">Please select</option>\n                                        <option value=\"1\">product #1</option>\n                                        <option value=\"2\">product #2</option>\n                                        <option value=\"3\">product #3</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Select Health Area</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"select\" name=\"healthAreaId\" id=\"healthAreaId\" onChange={this.updateFieldData}>\n                                        <option value=\"0\">Please select</option>\n                                        <option value=\"1\">Health Area #1</option>\n                                        <option value=\"2\">Health Area #2</option>\n                                        <option value=\"3\">Health Area #3</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Select Program Manager</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"select\" name=\"programManagerUserId\" id=\"programManagerUserId\" onChange={this.updateFieldData}>\n                                        <option value=\"0\">Please select</option>\n                                        <option value=\"1\">product #1</option>\n                                        <option value=\"2\">product #2</option>\n                                        <option value=\"3\">product #3</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"4\">\n                                    <Label htmlFor=\"select\">Program Notes</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"textarea\" name=\"programNotes\" id=\"programNotes\" onChange={this.updateFieldData} />\n\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Air Freight Percentage</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"text\" name=\"airFreightPercentage\" id=\"airFreightPercentage\" placeholder=\"Enter air freight percentage\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Sea Freight Percentage</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"text\" name=\"seaFreightPercentage\" id=\"seaFreightPercentage\" placeholder=\"Enter sea freight percentage\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Plan Draft Lead Time</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"planDraftLeadTime\" id=\"planDraftLeadTime\" placeholder=\"Enter plan to draft lead time\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Draft To Submitted Lead Time</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"draftToSubmittedLeadTime\" id=\"draftToSubmittedLeadTime\" placeholder=\"Enter draft to submitted lead time\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Submitted To Approved Lead Time</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"submittedToApprovedLeadTime\" id=\"submittedToApprovedLeadTime\" placeholder=\"Enter submited to approved lead time\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Approve To Shipped Lead Time</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"approvedToShippedLeadTime\" id=\"approvedToShippedLeadTime\" placeholder=\"Enter draft to submitted lead time\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Delivered To Recived Lead Time</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"deliveredToRecivedLeadTime\" id=\"deliveredToRecivedLeadTime\" placeholder=\"Enter delivered to reacived lead time\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Month In Past For AMC</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"monthInPastForAmc\" id=\"monthInPastForAmc\" placeholder=\"Enter month in past for AMC\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n                            <FormGroup>\n                                <Col md=\"5\">\n                                    <Label htmlFor=\"company\">Month In Future For AMC</Label>\n                                </Col>\n                                <Col xs=\"12\" md=\"9\">\n                                    <Input type=\"number\" name=\"monthInFutureForAmc\" id=\"monthInFutureForAmc\" placeholder=\"Enter month in future for AMC\" onChange={this.updateFieldData} />\n                                </Col>\n                            </FormGroup>\n\n                        </CardBody>\n                        <CardFooter>\n                            <Button type=\"button\" size=\"sm\" color=\"primary\" onClick={this.submitForm}><i className=\"fa fa-dot-circle-o\"></i>Submit </Button>\n                        </CardFooter>\n                    </Form>\n                </Card>\n            </Col>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}