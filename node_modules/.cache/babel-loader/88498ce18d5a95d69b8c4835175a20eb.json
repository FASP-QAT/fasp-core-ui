{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _reactResizable = require(\"react-resizable\");\n\nvar _utils = require(\"./utils\");\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * An individual item within a ReactGridLayout.\n */\n\n\nvar GridItem = function (_React$Component) {\n  _inherits(GridItem, _React$Component);\n\n  function GridItem() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: null,\n      dragging: null,\n      className: \"\"\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // Helper for generating column width\n\n\n  GridItem.prototype.calcColWidth = function calcColWidth() {\n    var _props = this.props,\n        margin = _props.margin,\n        containerPadding = _props.containerPadding,\n        containerWidth = _props.containerWidth,\n        cols = _props.cols;\n    return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n  };\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n\n\n  GridItem.prototype.calcPosition = function calcPosition(x, y, w, h, state) {\n    var _props2 = this.props,\n        margin = _props2.margin,\n        containerPadding = _props2.containerPadding,\n        rowHeight = _props2.rowHeight;\n    var colWidth = this.calcColWidth();\n    var out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  };\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n\n\n  GridItem.prototype.calcXY = function calcXY(top, left) {\n    var _props3 = this.props,\n        margin = _props3.margin,\n        cols = _props3.cols,\n        rowHeight = _props3.rowHeight,\n        w = _props3.w,\n        h = _props3.h,\n        maxRows = _props3.maxRows;\n    var colWidth = this.calcColWidth(); // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n\n    var x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    var y = Math.round((top - margin[1]) / (rowHeight + margin[1])); // Capping\n\n    x = Math.max(Math.min(x, cols - w), 0);\n    y = Math.max(Math.min(y, maxRows - h), 0);\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n\n\n  GridItem.prototype.calcWH = function calcWH(_ref) {\n    var height = _ref.height,\n        width = _ref.width;\n    var _props4 = this.props,\n        margin = _props4.margin,\n        maxRows = _props4.maxRows,\n        cols = _props4.cols,\n        rowHeight = _props4.rowHeight,\n        x = _props4.x,\n        y = _props4.y;\n    var colWidth = this.calcColWidth(); // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n\n    var w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    var h = Math.round((height + margin[1]) / (rowHeight + margin[1])); // Capping\n\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return {\n      w: w,\n      h: h\n    };\n  };\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n\n\n  GridItem.prototype.createStyle = function createStyle(pos) {\n    var _props5 = this.props,\n        usePercentages = _props5.usePercentages,\n        containerWidth = _props5.containerWidth,\n        useCSSTransforms = _props5.useCSSTransforms;\n    var style = void 0; // CSS Transforms support (default)\n\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    } else {\n      // top,left (slow)\n      style = (0, _utils.setTopLeft)(pos); // This is used for server rendering.\n\n      if (usePercentages) {\n        style.left = (0, _utils.perc)(pos.left / containerWidth);\n        style.width = (0, _utils.perc)(pos.width / containerWidth);\n      }\n    }\n\n    return style;\n  };\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n\n\n  GridItem.prototype.mixinDraggable = function mixinDraggable(child) {\n    return _react2.default.createElement(_reactDraggable.DraggableCore, {\n      onStart: this.onDragHandler(\"onDragStart\"),\n      onDrag: this.onDragHandler(\"onDrag\"),\n      onStop: this.onDragHandler(\"onDragStop\"),\n      handle: this.props.handle,\n      cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\")\n    }, child);\n  };\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n\n\n  GridItem.prototype.mixinResizable = function mixinResizable(child, position) {\n    var _props6 = this.props,\n        cols = _props6.cols,\n        x = _props6.x,\n        minW = _props6.minW,\n        minH = _props6.minH,\n        maxW = _props6.maxW,\n        maxH = _props6.maxH; // This is the max possible width - doesn't go to infinity because of the width of the window\n\n    var maxWidth = this.calcPosition(0, 0, cols - x, 0).width; // Calculate min/max constraints using our min & maxes\n\n    var mins = this.calcPosition(0, 0, minW, minH);\n    var maxes = this.calcPosition(0, 0, maxW, maxH);\n    var minConstraints = [mins.width, mins.height];\n    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return _react2.default.createElement(_reactResizable.Resizable, {\n      width: position.width,\n      height: position.height,\n      minConstraints: minConstraints,\n      maxConstraints: maxConstraints,\n      onResizeStop: this.onResizeHandler(\"onResizeStop\"),\n      onResizeStart: this.onResizeHandler(\"onResizeStart\"),\n      onResize: this.onResizeHandler(\"onResize\")\n    }, child);\n  };\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onDragHandler = function onDragHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n      var handler = _this2.props[handlerName];\n      if (!handler) return;\n      var newPosition = {\n        top: 0,\n        left: 0\n      }; // Get new XY\n\n      switch (handlerName) {\n        case \"onDragStart\":\n          {\n            // TODO: this wont work on nested parents\n            var offsetParent = node.offsetParent;\n            if (!offsetParent) return;\n            var parentRect = offsetParent.getBoundingClientRect();\n            var clientRect = node.getBoundingClientRect();\n            newPosition.left = clientRect.left - parentRect.left + offsetParent.scrollLeft;\n            newPosition.top = clientRect.top - parentRect.top + offsetParent.scrollTop;\n\n            _this2.setState({\n              dragging: newPosition\n            });\n\n            break;\n          }\n\n        case \"onDrag\":\n          if (!_this2.state.dragging) throw new Error(\"onDrag called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left + deltaX;\n          newPosition.top = _this2.state.dragging.top + deltaY;\n\n          _this2.setState({\n            dragging: newPosition\n          });\n\n          break;\n\n        case \"onDragStop\":\n          if (!_this2.state.dragging) throw new Error(\"onDragEnd called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left;\n          newPosition.top = _this2.state.dragging.top;\n\n          _this2.setState({\n            dragging: null\n          });\n\n          break;\n\n        default:\n          throw new Error(\"onDragHandler called with unrecognized handlerName: \" + handlerName);\n      }\n\n      var _calcXY = _this2.calcXY(newPosition.top, newPosition.left),\n          x = _calcXY.x,\n          y = _calcXY.y;\n\n      return handler.call(_this2, _this2.props.i, x, y, {\n        e: e,\n        node: node,\n        newPosition: newPosition\n      });\n    };\n  };\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onResizeHandler = function onResizeHandler(handlerName) {\n    var _this3 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          size = _ref3.size;\n      var handler = _this3.props[handlerName];\n      if (!handler) return;\n      var _props7 = _this3.props,\n          cols = _props7.cols,\n          x = _props7.x,\n          i = _props7.i,\n          maxW = _props7.maxW,\n          minW = _props7.minW,\n          maxH = _props7.maxH,\n          minH = _props7.minH; // Get new XY\n\n      var _calcWH = _this3.calcWH(size),\n          w = _calcWH.w,\n          h = _calcWH.h; // Cap w at numCols\n\n\n      w = Math.min(w, cols - x); // Ensure w is at least 1\n\n      w = Math.max(w, 1); // Min/max capping\n\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      _this3.setState({\n        resizing: handlerName === \"onResizeStop\" ? null : size\n      });\n\n      handler.call(_this3, i, w, h, {\n        e: e,\n        node: node,\n        size: size\n      });\n    };\n  };\n\n  GridItem.prototype.render = function render() {\n    var _props8 = this.props,\n        x = _props8.x,\n        y = _props8.y,\n        w = _props8.w,\n        h = _props8.h,\n        isDraggable = _props8.isDraggable,\n        isResizable = _props8.isResizable,\n        useCSSTransforms = _props8.useCSSTransforms;\n    var pos = this.calcPosition(x, y, w, h, this.state);\n\n    var child = _react2.default.Children.only(this.props.children); // Create the child element. We clone the existing element but modify its className and style.\n\n\n    var newChild = _react2.default.cloneElement(child, {\n      className: (0, _classnames2.default)(\"react-grid-item\", child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        \"react-draggable\": isDraggable,\n        \"react-draggable-dragging\": Boolean(this.state.dragging),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: _extends({}, this.props.style, child.props.style, this.createStyle(pos))\n    }); // Resizable support. This is usually on but the user can toggle it off.\n\n\n    if (isResizable) newChild = this.mixinResizable(newChild, pos); // Draggable support. This is always on, except for with placeholders.\n\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n    return newChild;\n  };\n\n  return GridItem;\n}(_react2.default.Component);\n\nGridItem.propTypes = {\n  // Children must be only a single element\n  children: _propTypes2.default.element,\n  // General grid attributes\n  cols: _propTypes2.default.number.isRequired,\n  containerWidth: _propTypes2.default.number.isRequired,\n  rowHeight: _propTypes2.default.number.isRequired,\n  margin: _propTypes2.default.array.isRequired,\n  maxRows: _propTypes2.default.number.isRequired,\n  containerPadding: _propTypes2.default.array.isRequired,\n  // These are all in grid units\n  x: _propTypes2.default.number.isRequired,\n  y: _propTypes2.default.number.isRequired,\n  w: _propTypes2.default.number.isRequired,\n  h: _propTypes2.default.number.isRequired,\n  // All optional\n  minW: function minW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n    if (value > props.w || value > props.maxW) return new Error(\"minWidth larger than item width/maxWidth\");\n  },\n  maxW: function maxW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n    if (value < props.w || value < props.minW) return new Error(\"maxWidth smaller than item width/minWidth\");\n  },\n  minH: function minH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n    if (value > props.h || value > props.maxH) return new Error(\"minHeight larger than item height/maxHeight\");\n  },\n  maxH: function maxH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n    if (value < props.h || value < props.minH) return new Error(\"maxHeight smaller than item height/minHeight\");\n  },\n  // ID is nice to have for callbacks\n  i: _propTypes2.default.string.isRequired,\n  // Functions\n  onDragStop: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func,\n  onDrag: _propTypes2.default.func,\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n  // Flags\n  isDraggable: _propTypes2.default.bool.isRequired,\n  isResizable: _propTypes2.default.bool.isRequired,\n  static: _propTypes2.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool.isRequired,\n  // Others\n  className: _propTypes2.default.string,\n  // Selector for draggable handle\n  handle: _propTypes2.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes2.default.string\n};\nGridItem.defaultProps = {\n  className: \"\",\n  cancel: \"\",\n  handle: \"\",\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity\n};\nexports.default = GridItem;","map":{"version":3,"sources":["/home/altius/Documents/FASP/fasp-core-ui/node_modules/react-grid-layout/build/GridItem.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_reactDraggable","_reactResizable","_utils","_classnames","_classnames2","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","GridItem","_React$Component","_temp","_this","_ret","_len","args","Array","_key","apply","concat","state","resizing","dragging","className","calcColWidth","_props","props","margin","containerPadding","containerWidth","cols","calcPosition","x","y","w","h","_props2","rowHeight","colWidth","out","left","Math","round","top","width","Infinity","max","height","calcXY","_props3","maxRows","min","calcWH","_ref","_props4","createStyle","pos","_props5","usePercentages","useCSSTransforms","style","setTransform","setTopLeft","perc","mixinDraggable","child","createElement","DraggableCore","onStart","onDragHandler","onDrag","onStop","handle","cancel","mixinResizable","position","_props6","minW","minH","maxW","maxH","maxWidth","mins","maxes","minConstraints","maxConstraints","Resizable","onResizeStop","onResizeHandler","onResizeStart","onResize","handlerName","_this2","e","_ref2","node","deltaX","deltaY","handler","newPosition","offsetParent","parentRect","getBoundingClientRect","clientRect","scrollLeft","scrollTop","setState","Error","_calcXY","_this3","_ref3","size","_props7","_calcWH","render","_props8","isDraggable","isResizable","Children","only","children","newChild","cloneElement","static","Boolean","cssTransforms","Component","propTypes","element","number","isRequired","array","propName","string","onDragStop","func","onDragStart","bool","defaultProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _reactResizable = require(\"react-resizable\");\n\nvar _utils = require(\"./utils\");\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * An individual item within a ReactGridLayout.\n */\nvar GridItem = function (_React$Component) {\n  _inherits(GridItem, _React$Component);\n\n  function GridItem() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: null,\n      dragging: null,\n      className: \"\"\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // Helper for generating column width\n  GridItem.prototype.calcColWidth = function calcColWidth() {\n    var _props = this.props,\n        margin = _props.margin,\n        containerPadding = _props.containerPadding,\n        containerWidth = _props.containerWidth,\n        cols = _props.cols;\n\n    return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n  };\n\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n\n\n  GridItem.prototype.calcPosition = function calcPosition(x, y, w, h, state) {\n    var _props2 = this.props,\n        margin = _props2.margin,\n        containerPadding = _props2.containerPadding,\n        rowHeight = _props2.rowHeight;\n\n    var colWidth = this.calcColWidth();\n\n    var out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  };\n\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n\n\n  GridItem.prototype.calcXY = function calcXY(top, left) {\n    var _props3 = this.props,\n        margin = _props3.margin,\n        cols = _props3.cols,\n        rowHeight = _props3.rowHeight,\n        w = _props3.w,\n        h = _props3.h,\n        maxRows = _props3.maxRows;\n\n    var colWidth = this.calcColWidth();\n\n    // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n    var x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    var y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    x = Math.max(Math.min(x, cols - w), 0);\n    y = Math.max(Math.min(y, maxRows - h), 0);\n\n    return { x: x, y: y };\n  };\n\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n\n\n  GridItem.prototype.calcWH = function calcWH(_ref) {\n    var height = _ref.height,\n        width = _ref.width;\n    var _props4 = this.props,\n        margin = _props4.margin,\n        maxRows = _props4.maxRows,\n        cols = _props4.cols,\n        rowHeight = _props4.rowHeight,\n        x = _props4.x,\n        y = _props4.y;\n\n    var colWidth = this.calcColWidth();\n\n    // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n    var w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    var h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return { w: w, h: h };\n  };\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n\n\n  GridItem.prototype.createStyle = function createStyle(pos) {\n    var _props5 = this.props,\n        usePercentages = _props5.usePercentages,\n        containerWidth = _props5.containerWidth,\n        useCSSTransforms = _props5.useCSSTransforms;\n\n\n    var style = void 0;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    } else {\n      // top,left (slow)\n      style = (0, _utils.setTopLeft)(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = (0, _utils.perc)(pos.left / containerWidth);\n        style.width = (0, _utils.perc)(pos.width / containerWidth);\n      }\n    }\n\n    return style;\n  };\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n\n\n  GridItem.prototype.mixinDraggable = function mixinDraggable(child) {\n    return _react2.default.createElement(\n      _reactDraggable.DraggableCore,\n      {\n        onStart: this.onDragHandler(\"onDragStart\"),\n        onDrag: this.onDragHandler(\"onDrag\"),\n        onStop: this.onDragHandler(\"onDragStop\"),\n        handle: this.props.handle,\n        cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\")\n      },\n      child\n    );\n  };\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n\n\n  GridItem.prototype.mixinResizable = function mixinResizable(child, position) {\n    var _props6 = this.props,\n        cols = _props6.cols,\n        x = _props6.x,\n        minW = _props6.minW,\n        minH = _props6.minH,\n        maxW = _props6.maxW,\n        maxH = _props6.maxH;\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n\n    var maxWidth = this.calcPosition(0, 0, cols - x, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    var mins = this.calcPosition(0, 0, minW, minH);\n    var maxes = this.calcPosition(0, 0, maxW, maxH);\n    var minConstraints = [mins.width, mins.height];\n    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return _react2.default.createElement(\n      _reactResizable.Resizable,\n      {\n        width: position.width,\n        height: position.height,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        onResizeStop: this.onResizeHandler(\"onResizeStop\"),\n        onResizeStart: this.onResizeHandler(\"onResizeStart\"),\n        onResize: this.onResizeHandler(\"onResize\")\n      },\n      child\n    );\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onDragHandler = function onDragHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n      var handler = _this2.props[handlerName];\n      if (!handler) return;\n\n      var newPosition = { top: 0, left: 0 };\n\n      // Get new XY\n      switch (handlerName) {\n        case \"onDragStart\":\n          {\n            // TODO: this wont work on nested parents\n            var offsetParent = node.offsetParent;\n\n            if (!offsetParent) return;\n            var parentRect = offsetParent.getBoundingClientRect();\n            var clientRect = node.getBoundingClientRect();\n            newPosition.left = clientRect.left - parentRect.left + offsetParent.scrollLeft;\n            newPosition.top = clientRect.top - parentRect.top + offsetParent.scrollTop;\n            _this2.setState({ dragging: newPosition });\n            break;\n          }\n        case \"onDrag\":\n          if (!_this2.state.dragging) throw new Error(\"onDrag called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left + deltaX;\n          newPosition.top = _this2.state.dragging.top + deltaY;\n          _this2.setState({ dragging: newPosition });\n          break;\n        case \"onDragStop\":\n          if (!_this2.state.dragging) throw new Error(\"onDragEnd called before onDragStart.\");\n          newPosition.left = _this2.state.dragging.left;\n          newPosition.top = _this2.state.dragging.top;\n          _this2.setState({ dragging: null });\n          break;\n        default:\n          throw new Error(\"onDragHandler called with unrecognized handlerName: \" + handlerName);\n      }\n\n      var _calcXY = _this2.calcXY(newPosition.top, newPosition.left),\n          x = _calcXY.x,\n          y = _calcXY.y;\n\n      return handler.call(_this2, _this2.props.i, x, y, { e: e, node: node, newPosition: newPosition });\n    };\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onResizeHandler = function onResizeHandler(handlerName) {\n    var _this3 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          size = _ref3.size;\n\n      var handler = _this3.props[handlerName];\n      if (!handler) return;\n      var _props7 = _this3.props,\n          cols = _props7.cols,\n          x = _props7.x,\n          i = _props7.i,\n          maxW = _props7.maxW,\n          minW = _props7.minW,\n          maxH = _props7.maxH,\n          minH = _props7.minH;\n\n      // Get new XY\n\n      var _calcWH = _this3.calcWH(size),\n          w = _calcWH.w,\n          h = _calcWH.h;\n\n      // Cap w at numCols\n\n\n      w = Math.min(w, cols - x);\n      // Ensure w is at least 1\n      w = Math.max(w, 1);\n\n      // Min/max capping\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      _this3.setState({ resizing: handlerName === \"onResizeStop\" ? null : size });\n\n      handler.call(_this3, i, w, h, { e: e, node: node, size: size });\n    };\n  };\n\n  GridItem.prototype.render = function render() {\n    var _props8 = this.props,\n        x = _props8.x,\n        y = _props8.y,\n        w = _props8.w,\n        h = _props8.h,\n        isDraggable = _props8.isDraggable,\n        isResizable = _props8.isResizable,\n        useCSSTransforms = _props8.useCSSTransforms;\n\n\n    var pos = this.calcPosition(x, y, w, h, this.state);\n    var child = _react2.default.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    var newChild = _react2.default.cloneElement(child, {\n      className: (0, _classnames2.default)(\"react-grid-item\", child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        \"react-draggable\": isDraggable,\n        \"react-draggable-dragging\": Boolean(this.state.dragging),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: _extends({}, this.props.style, child.props.style, this.createStyle(pos))\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    if (isResizable) newChild = this.mixinResizable(newChild, pos);\n\n    // Draggable support. This is always on, except for with placeholders.\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n\n    return newChild;\n  };\n\n  return GridItem;\n}(_react2.default.Component);\n\nGridItem.propTypes = {\n  // Children must be only a single element\n  children: _propTypes2.default.element,\n\n  // General grid attributes\n  cols: _propTypes2.default.number.isRequired,\n  containerWidth: _propTypes2.default.number.isRequired,\n  rowHeight: _propTypes2.default.number.isRequired,\n  margin: _propTypes2.default.array.isRequired,\n  maxRows: _propTypes2.default.number.isRequired,\n  containerPadding: _propTypes2.default.array.isRequired,\n\n  // These are all in grid units\n  x: _propTypes2.default.number.isRequired,\n  y: _propTypes2.default.number.isRequired,\n  w: _propTypes2.default.number.isRequired,\n  h: _propTypes2.default.number.isRequired,\n\n  // All optional\n  minW: function minW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n    if (value > props.w || value > props.maxW) return new Error(\"minWidth larger than item width/maxWidth\");\n  },\n\n  maxW: function maxW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n    if (value < props.w || value < props.minW) return new Error(\"maxWidth smaller than item width/minWidth\");\n  },\n\n  minH: function minH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n    if (value > props.h || value > props.maxH) return new Error(\"minHeight larger than item height/maxHeight\");\n  },\n\n  maxH: function maxH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n    if (value < props.h || value < props.minH) return new Error(\"maxHeight smaller than item height/minHeight\");\n  },\n\n  // ID is nice to have for callbacks\n  i: _propTypes2.default.string.isRequired,\n\n  // Functions\n  onDragStop: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func,\n  onDrag: _propTypes2.default.func,\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // Flags\n  isDraggable: _propTypes2.default.bool.isRequired,\n  isResizable: _propTypes2.default.bool.isRequired,\n  static: _propTypes2.default.bool,\n\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool.isRequired,\n\n  // Others\n  className: _propTypes2.default.string,\n  // Selector for draggable handle\n  handle: _propTypes2.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes2.default.string\n};\nGridItem.defaultProps = {\n  className: \"\",\n  cancel: \"\",\n  handle: \"\",\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity\n};\nexports.default = GridItem;"]},"metadata":{},"sourceType":"script"}