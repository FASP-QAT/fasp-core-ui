{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Realm/RealmListComponent.jsx\";\nimport React, { Component } from 'react';\nimport RealmService from '../../api/RealmService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\n\nvar ReactListComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ReactListComponent, _Component);\n\n  function ReactListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ReactListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactListComponent).call(this, props));\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editRealm(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      realmList: []\n    };\n    _this.addNewRealm = _this.addNewRealm.bind(_assertThisInitialized(_this));\n    _this.editRealm = _this.editRealm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReactListComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RealmService.getRealmListAll().then(function (response) {\n        _this2.setState({\n          realmList: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"editRealm\",\n    value: function editRealm(realm) {\n      this.props.history.push({\n        pathname: \"/realm/updateRealm/\",\n        state: {\n          realm: realm\n        }\n      });\n    }\n  }, {\n    key: \"addNewRealm\",\n    value: function addNewRealm() {\n      if (navigator.onLine) {\n        this.props.history.push(\"/realm/addRealm\");\n      } else {\n        alert(\"You must be Online.\");\n      }\n    }\n  }, {\n    key: \"showRealmLabel\",\n    value: function showRealmLabel(cell, row) {\n      return cell.label_en;\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus(cell, row) {\n      if (cell) {\n        return \"Active\";\n      } else {\n        return \"Disabled\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"Realm List\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Realm\",\n        onClick: this.addNewRealm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.realmList,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        filterFormatted: true,\n        dataField: \"realmCode\",\n        dataSort: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Realm Code\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showRealmLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Realm Name (English)\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"monthInPastForAmc\",\n        dataSort: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Month In Past For AMC\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"monthInFutureForAmc\",\n        dataSort: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Month In Future For AMC\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"orderFrequency\",\n        dataSort: true,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Order Frequency\"), React.createElement(TableHeaderColumn, {\n        dataField: \"defaultRealm\",\n        dataSort: true,\n        dataFormat: this.showStatus,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Default\")))));\n    }\n  }]);\n\n  return ReactListComponent;\n}(Component);\n\nexport { ReactListComponent as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Realm/RealmListComponent.jsx"],"names":["React","Component","RealmService","AuthenticationService","NavLink","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","data","ReactListComponent","props","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editRealm","bind","state","realmList","addNewRealm","setupAxiosInterceptors","getRealmListAll","then","response","setState","catch","error","message","realm","history","push","pathname","navigator","onLine","alert","cell","label_en","showRealmLabel","showStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport RealmService from '../../api/RealmService'\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom'\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\n\n\nexport default class ReactListComponent extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.table = data.rows;\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: true,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n               \n                this.editRealm(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            realmList: []\n        }\n        this.addNewRealm = this.addNewRealm.bind(this);\n        this.editRealm = this.editRealm.bind(this);\n    }\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RealmService.getRealmListAll().then(response => {\n            this.setState({\n                realmList: response.data.data\n            })\n        \n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n    editRealm(realm) {\n        this.props.history.push({\n            pathname: \"/realm/updateRealm/\",\n            state: { realm: realm }\n        });\n\n    }\n\n    addNewRealm() {\n        if (navigator.onLine) {\n            this.props.history.push(`/realm/addRealm`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    showRealmLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i>Realm List\n\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Realm\" onClick={this.addNewRealm}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.realmList} version=\"4\"  hover pagination search  options={this.options}>\n                            <TableHeaderColumn isKey filterFormatted dataField=\"realmCode\" dataSort dataAlign=\"center\">Realm Code</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"label\" dataSort dataFormat={this.showRealmLabel} dataAlign=\"center\">Realm Name (English)</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"monthInPastForAmc\" dataSort dataAlign=\"center\">Month In Past For AMC</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"monthInFutureForAmc\" dataSort dataAlign=\"center\">Month In Future For AMC</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"orderFrequency\" dataSort dataAlign=\"center\">Order Frequency</TableHeaderColumn>\n                            <TableHeaderColumn dataField=\"defaultRealm\" dataSort dataFormat={this.showStatus} dataAlign=\"center\">Default</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}