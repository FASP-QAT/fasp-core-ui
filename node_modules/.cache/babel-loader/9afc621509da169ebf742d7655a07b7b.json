{"ast":null,"code":"'use strict';\n/**\n * Representation a of zip file in js\n * @constructor\n */\n\nfunction JSZip() {\n  // if this constructor is used without `new`, it adds `new` before itself:\n  if (!(this instanceof JSZip)) {\n    return new JSZip();\n  }\n\n  if (arguments.length) {\n    throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");\n  } // object containing the files :\n  // {\n  //   \"folder/\" : {...},\n  //   \"folder/data.txt\" : {...}\n  // }\n\n\n  this.files = {};\n  this.comment = null; // Where we are in the hierarchy\n\n  this.root = \"\";\n\n  this.clone = function () {\n    var newObj = new JSZip();\n\n    for (var i in this) {\n      if (typeof this[i] !== \"function\") {\n        newObj[i] = this[i];\n      }\n    }\n\n    return newObj;\n  };\n}\n\nJSZip.prototype = require('./object');\nJSZip.prototype.loadAsync = require('./load');\nJSZip.support = require('./support');\nJSZip.defaults = require('./defaults'); // TODO find a better way to handle this version,\n// a require('package.json').version doesn't work with webpack, see #327\n\nJSZip.version = \"3.2.0\";\n\nJSZip.loadAsync = function (content, options) {\n  return new JSZip().loadAsync(content, options);\n};\n\nJSZip.external = require(\"./external\");\nmodule.exports = JSZip;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/jszip/lib/index.js"],"names":["JSZip","arguments","length","Error","files","comment","root","clone","newObj","i","prototype","require","loadAsync","support","defaults","version","content","options","external","module","exports"],"mappings":"AAAA;AAEA;;;;;AAIA,SAASA,KAAT,GAAiB;AACb;AACA,MAAG,EAAE,gBAAgBA,KAAlB,CAAH,EAA6B;AACzB,WAAO,IAAIA,KAAJ,EAAP;AACH;;AAED,MAAGC,SAAS,CAACC,MAAb,EAAqB;AACjB,UAAM,IAAIC,KAAJ,CAAU,gGAAV,CAAN;AACH,GARY,CAUb;AACA;AACA;AACA;AACA;;;AACA,OAAKC,KAAL,GAAa,EAAb;AAEA,OAAKC,OAAL,GAAe,IAAf,CAjBa,CAmBb;;AACA,OAAKC,IAAL,GAAY,EAAZ;;AACA,OAAKC,KAAL,GAAa,YAAW;AACpB,QAAIC,MAAM,GAAG,IAAIR,KAAJ,EAAb;;AACA,SAAK,IAAIS,CAAT,IAAc,IAAd,EAAoB;AAChB,UAAI,OAAO,KAAKA,CAAL,CAAP,KAAmB,UAAvB,EAAmC;AAC/BD,QAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,KAAKA,CAAL,CAAZ;AACH;AACJ;;AACD,WAAOD,MAAP;AACH,GARD;AASH;;AACDR,KAAK,CAACU,SAAN,GAAkBC,OAAO,CAAC,UAAD,CAAzB;AACAX,KAAK,CAACU,SAAN,CAAgBE,SAAhB,GAA4BD,OAAO,CAAC,QAAD,CAAnC;AACAX,KAAK,CAACa,OAAN,GAAgBF,OAAO,CAAC,WAAD,CAAvB;AACAX,KAAK,CAACc,QAAN,GAAiBH,OAAO,CAAC,YAAD,CAAxB,C,CAEA;AACA;;AACAX,KAAK,CAACe,OAAN,GAAgB,OAAhB;;AAEAf,KAAK,CAACY,SAAN,GAAkB,UAAUI,OAAV,EAAmBC,OAAnB,EAA4B;AAC1C,SAAO,IAAIjB,KAAJ,GAAYY,SAAZ,CAAsBI,OAAtB,EAA+BC,OAA/B,CAAP;AACH,CAFD;;AAIAjB,KAAK,CAACkB,QAAN,GAAiBP,OAAO,CAAC,YAAD,CAAxB;AACAQ,MAAM,CAACC,OAAP,GAAiBpB,KAAjB","sourcesContent":["'use strict';\n\n/**\n * Representation a of zip file in js\n * @constructor\n */\nfunction JSZip() {\n    // if this constructor is used without `new`, it adds `new` before itself:\n    if(!(this instanceof JSZip)) {\n        return new JSZip();\n    }\n\n    if(arguments.length) {\n        throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");\n    }\n\n    // object containing the files :\n    // {\n    //   \"folder/\" : {...},\n    //   \"folder/data.txt\" : {...}\n    // }\n    this.files = {};\n\n    this.comment = null;\n\n    // Where we are in the hierarchy\n    this.root = \"\";\n    this.clone = function() {\n        var newObj = new JSZip();\n        for (var i in this) {\n            if (typeof this[i] !== \"function\") {\n                newObj[i] = this[i];\n            }\n        }\n        return newObj;\n    };\n}\nJSZip.prototype = require('./object');\nJSZip.prototype.loadAsync = require('./load');\nJSZip.support = require('./support');\nJSZip.defaults = require('./defaults');\n\n// TODO find a better way to handle this version,\n// a require('package.json').version doesn't work with webpack, see #327\nJSZip.version = \"3.2.0\";\n\nJSZip.loadAsync = function (content, options) {\n    return new JSZip().loadAsync(content, options);\n};\n\nJSZip.external = require(\"./external\");\nmodule.exports = JSZip;\n"]},"metadata":{},"sourceType":"script"}