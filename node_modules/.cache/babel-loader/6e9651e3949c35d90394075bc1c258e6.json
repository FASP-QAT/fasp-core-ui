{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require(\"lodash.isequal\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require(\"./utils\");\n\nvar _GridItem = require(\"./GridItem\");\n\nvar _GridItem2 = _interopRequireDefault(_GridItem);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n// Types\n\n\nvar ReactGridLayout = function (_React$Component) {\n  _inherits(ReactGridLayout, _React$Component); // TODO publish internal ReactClass displayName transform\n\n\n  function ReactGridLayout(props, context) {\n    _classCallCheck(this, ReactGridLayout);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    (0, _utils.autoBindHandlers)(_this, [\"onDragStart\", \"onDrag\", \"onDragStop\", \"onResizeStart\", \"onResize\", \"onResizeStop\"]);\n    return _this;\n  }\n\n  ReactGridLayout.prototype.componentDidMount = function componentDidMount() {\n    this.setState({\n      mounted: true\n    }); // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  };\n\n  ReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var newLayoutBase = void 0; // Legacy support for compactType\n    // Allow parent to set layout directly.\n\n    if (!(0, _lodash2.default)(nextProps.layout, this.props.layout) || nextProps.compactType !== this.props.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(this.props.children, nextProps.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = this.state.layout;\n    } // We need to regenerate the layout.\n\n\n    if (newLayoutBase) {\n      var newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, this.compactType(nextProps));\n      var _oldLayout = this.state.layout;\n      this.setState({\n        layout: newLayout\n      });\n      this.onLayoutMaybeChanged(newLayout, _oldLayout);\n    }\n  };\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n\n\n  ReactGridLayout.prototype.containerHeight = function containerHeight() {\n    if (!this.props.autoSize) return;\n    var nbRow = (0, _utils.bottom)(this.state.layout);\n    var containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  };\n\n  ReactGridLayout.prototype.compactType = function compactType(props) {\n    if (!props) props = this.props;\n    return props.verticalCompact === false ? null : props.compactType;\n  };\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStart = function onDragStart(i, x, y, _ref) {\n    var e = _ref.e,\n        node = _ref.node;\n    var layout = this.state.layout;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n    this.setState({\n      oldDragItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n    return this.props.onDragStart(layout, l, l, null, e, node);\n  };\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDrag = function onDrag(i, x, y, _ref2) {\n    var e = _ref2.e,\n        node = _ref2.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var cols = this.props.cols;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return; // Create placeholder (display only)\n\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      placeholder: true,\n      i: i\n    }; // Move the element to the dragged location.\n\n    var isUserAction = true;\n    layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, this.props.preventCollision, this.compactType(), cols);\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStop = function onDragStop(i, x, y, _ref3) {\n    var e = _ref3.e,\n        node = _ref3.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var _props = this.props,\n        cols = _props.cols,\n        preventCollision = _props.preventCollision;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return; // Move the element here\n\n    var isUserAction = true;\n    layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, this.compactType(), cols);\n    this.props.onDragStop(layout, oldDragItem, l, null, e, node); // Set state\n\n    var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n    var oldLayout = this.state.oldLayout;\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldDragItem: null,\n      oldLayout: null\n    });\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  ReactGridLayout.prototype.onLayoutMaybeChanged = function onLayoutMaybeChanged(newLayout, oldLayout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n\n    if (!(0, _lodash2.default)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  };\n\n  ReactGridLayout.prototype.onResizeStart = function onResizeStart(i, w, h, _ref4) {\n    var e = _ref4.e,\n        node = _ref4.node;\n    var layout = this.state.layout;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n    this.setState({\n      oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  };\n\n  ReactGridLayout.prototype.onResize = function onResize(i, w, h, _ref5) {\n    var e = _ref5.e,\n        node = _ref5.node;\n    var _state = this.state,\n        layout = _state.layout,\n        oldResizeItem = _state.oldResizeItem;\n    var _props2 = this.props,\n        cols = _props2.cols,\n        preventCollision = _props2.preventCollision;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return; // Something like quad tree should be used\n    // to find collisions faster\n\n    var hasCollisions = void 0;\n\n    if (preventCollision) {\n      var collisions = (0, _utils.getAllCollisions)(layout, _extends({}, l, {\n        w: w,\n        h: h\n      })).filter(function (layoutItem) {\n        return layoutItem.i !== l.i;\n      });\n      hasCollisions = collisions.length > 0; // If we're colliding, we need adjust the placeholder.\n\n      if (hasCollisions) {\n        // adjust w && h to maximum allowed space\n        var leastX = Infinity,\n            leastY = Infinity;\n        collisions.forEach(function (layoutItem) {\n          if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x);\n          if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y);\n        });\n        if (Number.isFinite(leastX)) l.w = leastX - l.x;\n        if (Number.isFinite(leastY)) l.h = leastY - l.y;\n      }\n    }\n\n    if (!hasCollisions) {\n      // Set new width and height.\n      l.w = w;\n      l.h = h;\n    } // Create placeholder element (display only)\n\n\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      static: true,\n      i: i\n    };\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node); // Re-compact the layout and set the drag placeholder.\n\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n\n  ReactGridLayout.prototype.onResizeStop = function onResizeStop(i, w, h, _ref6) {\n    var e = _ref6.e,\n        node = _ref6.node;\n    var _state2 = this.state,\n        layout = _state2.layout,\n        oldResizeItem = _state2.oldResizeItem;\n    var cols = this.props.cols;\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node); // Set state\n\n    var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n    var oldLayout = this.state.oldLayout;\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n\n\n  ReactGridLayout.prototype.placeholder = function placeholder() {\n    var activeDrag = this.state.activeDrag;\n    if (!activeDrag) return null;\n    var _props3 = this.props,\n        width = _props3.width,\n        cols = _props3.cols,\n        margin = _props3.margin,\n        containerPadding = _props3.containerPadding,\n        rowHeight = _props3.rowHeight,\n        maxRows = _props3.maxRows,\n        useCSSTransforms = _props3.useCSSTransforms; // {...this.state.activeDrag} is pretty slow, actually\n\n    return _react2.default.createElement(_GridItem2.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: \"react-grid-placeholder\",\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      useCSSTransforms: useCSSTransforms\n    }, _react2.default.createElement(\"div\", null));\n  };\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n\n\n  ReactGridLayout.prototype.processGridItem = function processGridItem(child) {\n    if (!child || !child.key) return;\n    var l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    var _props4 = this.props,\n        width = _props4.width,\n        cols = _props4.cols,\n        margin = _props4.margin,\n        containerPadding = _props4.containerPadding,\n        rowHeight = _props4.rowHeight,\n        maxRows = _props4.maxRows,\n        isDraggable = _props4.isDraggable,\n        isResizable = _props4.isResizable,\n        useCSSTransforms = _props4.useCSSTransforms,\n        draggableCancel = _props4.draggableCancel,\n        draggableHandle = _props4.draggableHandle;\n    var mounted = this.state.mounted; // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n\n    var draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));\n    var resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));\n    return _react2.default.createElement(_GridItem2.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      \"static\": l.static\n    }, child);\n  };\n\n  ReactGridLayout.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props5 = this.props,\n        className = _props5.className,\n        style = _props5.style;\n    var mergedClassName = (0, _classnames2.default)(\"react-grid-layout\", className);\n\n    var mergedStyle = _extends({\n      height: this.containerHeight()\n    }, style);\n\n    return _react2.default.createElement(\"div\", {\n      className: mergedClassName,\n      style: mergedStyle\n    }, _react2.default.Children.map(this.props.children, function (child) {\n      return _this2.processGridItem(child);\n    }), this.placeholder());\n  };\n\n  return ReactGridLayout;\n}(_react2.default.Component);\n\nReactGridLayout.displayName = \"ReactGridLayout\";\nReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes2.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes2.default.bool,\n  // # of cols.\n  cols: _propTypes2.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes2.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes2.default.string,\n  // Deprecated\n  verticalCompact: function verticalCompact(props) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn( // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes2.default.oneOf([\"vertical\", \"horizontal\"]),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props) {\n    var layout = props.layout; // I hope you're setting the data-grid property on the grid items\n\n    if (layout === undefined) return;\n    (0, _utils.validateLayout)(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n  // Margin between items [x, y] in px\n  margin: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes2.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes2.default.number,\n  //\n  // Flags\n  //\n  isDraggable: _propTypes2.default.bool,\n  isResizable: _propTypes2.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes2.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool,\n  //\n  // Callbacks\n  //\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes2.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes2.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes2.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes2.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes2.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes2.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes2.default.func,\n  //\n  // Other validations\n  //\n  // Children must not have duplicate keys.\n  children: function children(props, propName) {\n    var children = props[propName]; // Check children keys for duplicates. Throw if found.\n\n    var keys = {};\n\n    _react2.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n\n      keys[child.key] = true;\n    });\n  }\n};\nReactGridLayout.defaultProps = {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isDraggable: true,\n  isResizable: true,\n  useCSSTransforms: true,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  this.state = {\n    activeDrag: null,\n    layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols, // Legacy support for verticalCompact: false\n    this.compactType()),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null\n  };\n};\n\nexports.default = ReactGridLayout;","map":{"version":3,"sources":["/home/altius/Documents/QAT/fasp-core-ui/node_modules/react-grid-layout/build/ReactGridLayout.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_lodash","_lodash2","_classnames","_classnames2","_utils","_GridItem","_GridItem2","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ReactGridLayout","_React$Component","props","context","_this","_initialiseProps","autoBindHandlers","componentDidMount","setState","mounted","onLayoutMaybeChanged","state","layout","componentWillReceiveProps","nextProps","newLayoutBase","compactType","childrenEqual","children","newLayout","synchronizeLayoutWithChildren","cols","_oldLayout","containerHeight","autoSize","nbRow","bottom","containerPaddingY","containerPadding","margin","rowHeight","verticalCompact","onDragStart","x","y","_ref","e","node","l","getLayoutItem","oldDragItem","cloneLayoutItem","oldLayout","onDrag","_ref2","placeholder","w","h","isUserAction","moveElement","preventCollision","compact","activeDrag","onDragStop","_ref3","_props","onLayoutChange","onResizeStart","_ref4","oldResizeItem","onResize","_ref5","_state","_props2","hasCollisions","collisions","getAllCollisions","filter","layoutItem","leastX","Infinity","leastY","forEach","Math","min","Number","isFinite","static","onResizeStop","_ref6","_state2","_props3","width","maxRows","useCSSTransforms","createElement","className","containerWidth","isDraggable","isResizable","processGridItem","child","String","_props4","draggableCancel","draggableHandle","draggable","Boolean","resizable","cancel","handle","usePercentages","minH","minW","maxH","maxW","render","_this2","_props5","style","mergedClassName","mergedStyle","height","Children","map","Component","displayName","propTypes","string","object","number","bool","process","env","NODE_ENV","console","warn","oneOf","undefined","validateLayout","arrayOf","func","propName","keys","Error","defaultProps","noop"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require(\"lodash.isequal\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require(\"./utils\");\n\nvar _GridItem = require(\"./GridItem\");\n\nvar _GridItem2 = _interopRequireDefault(_GridItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\n// Types\nvar ReactGridLayout = function (_React$Component) {\n  _inherits(ReactGridLayout, _React$Component);\n\n  // TODO publish internal ReactClass displayName transform\n  function ReactGridLayout(props, context) {\n    _classCallCheck(this, ReactGridLayout);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    (0, _utils.autoBindHandlers)(_this, [\"onDragStart\", \"onDrag\", \"onDragStop\", \"onResizeStart\", \"onResize\", \"onResizeStop\"]);\n    return _this;\n  }\n\n  ReactGridLayout.prototype.componentDidMount = function componentDidMount() {\n    this.setState({ mounted: true });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  };\n\n  ReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var newLayoutBase = void 0;\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _lodash2.default)(nextProps.layout, this.props.layout) || nextProps.compactType !== this.props.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(this.props.children, nextProps.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = this.state.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      var newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, this.compactType(nextProps));\n      var _oldLayout = this.state.layout;\n      this.setState({ layout: newLayout });\n      this.onLayoutMaybeChanged(newLayout, _oldLayout);\n    }\n  };\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n\n\n  ReactGridLayout.prototype.containerHeight = function containerHeight() {\n    if (!this.props.autoSize) return;\n    var nbRow = (0, _utils.bottom)(this.state.layout);\n    var containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  };\n\n  ReactGridLayout.prototype.compactType = function compactType(props) {\n    if (!props) props = this.props;\n    return props.verticalCompact === false ? null : props.compactType;\n  };\n\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStart = function onDragStart(i, x, y, _ref) {\n    var e = _ref.e,\n        node = _ref.node;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldDragItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n\n    return this.props.onDragStart(layout, l, l, null, e, node);\n  };\n\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDrag = function onDrag(i, x, y, _ref2) {\n    var e = _ref2.e,\n        node = _ref2.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var cols = this.props.cols;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Create placeholder (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      placeholder: true,\n      i: i\n    };\n\n    // Move the element to the dragged location.\n    var isUserAction = true;\n    layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, this.props.preventCollision, this.compactType(), cols);\n\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStop = function onDragStop(i, x, y, _ref3) {\n    var e = _ref3.e,\n        node = _ref3.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n    var _props = this.props,\n        cols = _props.cols,\n        preventCollision = _props.preventCollision;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Move the element here\n    var isUserAction = true;\n    layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, this.compactType(), cols);\n\n    this.props.onDragStop(layout, oldDragItem, l, null, e, node);\n\n    // Set state\n    var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n    var oldLayout = this.state.oldLayout;\n\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldDragItem: null,\n      oldLayout: null\n    });\n\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  ReactGridLayout.prototype.onLayoutMaybeChanged = function onLayoutMaybeChanged(newLayout, oldLayout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _lodash2.default)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  };\n\n  ReactGridLayout.prototype.onResizeStart = function onResizeStart(i, w, h, _ref4) {\n    var e = _ref4.e,\n        node = _ref4.node;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  };\n\n  ReactGridLayout.prototype.onResize = function onResize(i, w, h, _ref5) {\n    var e = _ref5.e,\n        node = _ref5.node;\n    var _state = this.state,\n        layout = _state.layout,\n        oldResizeItem = _state.oldResizeItem;\n    var _props2 = this.props,\n        cols = _props2.cols,\n        preventCollision = _props2.preventCollision;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Something like quad tree should be used\n    // to find collisions faster\n    var hasCollisions = void 0;\n    if (preventCollision) {\n      var collisions = (0, _utils.getAllCollisions)(layout, _extends({}, l, { w: w, h: h })).filter(function (layoutItem) {\n        return layoutItem.i !== l.i;\n      });\n      hasCollisions = collisions.length > 0;\n\n      // If we're colliding, we need adjust the placeholder.\n      if (hasCollisions) {\n        // adjust w && h to maximum allowed space\n        var leastX = Infinity,\n            leastY = Infinity;\n        collisions.forEach(function (layoutItem) {\n          if (layoutItem.x > l.x) leastX = Math.min(leastX, layoutItem.x);\n          if (layoutItem.y > l.y) leastY = Math.min(leastY, layoutItem.y);\n        });\n\n        if (Number.isFinite(leastX)) l.w = leastX - l.x;\n        if (Number.isFinite(leastY)) l.h = leastY - l.y;\n      }\n    }\n\n    if (!hasCollisions) {\n      // Set new width and height.\n      l.w = w;\n      l.h = h;\n    }\n\n    // Create placeholder element (display only)\n    var placeholder = {\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      static: true,\n      i: i\n    };\n\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);\n\n    // Re-compact the layout and set the drag placeholder.\n    this.setState({\n      layout: (0, _utils.compact)(layout, this.compactType(), cols),\n      activeDrag: placeholder\n    });\n  };\n\n  ReactGridLayout.prototype.onResizeStop = function onResizeStop(i, w, h, _ref6) {\n    var e = _ref6.e,\n        node = _ref6.node;\n    var _state2 = this.state,\n        layout = _state2.layout,\n        oldResizeItem = _state2.oldResizeItem;\n    var cols = this.props.cols;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);\n\n    // Set state\n    var newLayout = (0, _utils.compact)(layout, this.compactType(), cols);\n    var oldLayout = this.state.oldLayout;\n\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n\n\n  ReactGridLayout.prototype.placeholder = function placeholder() {\n    var activeDrag = this.state.activeDrag;\n\n    if (!activeDrag) return null;\n    var _props3 = this.props,\n        width = _props3.width,\n        cols = _props3.cols,\n        margin = _props3.margin,\n        containerPadding = _props3.containerPadding,\n        rowHeight = _props3.rowHeight,\n        maxRows = _props3.maxRows,\n        useCSSTransforms = _props3.useCSSTransforms;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        w: activeDrag.w,\n        h: activeDrag.h,\n        x: activeDrag.x,\n        y: activeDrag.y,\n        i: activeDrag.i,\n        className: \"react-grid-placeholder\",\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        isDraggable: false,\n        isResizable: false,\n        useCSSTransforms: useCSSTransforms\n      },\n      _react2.default.createElement(\"div\", null)\n    );\n  };\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n\n\n  ReactGridLayout.prototype.processGridItem = function processGridItem(child) {\n    if (!child || !child.key) return;\n    var l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    var _props4 = this.props,\n        width = _props4.width,\n        cols = _props4.cols,\n        margin = _props4.margin,\n        containerPadding = _props4.containerPadding,\n        rowHeight = _props4.rowHeight,\n        maxRows = _props4.maxRows,\n        isDraggable = _props4.isDraggable,\n        isResizable = _props4.isResizable,\n        useCSSTransforms = _props4.useCSSTransforms,\n        draggableCancel = _props4.draggableCancel,\n        draggableHandle = _props4.draggableHandle;\n    var mounted = this.state.mounted;\n\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n\n    var draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));\n    var resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        cancel: draggableCancel,\n        handle: draggableHandle,\n        onDragStop: this.onDragStop,\n        onDragStart: this.onDragStart,\n        onDrag: this.onDrag,\n        onResizeStart: this.onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: this.onResizeStop,\n        isDraggable: draggable,\n        isResizable: resizable,\n        useCSSTransforms: useCSSTransforms && mounted,\n        usePercentages: !mounted,\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        i: l.i,\n        minH: l.minH,\n        minW: l.minW,\n        maxH: l.maxH,\n        maxW: l.maxW,\n        \"static\": l.static\n      },\n      child\n    );\n  };\n\n  ReactGridLayout.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props5 = this.props,\n        className = _props5.className,\n        style = _props5.style;\n\n\n    var mergedClassName = (0, _classnames2.default)(\"react-grid-layout\", className);\n    var mergedStyle = _extends({\n      height: this.containerHeight()\n    }, style);\n\n    return _react2.default.createElement(\n      \"div\",\n      { className: mergedClassName, style: mergedStyle },\n      _react2.default.Children.map(this.props.children, function (child) {\n        return _this2.processGridItem(child);\n      }),\n      this.placeholder()\n    );\n  };\n\n  return ReactGridLayout;\n}(_react2.default.Component);\n\nReactGridLayout.displayName = \"ReactGridLayout\";\nReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes2.default.number,\n\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes2.default.bool,\n  // # of cols.\n  cols: _propTypes2.default.number,\n\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes2.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes2.default.string,\n\n  // Deprecated\n  verticalCompact: function verticalCompact(props) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n      // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes2.default.oneOf([\"vertical\", \"horizontal\"]),\n\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props) {\n    var layout = props.layout;\n    // I hope you're setting the data-grid property on the grid items\n    if (layout === undefined) return;\n    (0, _utils.validateLayout)(layout, \"layout\");\n  },\n\n  //\n  // Grid Dimensions\n  //\n\n  // Margin between items [x, y] in px\n  margin: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes2.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes2.default.number,\n\n  //\n  // Flags\n  //\n  isDraggable: _propTypes2.default.bool,\n  isResizable: _propTypes2.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes2.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool,\n\n  //\n  // Callbacks\n  //\n\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes2.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes2.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes2.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes2.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes2.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes2.default.func,\n\n  //\n  // Other validations\n  //\n\n  // Children must not have duplicate keys.\n  children: function children(props, propName) {\n    var children = props[propName];\n\n    // Check children keys for duplicates. Throw if found.\n    var keys = {};\n    _react2.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n      keys[child.key] = true;\n    });\n  }\n};\nReactGridLayout.defaultProps = {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity, // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isDraggable: true,\n  isResizable: true,\n  useCSSTransforms: true,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  this.state = {\n    activeDrag: null,\n    layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n    // Legacy support for verticalCompact: false\n    this.compactType()),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null\n  };\n};\n\nexports.default = ReactGridLayout;"]},"metadata":{},"sourceType":"script"}