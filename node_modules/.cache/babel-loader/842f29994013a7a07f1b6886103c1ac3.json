{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Program/ProgramList.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText';\nimport programDate from './ProgramData';\nimport ProgramService from \"../../api/ProgramService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n';\n\nvar ProgramList = /*#__PURE__*/function (_Component) {\n  _inherits(ProgramList, _Component);\n\n  function ProgramList(props) {\n    var _this;\n\n    _classCallCheck(this, ProgramList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProgramList).call(this, props));\n    _this.state = {\n      table: [],\n      lang: 'en'\n    }; // this.table = programDate.rows;\n\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editProgram(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.showProgramLabel = _this.showProgramLabel.bind(_assertThisInitialized(_this));\n    _this.showRealmLabel = _this.showRealmLabel.bind(_assertThisInitialized(_this));\n    _this.showCountryLabel = _this.showCountryLabel.bind(_assertThisInitialized(_this));\n    _this.showOrganisationLabel = _this.showOrganisationLabel.bind(_assertThisInitialized(_this));\n    _this.editProgram = _this.editProgram.bind(_assertThisInitialized(_this));\n    _this.addNewProgram = _this.addNewProgram.bind(_assertThisInitialized(_this));\n    _this.buttonFormatter = _this.buttonFormatter.bind(_assertThisInitialized(_this));\n    _this.addProductMapping = _this.addProductMapping.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProgramList, [{\n    key: \"editProgram\",\n    value: function editProgram(program) {\n      this.props.history.push({\n        pathname: \"/program/editProgram\",\n        state: {\n          program: program\n        }\n      });\n    } // just an example\n    // nameFormat(cell, row) {\n    //   const id = `/budgets/${row.id}`\n    //   return (\n    //     <NavLink strict to={id}> {cell} </NavLink>\n    //   );\n    // };\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      ProgramService.getProgramList().then(function (response) {\n        _this2.setState({\n          table: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"showProgramLabel\",\n    value: function showProgramLabel(cell, row) {\n      // console.log(\"========\", cell);\n      return getLabelText(cell, this.state.lang);\n    }\n  }, {\n    key: \"showRealmLabel\",\n    value: function showRealmLabel(cell, row) {\n      // console.log(\"========>\",cell);\n      return getLabelText(cell.realm.label, this.state.lang);\n    }\n  }, {\n    key: \"showCountryLabel\",\n    value: function showCountryLabel(cell, row) {\n      // console.log(\"========>\",cell);\n      return getLabelText(cell.country.label, this.state.lang);\n    }\n  }, {\n    key: \"showOrganisationLabel\",\n    value: function showOrganisationLabel(cell, row) {\n      // console.log(\"========>\",cell);\n      return getLabelText(cell.label, this.state.lang);\n    }\n  }, {\n    key: \"addNewProgram\",\n    value: function addNewProgram() {\n      this.props.history.push({\n        pathname: \"/program/addProgram\"\n      });\n    }\n  }, {\n    key: \"buttonFormatter\",\n    value: function buttonFormatter(cell, row) {\n      var _this3 = this;\n\n      // console.log(\"-----------\", cell);\n      return React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: function onClick(event) {\n          return _this3.addProductMapping(event, cell);\n        },\n        className: \"float-right mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), \" Add\");\n    }\n  }, {\n    key: \"addProductMapping\",\n    value: function addProductMapping(event, cell) {\n      var _this4 = this;\n\n      // console.log(cell);\n      event.stopPropagation();\n      AuthenticationService.setupAxiosInterceptors();\n      ProgramService.getProgramProductListByProgramId(cell).then(function (response) {\n        var myReasponse = response.data.data;\n        console.log(\"myResponce=========\", response.data.data);\n\n        _this4.props.history.push({\n          pathname: \"/programProduct/addProgramProduct\",\n          state: {\n            programProduct: myReasponse\n          }\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this4.setState({\n              message: error.response\n            });\n\n            break;\n\n          default:\n            _this4.setState({\n              message: error.response\n            });\n\n            break;\n        }\n      }); // this.props.history.push({\n      //   pathname: \"/programProduct/addProgramProduct\",\n      //   state: {\n      //     'programProduct':\n      //     {\n      //       'programId': 1,\n      //       'label': {\n      //         'label_en': \"Kenya Malaria\"\n      //       },\n      //       'prodcuts':\n      //         [\n      //           {\n      //             'productId': 2,\n      //             'label': {\n      //               'label_en': \"Abacavir\"\n      //             },\n      //             'minMonth': 1,\n      //             'maxMonth': 3\n      //           },\n      //           {\n      //             'productId': 4,\n      //             'label': {\n      //               'label_en': \"Condoms\"\n      //             },\n      //             'minMonth': 1,\n      //             'maxMonth': 3\n      //           }\n      //         ]\n      //     }\n      // programId: 1,\n      // label: 'program 1',\n      // rows: [\n      //   {\n      //     programId: '1',\n      //     programName: 'Program 1',\n      //     productId: '1',\n      //     productName: 'product 1',\n      //     minMonth: '2',\n      //     maxMonth: '2'\n      //   },\n      //   {\n      //     programId: '1',\n      //     programName: 'Program 1',\n      //     productId: '2',\n      //     productName: 'product 2',\n      //     minMonth: '3',\n      //     maxMonth: '4'\n      //   }\n      // ]\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), i18n.t('static.program.programlist'), ' ', React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Budget\",\n        onClick: this.addNewProgram,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.table,\n        version: \"4\",\n        striped: true,\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"programId\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Program Id\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showProgramLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, i18n.t('static.program.program')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"realmCountry\",\n        dataSort: true,\n        dataFormat: this.showRealmLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, i18n.t('static.program.realm')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"realmCountry\",\n        dataSort: true,\n        dataFormat: this.showCountryLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, i18n.t('static.program.realmcountry')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"organisation\",\n        dataSort: true,\n        dataFormat: this.showOrganisationLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, i18n.t('static.program.organisation')), React.createElement(TableHeaderColumn, {\n        dataField: \"airFreightPerc\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, i18n.t('static.program.airfreightperc')), React.createElement(TableHeaderColumn, {\n        dataField: \"seaFreightPerc\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, i18n.t('static.program.seafreightperc')), React.createElement(TableHeaderColumn, {\n        dataField: \"plannedToDraftLeadTime\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, i18n.t('static.program.draftleadtime')), React.createElement(TableHeaderColumn, {\n        dataField: \"draftToSubmittedLeadTime\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, i18n.t('static.program.drafttosubmitleadtime')), React.createElement(TableHeaderColumn, {\n        dataField: \"submittedToApprovedLeadTime\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, i18n.t('static.program.submittoapproveleadtime')), React.createElement(TableHeaderColumn, {\n        dataField: \"programId\",\n        dataFormat: this.buttonFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Map Product To Program\")))));\n    }\n  }]);\n\n  return ProgramList;\n}(Component);\n\nexport { ProgramList as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Program/ProgramList.js"],"names":["React","Component","NavLink","Card","CardHeader","CardBody","Button","BootstrapTable","TableHeaderColumn","getLabelText","programDate","ProgramService","AuthenticationService","i18n","ProgramList","props","state","table","lang","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editProgram","bind","showProgramLabel","showRealmLabel","showCountryLabel","showOrganisationLabel","addNewProgram","buttonFormatter","addProductMapping","program","history","push","pathname","setupAxiosInterceptors","getProgramList","then","response","setState","data","catch","error","message","cell","realm","label","country","event","stopPropagation","getProgramProductListByProgramId","myReasponse","console","log","programProduct","t"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody, Button } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText';\nimport programDate from './ProgramData';\nimport ProgramService from \"../../api/ProgramService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n';\nexport default class ProgramList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      table: [],\n      lang: 'en'\n    }\n    // this.table = programDate.rows;\n    this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editProgram(row);\n      }.bind(this)\n    }\n\n    this.showProgramLabel = this.showProgramLabel.bind(this);\n    this.showRealmLabel = this.showRealmLabel.bind(this);\n    this.showCountryLabel = this.showCountryLabel.bind(this);\n    this.showOrganisationLabel = this.showOrganisationLabel.bind(this);\n    this.editProgram = this.editProgram.bind(this);\n    this.addNewProgram = this.addNewProgram.bind(this);\n    this.buttonFormatter = this.buttonFormatter.bind(this);\n    this.addProductMapping = this.addProductMapping.bind(this);\n\n\n\n  }\n\n  editProgram(program) {\n    this.props.history.push({\n      pathname: \"/program/editProgram\",\n      state: { program }\n    });\n  }\n  // just an example\n  // nameFormat(cell, row) {\n  //   const id = `/budgets/${row.id}`\n  //   return (\n  //     <NavLink strict to={id}> {cell} </NavLink>\n  //   );\n  // };\n\n  componentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    ProgramService.getProgramList().then(response => {\n      this.setState({\n        table: response.data.data\n      })\n    })\n      .catch(\n        error => {\n          switch (error.message) {\n            case \"Network Error\":\n              this.setState({\n                message: error.message\n              })\n              break\n            default:\n              this.setState({\n                message: error.message\n              })\n              break\n          }\n        }\n      );\n\n  }\n\n  showProgramLabel(cell, row) {\n    // console.log(\"========\", cell);\n    return getLabelText(cell, this.state.lang);\n\n  }\n  showRealmLabel(cell, row) {\n    // console.log(\"========>\",cell);\n    return getLabelText(cell.realm.label, this.state.lang);\n\n  }\n  showCountryLabel(cell, row) {\n    // console.log(\"========>\",cell);\n    return getLabelText(cell.country.label, this.state.lang);\n\n  }\n  showOrganisationLabel(cell, row) {\n    // console.log(\"========>\",cell);\n    return getLabelText(cell.label, this.state.lang);\n\n  }\n  addNewProgram() {\n    this.props.history.push({\n      pathname: \"/program/addProgram\"\n    });\n  }\n  buttonFormatter(cell, row) {\n    // console.log(\"-----------\", cell);\n    return <Button type=\"button\" size=\"sm\" color=\"success\" onClick={(event) => this.addProductMapping(event, cell)} className=\"float-right mr-1\" ><i className=\"fa fa-check\"></i> Add</Button>;\n  }\n  addProductMapping(event, cell) {\n    // console.log(cell);\n    event.stopPropagation();\n    AuthenticationService.setupAxiosInterceptors();\n    ProgramService.getProgramProductListByProgramId(cell)\n      .then(response => {\n        \n        let myReasponse=response.data.data;\n        console.log(\"myResponce=========\",response.data.data);\n        this.props.history.push({\n          pathname: \"/programProduct/addProgramProduct\",\n          state: {\n            programProduct:myReasponse     \n          }\n          \n        })\n      }).catch(\n        error => {\n          switch (error.message) {\n            case \"Network Error\":\n              this.setState({\n                message: error.response\n              })\n              break\n            default:\n              this.setState({\n                message: error.response\n              })\n              break\n          }\n        }\n      );\n\n\n\n    // this.props.history.push({\n    //   pathname: \"/programProduct/addProgramProduct\",\n    //   state: {\n    \n    \n    \n    \n    \n    \n    \n    //     'programProduct':\n\n    //     {\n    //       'programId': 1,\n    //       'label': {\n    //         'label_en': \"Kenya Malaria\"\n    //       },\n    //       'prodcuts':\n    //         [\n    //           {\n    //             'productId': 2,\n    //             'label': {\n    //               'label_en': \"Abacavir\"\n    //             },\n    //             'minMonth': 1,\n    //             'maxMonth': 3\n    //           },\n    //           {\n    //             'productId': 4,\n    //             'label': {\n    //               'label_en': \"Condoms\"\n    //             },\n    //             'minMonth': 1,\n    //             'maxMonth': 3\n    //           }\n    //         ]\n    //     }\n\n\n\n\n\n    // programId: 1,\n    // label: 'program 1',\n    // rows: [\n    //   {\n    //     programId: '1',\n    //     programName: 'Program 1',\n    //     productId: '1',\n    //     productName: 'product 1',\n    //     minMonth: '2',\n    //     maxMonth: '2'\n    //   },\n    //   {\n    //     programId: '1',\n    //     programName: 'Program 1',\n    //     productId: '2',\n    //     productName: 'product 2',\n    //     minMonth: '3',\n    //     maxMonth: '4'\n    //   }\n    // ]\n    // }\n\n  \n\n\n}\nrender() {\n  return (\n    <div className=\"animated\">\n      <Card>\n        <CardHeader>\n          <i className=\"icon-menu\"></i>{i18n.t('static.program.programlist')}{' '}\n          <div className=\"card-header-actions\">\n            <div className=\"card-header-action\">\n              <a href=\"javascript:void();\" title=\"Add Budget\" onClick={this.addNewProgram}><i className=\"fa fa-plus-square\"></i></a>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable data={this.state.table} version=\"4\" striped hover pagination search options={this.options}>\n            <TableHeaderColumn isKey dataField=\"programId\" hidden >Program Id</TableHeaderColumn>\n            <TableHeaderColumn filterFormatted dataField=\"label\" dataSort dataFormat={this.showProgramLabel} >{i18n.t('static.program.program')}</TableHeaderColumn>\n            <TableHeaderColumn filterFormatted dataField=\"realmCountry\" dataSort dataFormat={this.showRealmLabel} >{i18n.t('static.program.realm')}</TableHeaderColumn>\n            <TableHeaderColumn filterFormatted dataField=\"realmCountry\" dataSort dataFormat={this.showCountryLabel} >{i18n.t('static.program.realmcountry')}</TableHeaderColumn>\n            <TableHeaderColumn filterFormatted dataField=\"organisation\" dataSort dataFormat={this.showOrganisationLabel} >{i18n.t('static.program.organisation')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"airFreightPerc\" dataSort >{i18n.t('static.program.airfreightperc')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"seaFreightPerc\" dataSort>{i18n.t('static.program.seafreightperc')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"plannedToDraftLeadTime\" dataSort>{i18n.t('static.program.draftleadtime')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"draftToSubmittedLeadTime\" dataSort>{i18n.t('static.program.drafttosubmitleadtime')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"submittedToApprovedLeadTime\" dataSort>{i18n.t('static.program.submittoapproveleadtime')}</TableHeaderColumn>\n            <TableHeaderColumn dataField=\"programId\" dataFormat={this.buttonFormatter}>Map Product To Program</TableHeaderColumn>\n          </BootstrapTable>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n}"]},"metadata":{},"sourceType":"module"}