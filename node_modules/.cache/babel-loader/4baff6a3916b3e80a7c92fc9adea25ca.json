{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/ImportProgram.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramService from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\";\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\nvar initialValues = {\n  programId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programId: Yup.string().required('Please select program.')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar DownloadProgram = /*#__PURE__*/function (_Component) {\n  _inherits(DownloadProgram, _Component);\n\n  function DownloadProgram() {\n    var _this;\n\n    _classCallCheck(this, DownloadProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DownloadProgram).call(this));\n    _this.state = {\n      programList: []\n    };\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_this));\n    _this.importFile = _this.importFile.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DownloadProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.getElementById(\"programIdDiv\").style.display = \"none\";\n      document.getElementById(\"formSubmitButton\").style.display = \"none\";\n      document.getElementById(\"fileImportDiv\").style.display = \"block\";\n      document.getElementById(\"fileImportButton\").style.display = \"block\"; // const lan = 'en'\n      // ProgramService.getProgramList().then(response => {\n      //     var json = response.data;\n      //     var prgList = [];\n      //     for (var i = 0; i < json.length; i++) {\n      //         prgList[i] = { value: json[i].programId, label: getLabelText(json[i].label, lan) }\n      //     }\n      //     this.setState({\n      //         programList: prgList\n      //     })\n      // })\n      //     .catch(\n      //         error => {\n      //             switch (error.message) {\n      //                 case \"Network Error\":\n      //                     this.setState({\n      //                         message: error.message\n      //                     })\n      //                     break\n      //                 default:\n      //                     this.setState({\n      //                         message: error.message\n      //                     })\n      //                     break\n      //             }\n      //         }\n      //     );\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit() {// var programId = this.state.programId;\n      // var programIdStr = \"\";\n      // for (var i = 0; i < programId.length; i++) {\n      //     programIdStr = programIdStr.concat(programId[i].value).concat(\",\");\n      // }\n      // console.log(\"programIdStr\", programIdStr);\n      // if (navigator.onLine) {\n      //     // var check = JsStoreFunction.checkIfProgramExists(\"'1_v1_uId_1','2_v1_uId_1'\");\n      //     // check.\n      //     //     then(function (e) {\n      //     //         console.log(\"in then\",e.length)\n      //     //     })\n      //     //     .catch(function (e) {\n      //     //         console.log('Some error has occured',e);\n      //     //     });\n      //     ProgramService.getProgramData((programIdStr.substring(0, programIdStr.length - 1)).toString())\n      //         .then(response => {\n      //             console.log(response.data)\n      //             var result = JsStoreFunction.saveProgram(response.data);\n      //             console.log(result);\n      //             // if(result==1){\n      //             //     alert(\"Data inserted successfully.\")\n      //             // }\n      //         })\n      //         .catch(\n      //             error => {\n      //                 switch (error.message) {\n      //                     case \"Network Error\":\n      //                         this.setState({\n      //                             message: error.message\n      //                         })\n      //                         break\n      //                     default:\n      //                         this.setState({\n      //                             message: error.response\n      //                         })\n      //                         break\n      //                 }\n      //             }\n      //         );\n      // } else {\n      //     alert(\"You must be online.\")\n      // }\n    }\n  }, {\n    key: \"importFile\",\n    value: function importFile() {\n      if (window.File && window.FileReader && window.FileList && window.Blob) {\n        if (document.querySelector('input[type=file]').files[0] == undefined) {\n          alert(\"Please select file\");\n        } else {\n          var file = document.querySelector('input[type=file]').files[0];\n          var fileName = file.name;\n          var fileExtenstion = fileName.split(\".\");\n\n          if (fileExtenstion[1] == \"zip\") {\n            var lan = 'en';\n            JSZip.loadAsync(file).then(function (zip) {\n              var i = 0;\n              var fileName = [];\n              var size = 0;\n              Object.keys(zip.files).forEach(function (filename) {\n                size++;\n              });\n              Object.keys(zip.files).forEach(function (filename) {\n                zip.files[filename].async('string').then(function (fileData) {\n                  i++;\n                  var programDataJson = JSON.parse(fileData);\n                  var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                  var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                  var programDataJsonDecrypted = JSON.parse(plaintext);\n                  console.log(\"programDatajson\", programDataJsonDecrypted.label);\n                  console.log(\"displayName\", (getLabelText(programDataJsonDecrypted.label), lan));\n                  var prgList = [];\n                  console.log(\"filename\", filename);\n                  prgList[i] = {\n                    value: filename,\n                    label: (getLabelText(programDataJsonDecrypted.label), lan) + \"~v\" + programDataJsonDecrypted.programVersion\n                  };\n\n                  if (i === size) {\n                    this.setState({\n                      programList: prgList\n                    });\n                    document.getElementById(\"programIdDiv\").style.display = \"block\";\n                    document.getElementById(\"formSubmitButton\").style.display = \"block\";\n                    document.getElementById(\"fileImportDiv\").style.display = \"none\";\n                    document.getElementById(\"fileImportButton\").style.display = \"none\";\n                  }\n                }.bind(this));\n              }.bind(this));\n            }.bind(this));\n          } else {\n            alert(\"Please select zip file\");\n          }\n        }\n      }\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"updateFieldData\",\n    value: function updateFieldData(value) {\n      console.log(\"Value\", value); // console.log(event.value)\n\n      this.setState({\n        programId: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const lan = 'en';\n      // const { programList } = this.state;\n      // let programs = programList.length > 0\n      //     && programList.map((item, i) => {\n      //         return (\n      //             <option key={i} value={item.programId}>{getLabelText(item.label, lan)}</option>\n      //         )\n      //     }, this);\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        render: function render(_ref) {\n          var errors = _ref.errors,\n              touched = _ref.touched,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur;\n          return React.createElement(Form, {\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, \"Download Program Data\")), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            id: \"fileImportDiv\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: \"3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"file-input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, \"File input\")), React.createElement(Col, {\n            xs: \"12\",\n            md: \"9\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, React.createElement(Input, {\n            type: \"file\",\n            id: \"file-input\",\n            name: \"file-input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }))), React.createElement(FormGroup, {\n            id: \"programIdDiv\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: \"3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, \"Select Program\")), React.createElement(Col, {\n            xs: \"12\",\n            md: \"9\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, React.createElement(Select, {\n            valid: !errors.programId,\n            invalid: touched.programId && !!errors.programId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.updateFieldData(e);\n            },\n            onBlur: handleBlur,\n            name: \"programId\",\n            id: \"programId\",\n            multi: true,\n            options: _this2.state.programList,\n            value: _this2.state.programId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }, errors.programId)))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            id: \"fileImportButton\",\n            onClick: function onClick() {\n              return _this2.importFile();\n            },\n            size: \"sm\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-dot-circle-o\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }), \"Import\"), React.createElement(Button, {\n            type: \"button\",\n            id: \"formSubmitButton\",\n            onClick: function onClick() {\n              return _this2.formSubmit();\n            },\n            size: \"sm\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-dot-circle-o\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }), \"Submit\"), React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-ban\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }), \" Reset\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DownloadProgram;\n}(Component);\n\nexport { DownloadProgram as default };","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/ImportProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","FormFeedback","Formik","Yup","ProgramService","getLabelText","JsStoreFunction","Select","SECRET_KEY","JSZip","CryptoJS","initialValues","programId","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","DownloadProgram","state","programList","formSubmit","bind","importFile","document","getElementById","style","display","window","File","FileReader","FileList","Blob","querySelector","files","undefined","alert","file","fileName","name","fileExtenstion","split","lan","loadAsync","then","zip","i","size","Object","keys","forEach","filename","async","fileData","programDataJson","JSON","parse","bytes","AES","decrypt","programData","plaintext","toString","enc","Utf8","programDataJsonDecrypted","console","log","label","prgList","value","programVersion","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","forms","length","focus","touched","handleChange","handleBlur","e","updateFieldData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n    , FormFeedback\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramService from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\"\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport CryptoJS from 'crypto-js';\n\nconst initialValues = {\n    programId: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programId: Yup.string()\n            .required('Please select program.')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\n\nexport default class DownloadProgram extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            programList: []\n        }\n        this.formSubmit = this.formSubmit.bind(this)\n        this.importFile = this.importFile.bind(this);\n    }\n\n    componentDidMount() {\n        document.getElementById(\"programIdDiv\").style.display = \"none\";\n        document.getElementById(\"formSubmitButton\").style.display = \"none\";\n        document.getElementById(\"fileImportDiv\").style.display = \"block\";\n        document.getElementById(\"fileImportButton\").style.display = \"block\";\n        // const lan = 'en'\n        // ProgramService.getProgramList().then(response => {\n        //     var json = response.data;\n        //     var prgList = [];\n        //     for (var i = 0; i < json.length; i++) {\n        //         prgList[i] = { value: json[i].programId, label: getLabelText(json[i].label, lan) }\n        //     }\n        //     this.setState({\n        //         programList: prgList\n        //     })\n        // })\n        //     .catch(\n        //         error => {\n        //             switch (error.message) {\n        //                 case \"Network Error\":\n        //                     this.setState({\n        //                         message: error.message\n        //                     })\n        //                     break\n        //                 default:\n        //                     this.setState({\n        //                         message: error.message\n        //                     })\n        //                     break\n        //             }\n        //         }\n        //     );\n    }\n\n    formSubmit() {\n        // var programId = this.state.programId;\n        // var programIdStr = \"\";\n        // for (var i = 0; i < programId.length; i++) {\n        //     programIdStr = programIdStr.concat(programId[i].value).concat(\",\");\n        // }\n        // console.log(\"programIdStr\", programIdStr);\n        // if (navigator.onLine) {\n        //     // var check = JsStoreFunction.checkIfProgramExists(\"'1_v1_uId_1','2_v1_uId_1'\");\n        //     // check.\n        //     //     then(function (e) {\n        //     //         console.log(\"in then\",e.length)\n        //     //     })\n        //     //     .catch(function (e) {\n        //     //         console.log('Some error has occured',e);\n        //     //     });\n\n        //     ProgramService.getProgramData((programIdStr.substring(0, programIdStr.length - 1)).toString())\n        //         .then(response => {\n        //             console.log(response.data)\n        //             var result = JsStoreFunction.saveProgram(response.data);\n        //             console.log(result);\n        //             // if(result==1){\n        //             //     alert(\"Data inserted successfully.\")\n        //             // }\n        //         })\n        //         .catch(\n        //             error => {\n        //                 switch (error.message) {\n        //                     case \"Network Error\":\n        //                         this.setState({\n        //                             message: error.message\n        //                         })\n        //                         break\n        //                     default:\n        //                         this.setState({\n        //                             message: error.response\n        //                         })\n        //                         break\n        //                 }\n        //             }\n        //         );\n\n        // } else {\n        //     alert(\"You must be online.\")\n        // }\n    }\n\n    importFile() {\n\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            if (document.querySelector('input[type=file]').files[0] == undefined) {\n                alert(`Please select file`);\n            } else {\n                var file = document.querySelector('input[type=file]').files[0];\n                var fileName = file.name;\n                var fileExtenstion = fileName.split(\".\");\n                if (fileExtenstion[1] == \"zip\") {\n                    const lan='en'\n                    JSZip.loadAsync(file).then(function (zip) {\n                        var i = 0;\n                        var fileName = []\n                        var size = 0;\n                        Object.keys(zip.files).forEach(function (filename) {\n                            size++;\n                        })\n                        Object.keys(zip.files).forEach(function (filename) {\n                            zip.files[filename].async('string').then(function (fileData) {\n                                i++;\n                                var programDataJson = JSON.parse(fileData);\n                                var bytes = CryptoJS.AES.decrypt(programDataJson.programData, SECRET_KEY);\n                                var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n                                var programDataJsonDecrypted = JSON.parse(plaintext);\n                                console.log(\"programDatajson\",programDataJsonDecrypted.label);\n                                console.log(\"displayName\",(getLabelText(programDataJsonDecrypted.label), lan));\n                                var prgList = [];\n                                console.log(\"filename\",filename);\n                                prgList[i] = {\n                                    value: filename, label: (getLabelText(programDataJsonDecrypted.label), lan)+ \"~v\" + programDataJsonDecrypted.programVersion \n                                }\n                                if (i === size) {\n                                    this.setState({\n                                        programList: prgList\n                                    })\n\n                                    document.getElementById(\"programIdDiv\").style.display = \"block\";\n                                    document.getElementById(\"formSubmitButton\").style.display = \"block\";\n                                    document.getElementById(\"fileImportDiv\").style.display = \"none\";\n                                    document.getElementById(\"fileImportButton\").style.display = \"none\";\n                                }\n                            }.bind(this))\n\n                        }.bind(this))\n\n                    }.bind(this))\n                } else {\n                    alert(\"Please select zip file\")\n                }\n            }\n\n        }\n\n    }\n\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true\n        }\n        )\n        this.validateForm(errors)\n    }\n\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    updateFieldData(value) {\n        console.log(\"Value\", value);\n        // console.log(event.value)\n        this.setState({ programId: value });\n    }\n\n    render() {\n        // const lan = 'en';\n        // const { programList } = this.state;\n        // let programs = programList.length > 0\n        //     && programList.map((item, i) => {\n        //         return (\n        //             <option key={i} value={item.programId}>{getLabelText(item.label, lan)}</option>\n        //         )\n        //     }, this);\n        return (\n            <>\n                <Col xs=\"12\" sm=\"8\">\n                    <Card>\n                        <Formik\n                            initialValues={initialValues}\n                            render={\n                                ({\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                }) => (\n                                        <Form noValidate name='simpleForm'>\n                                            <CardHeader>\n                                                <strong>Download Program Data</strong>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup id=\"fileImportDiv\">\n                                                    <Col md=\"3\">\n                                                        <Label htmlFor=\"file-input\">File input</Label>\n                                                    </Col>\n                                                    <Col xs=\"12\" md=\"9\">\n                                                        <Input type=\"file\" id=\"file-input\" name=\"file-input\" />\n                                                    </Col>\n                                                </FormGroup>\n                                                <FormGroup id=\"programIdDiv\">\n                                                    <Col md=\"3\">\n                                                        <Label htmlFor=\"select\">Select Program</Label>\n                                                    </Col>\n                                                    <Col xs=\"12\" md=\"9\">\n                                                        <Select\n                                                            valid={!errors.programId}\n                                                            invalid={touched.programId && !!errors.programId}\n                                                            onChange={(e) => { handleChange(e); this.updateFieldData(e) }}\n                                                            onBlur={handleBlur} name=\"programId\" id=\"programId\"\n                                                            multi\n                                                            options={this.state.programList}\n                                                            value={this.state.programId}\n                                                        />\n                                                        <FormFeedback>{errors.programId}</FormFeedback>\n                                                    </Col>\n\n                                                </FormGroup>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button type=\"button\" id=\"fileImportButton\" onClick={() => this.importFile()} size=\"sm\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i>Import</Button>\n                                                <Button type=\"button\" id=\"formSubmitButton\" onClick={() => this.formSubmit()} size=\"sm\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i>Submit</Button>\n                                                <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                                            </CardFooter>\n                                        </Form>\n                                    )} />\n                    </Card>\n                </Col>\n            </>\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}