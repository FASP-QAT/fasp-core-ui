{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/procurementAgent/EditProcurementAgentComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport i18n from '../../i18n';\nimport RealmService from \"../../api/RealmService\";\nimport ProcurementAgentService from \"../../api/ProcurementAgentService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nvar initialValues = {\n  procurementAgentName: \"\",\n  submittedToApprovedLeadTime: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    procurementAgentName: Yup.string().required(\"Please enter procurement agent name\"),\n    submittedToApprovedLeadTime: Yup.string().matches(/^[0-9]*$/, 'Only numbers allowed').required(\"Please enter submitted to approved lead time.\")\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar EditProcurementAgentComponent = /*#__PURE__*/function (_Component) {\n  _inherits(EditProcurementAgentComponent, _Component);\n\n  function EditProcurementAgentComponent(props) {\n    var _this;\n\n    _classCallCheck(this, EditProcurementAgentComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProcurementAgentComponent).call(this, props));\n    _this.state = {\n      realms: [],\n      procurementAgent: _this.props.location.state.procurementAgent,\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    _this.Capitalize = _this.Capitalize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditProcurementAgentComponent, [{\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      console.log(\"capitalize\");\n\n      if (str != null && str != \"\") {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var procurementAgent = this.state.procurementAgent;\n\n      if (event.target.name == \"realmId\") {\n        procurementAgent.realm.realmId = event.target.value;\n      }\n\n      if (event.target.name == \"procurementAgentCode\") {\n        procurementAgent.procurementAgentCode = event.target.value;\n      }\n\n      if (event.target.name == \"procurementAgentName\") {\n        procurementAgent.label.label_en = event.target.value;\n      }\n\n      if (event.target.name == \"submittedToApprovedLeadTime\") {\n        procurementAgent.submittedToApprovedLeadTime = event.target.value;\n      }\n\n      if (event.target.name == \"active\") {\n        procurementAgent.active = event.target.id === \"active2\" ? false : true;\n      }\n\n      this.setState({\n        procurementAgent: procurementAgent\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        procurementAgentName: true,\n        submittedToApprovedLeadTime: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('procurementAgentForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.message), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, i18n.t('static.procurementAgent.procurementagentedit')), ' '), React.createElement(Formik, {\n        initialValues: {\n          procurementAgentCode: this.state.procurementAgent.procurementAgentCode,\n          procurementAgentName: this.state.procurementAgent.label.label_en,\n          submittedToApprovedLeadTime: this.state.procurementAgent.submittedToApprovedLeadTime\n        },\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          console.log(\"this.state.procurementAgent---\", _this2.state.procurementAgent);\n          AuthenticationService.setupAxiosInterceptors();\n          ProcurementAgentService.updateProcurementAgent(_this2.state.procurementAgent).then(function (response) {\n            if (response.status == 200) {\n              _this2.props.history.push(\"/procurementAgent/listProcurementAgent/\".concat(response.data.messageCode));\n            } else {\n              _this2.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            if (error.message === \"Network Error\") {\n              _this2.setState({\n                message: error.message\n              });\n            } else {\n              switch (error.response ? error.response.status : \"\") {\n                case 500:\n                case 401:\n                case 404:\n                case 406:\n                case 412:\n                  _this2.setState({\n                    message: error.response.data.messageCode\n                  });\n\n                  break;\n\n                default:\n                  _this2.setState({\n                    message: 'static.unkownError'\n                  });\n\n                  console.log(\"Error code unkown\");\n                  break;\n              }\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"procurementAgentForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"realmId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, i18n.t('static.realm.realmname')), React.createElement(Input, {\n            type: \"text\",\n            name: \"realmId\",\n            id: \"realmId\",\n            bsSize: \"sm\",\n            readOnly: true,\n            value: _this2.state.procurementAgent.realm.label.label_en,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          })), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"procurementAgentCode\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentcode')), React.createElement(Input, {\n            type: \"text\",\n            bsSize: \"sm\",\n            name: \"procurementAgentCode\",\n            id: \"procurementAgentCode\",\n            readOnly: true,\n            value: _this2.Capitalize(_this2.state.procurementAgent.procurementAgentCode),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, errors.procurementAgentCode)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"procurementAgentName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentname')), React.createElement(Input, {\n            type: \"text\",\n            bsSize: \"sm\",\n            name: \"procurementAgentName\",\n            id: \"procurementAgentName\",\n            valid: !errors.procurementAgentName,\n            invalid: touched.procurementAgentName && !!errors.procurementAgentName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this2.Capitalize(_this2.state.procurementAgent.label.label_en),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, errors.procurementAgentName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"submittedToApprovedLeadTime\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentsubmittoapprovetime')), React.createElement(Input, {\n            type: \"number\",\n            bsSize: \"sm\",\n            name: \"submittedToApprovedLeadTime\",\n            id: \"submittedToApprovedLeadTime\",\n            valid: !errors.submittedToApprovedLeadTime,\n            invalid: touched.submittedToApprovedLeadTime && !!errors.submittedToApprovedLeadTime,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            min: 1,\n            value: _this2.state.procurementAgent.submittedToApprovedLeadTime,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, errors.submittedToApprovedLeadTime)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, i18n.t('static.common.status'), \"  \"), React.createElement(FormGroup, {\n            check: true,\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(Input, {\n            className: \"form-check-input\",\n            type: \"radio\",\n            id: \"active1\",\n            name: \"active\",\n            value: true,\n            checked: _this2.state.procurementAgent.active === true,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }), React.createElement(Label, {\n            className: \"form-check-label\",\n            check: true,\n            htmlFor: \"inline-radio1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, i18n.t('static.common.active'))), React.createElement(FormGroup, {\n            check: true,\n            inline: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(Input, {\n            className: \"form-check-input\",\n            type: \"radio\",\n            id: \"active2\",\n            name: \"active\",\n            value: false,\n            checked: _this2.state.procurementAgent.active === false,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.dataChange(e);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }), React.createElement(Label, {\n            className: \"form-check-label\",\n            check: true,\n            htmlFor: \"inline-radio2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, i18n.t('static.common.disabled'))))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this2.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }), i18n.t('static.common.update')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/procurementAgent/listProcurementAgent/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return EditProcurementAgentComponent;\n}(Component);\n\nexport default EditProcurementAgentComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/procurementAgent/EditProcurementAgentComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","i18n","RealmService","ProcurementAgentService","AuthenticationService","initialValues","procurementAgentName","submittedToApprovedLeadTime","validationSchema","values","object","shape","string","required","matches","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","EditProcurementAgentComponent","props","state","realms","procurementAgent","location","message","cancelClicked","bind","dataChange","Capitalize","str","console","log","charAt","toUpperCase","slice","event","target","name","realm","realmId","value","procurementAgentCode","label","label_en","active","id","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","flexBasis","t","setSubmitting","setErrors","setupAxiosInterceptors","updateProcurementAgent","then","response","status","history","push","data","messageCode","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,YAAzD,EAAuEC,QAAvE,EAAiFC,IAAjF,EAAuFC,SAAvF,EAAkGC,KAAlG,EAAyGC,KAAzG,QAAsH,YAAtH;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,8CAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,oBAAoB,EAAE,EADJ;AAElBC,EAAAA,2BAA2B,EAAE;AAFX,CAAtB;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,MAAV,EAAkB;AACvC,SAAOT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACtBL,IAAAA,oBAAoB,EAAEN,GAAG,CAACY,MAAJ,GACjBC,QADiB,CACR,qCADQ,CADA;AAGtBN,IAAAA,2BAA2B,EAAEP,GAAG,CAACY,MAAJ,GACxBE,OADwB,CAChB,UADgB,EACJ,sBADI,EAExBD,QAFwB,CAEf,+CAFe;AAHP,GAAnB,CAAP;AAOH,CARD;;AAUA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,mBAAD,EAAyB;AACtC,SAAO,UAACP,MAAD,EAAY;AACf,QAAMD,gBAAgB,GAAGQ,mBAAmB,CAACP,MAAD,CAA5C;;AACA,QAAI;AACAD,MAAAA,gBAAgB,CAACS,YAAjB,CAA8BR,MAA9B,EAAsC;AAAES,QAAAA,UAAU,EAAE;AAAd,OAAtC;AACA,aAAO,EAAP;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,aAAOC,4BAA4B,CAACD,KAAD,CAAnC;AACH;AACJ,GARD;AASH,CAVD;;AAYA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,eAAD,EAAqB;AACtD,MAAMC,WAAW,GAAG,CAApB;AACA,SAAOD,eAAe,CAACE,KAAhB,CAAsBC,MAAtB,CAA6B,UAACC,MAAD,EAASN,KAAT,EAAmB;AACnD,6BACOM,MADP,sBAEKN,KAAK,CAACO,IAFX,EAEkBP,KAAK,CAACM,MAAN,CAAaH,WAAb,CAFlB;AAIH,GALM,EAKJ,EALI,CAAP;AAMH,CARD;;IASMK,6B;;;AACF,yCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,gBAAgB,EAAE,MAAKH,KAAL,CAAWI,QAAX,CAAoBH,KAApB,CAA0BE,gBAFnC;AAGTE,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AATe;AAUlB;;;;+BAEUG,G,EAAK;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAIF,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,EAA1B,EAA8B;AAC1B,eAAOA,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BJ,GAAG,CAACK,KAAJ,CAAU,CAAV,CAArC;AACH,OAFD,MAEO;AACH,eAAO,EAAP;AACH;AACJ;;;+BAGUC,K,EAAO;AAAA,UACRb,gBADQ,GACa,KAAKF,KADlB,CACRE,gBADQ;;AAEd,UAAIa,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,SAAzB,EAAoC;AAChCf,QAAAA,gBAAgB,CAACgB,KAAjB,CAAuBC,OAAvB,GAAiCJ,KAAK,CAACC,MAAN,CAAaI,KAA9C;AACH;;AACD,UAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,sBAAzB,EAAiD;AAC7Cf,QAAAA,gBAAgB,CAACmB,oBAAjB,GAAwCN,KAAK,CAACC,MAAN,CAAaI,KAArD;AACH;;AACD,UAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,sBAAzB,EAAiD;AAC7Cf,QAAAA,gBAAgB,CAACoB,KAAjB,CAAuBC,QAAvB,GAAkCR,KAAK,CAACC,MAAN,CAAaI,KAA/C;AACH;;AACD,UAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,6BAAzB,EAAwD;AACpDf,QAAAA,gBAAgB,CAACxB,2BAAjB,GAA+CqC,KAAK,CAACC,MAAN,CAAaI,KAA5D;AACH;;AACD,UAAIL,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,QAAzB,EAAmC;AAC/Bf,QAAAA,gBAAgB,CAACsB,MAAjB,GAA0BT,KAAK,CAACC,MAAN,CAAaS,EAAb,KAAoB,SAApB,GAAgC,KAAhC,GAAwC,IAAlE;AACH;;AAGD,WAAKC,QAAL,CAAc;AACVxB,QAAAA,gBAAgB,EAAhBA;AADU,OAAd,EAGI,YAAM,CAAG,CAHb;AAIH;;;6BAEQyB,U,EAAY/B,M,EAAQ;AACzB+B,MAAAA,UAAU,CAAC;AACPlD,QAAAA,oBAAoB,EAAE,IADf;AAEPC,QAAAA,2BAA2B,EAAE;AAFtB,OAAD,CAAV;AAKA,WAAKkD,YAAL,CAAkBhC,MAAlB;AACH;;;iCACYA,M,EAAQ;AACjB,WAAKiC,cAAL,CAAoB,sBAApB,EAA4C,UAACC,SAAD,EAAe;AACvD,eAAOC,OAAO,CAACnC,MAAM,CAACkC,SAAD,CAAP,CAAd;AACH,OAFD;AAGH;;;mCACcE,Q,EAAUC,Q,EAAU;AAC/B,UAAMC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAeJ,QAAf,CAAb;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAIJ,QAAQ,CAACC,IAAI,CAACG,CAAD,CAAJ,CAAQpB,IAAT,CAAZ,EAA4B;AACxBiB,UAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,KAAR;AACA;AACH;AACJ;AACJ;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKvC,KAAL,CAAWI,OAAhB,CADJ,EAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,KAAK,EAAE;AAAEoC,UAAAA,SAAS,EAAE;AAAb,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASpE,IAAI,CAACqE,CAAL,CAAO,8CAAP,CAAT,CADjC,EAC2G,GAD3G,CAFJ,EAKI,oBAAC,MAAD;AACI,QAAA,aAAa,EACT;AACIpB,UAAAA,oBAAoB,EAAE,KAAKrB,KAAL,CAAWE,gBAAX,CAA4BmB,oBADtD;AAEI5C,UAAAA,oBAAoB,EAAE,KAAKuB,KAAL,CAAWE,gBAAX,CAA4BoB,KAA5B,CAAkCC,QAF5D;AAGI7C,UAAAA,2BAA2B,EAAE,KAAKsB,KAAL,CAAWE,gBAAX,CAA4BxB;AAH7D,SAFR;AAOI,QAAA,QAAQ,EAAEQ,QAAQ,CAACP,gBAAD,CAPtB;AAQI,QAAA,QAAQ,EAAE,kBAACC,MAAD,QAA0C;AAAA,cAA/B8D,aAA+B,QAA/BA,aAA+B;AAAA,cAAhBC,SAAgB,QAAhBA,SAAgB;AAChDjC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,MAAI,CAACX,KAAL,CAAWE,gBAAzD;AACA3B,UAAAA,qBAAqB,CAACqE,sBAAtB;AACAtE,UAAAA,uBAAuB,CAACuE,sBAAxB,CAA+C,MAAI,CAAC7C,KAAL,CAAWE,gBAA1D,EACK4C,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,gBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxB,cAAA,MAAI,CAACjD,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,kDAAkEH,QAAQ,CAACI,IAAT,CAAcC,WAAhF;AACH,aAFD,MAEO;AACH,cAAA,MAAI,CAAC1B,QAAL,CAAc;AACVtB,gBAAAA,OAAO,EAAE2C,QAAQ,CAACI,IAAT,CAAc/C;AADb,eAAd;AAGH;AACJ,WATL,EAUKiD,KAVL,CAWQ,UAAA/D,KAAK,EAAI;AACL,gBAAIA,KAAK,CAACc,OAAN,KAAkB,eAAtB,EAAuC;AACnC,cAAA,MAAI,CAACsB,QAAL,CAAc;AAAEtB,gBAAAA,OAAO,EAAEd,KAAK,CAACc;AAAjB,eAAd;AACH,aAFD,MAEO;AACH,sBAAQd,KAAK,CAACyD,QAAN,GAAiBzD,KAAK,CAACyD,QAAN,CAAeC,MAAhC,GAAyC,EAAjD;AACI,qBAAK,GAAL;AACA,qBAAK,GAAL;AACA,qBAAK,GAAL;AACA,qBAAK,GAAL;AACA,qBAAK,GAAL;AACI,kBAAA,MAAI,CAACtB,QAAL,CAAc;AAAEtB,oBAAAA,OAAO,EAAEd,KAAK,CAACyD,QAAN,CAAeI,IAAf,CAAoBC;AAA/B,mBAAd;;AACA;;AACJ;AACI,kBAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEtB,oBAAAA,OAAO,EAAE;AAAX,mBAAd;;AACAM,kBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AAXR;AAaH;AACJ,WA7BT;AA+BH,SA1CL;AA2CI,QAAA,MAAM,EACF;AAAA,cACI/B,MADJ,SACIA,MADJ;AAAA,cAEIgB,MAFJ,SAEIA,MAFJ;AAAA,cAGI0D,OAHJ,SAGIA,OAHJ;AAAA,cAIIC,YAJJ,SAIIA,YAJJ;AAAA,cAKIC,UALJ,SAKIA,UALJ;AAAA,cAMIC,YANJ,SAMIA,YANJ;AAAA,cAOIC,YAPJ,SAOIA,YAPJ;AAAA,cAQIC,OARJ,SAQIA,OARJ;AAAA,cASIhC,UATJ,SASIA,UATJ;AAAA,iBAWQ,oBAAC,IAAD;AAAM,YAAA,QAAQ,EAAE8B,YAAhB;AAA8B,YAAA,UAAU,MAAxC;AAAyC,YAAA,IAAI,EAAC,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BrF,IAAI,CAACqE,CAAL,CAAO,wBAAP,CAA1B,CADJ,EAEI,oBAAC,KAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,EAAE,EAAC,SAHP;AAII,YAAA,MAAM,EAAC,IAJX;AAKI,YAAA,QAAQ,EAAE,IALd;AAMI,YAAA,KAAK,EAAE,MAAI,CAACzC,KAAL,CAAWE,gBAAX,CAA4BgB,KAA5B,CAAkCI,KAAlC,CAAwCC,QANnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,EAaI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmCnD,IAAI,CAACqE,CAAL,CAAO,8CAAP,CAAnC,CADJ,EAEI,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AACI,YAAA,MAAM,EAAC,IADX;AAEI,YAAA,IAAI,EAAC,sBAFT;AAGI,YAAA,EAAE,EAAC,sBAHP;AAII,YAAA,QAAQ,EAAE,IAJd;AAKI,YAAA,KAAK,EAAE,MAAI,CAACjC,UAAL,CAAgB,MAAI,CAACR,KAAL,CAAWE,gBAAX,CAA4BmB,oBAA5C,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EASI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAezB,MAAM,CAACyB,oBAAtB,CATJ,CAbJ,EAwBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmCjD,IAAI,CAACqE,CAAL,CAAO,8CAAP,CAAnC,CADJ,EAEI,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AACI,YAAA,MAAM,EAAC,IADX;AAEI,YAAA,IAAI,EAAC,sBAFT;AAGI,YAAA,EAAE,EAAC,sBAHP;AAII,YAAA,KAAK,EAAE,CAAC7C,MAAM,CAACnB,oBAJnB;AAKI,YAAA,OAAO,EAAE6E,OAAO,CAAC7E,oBAAR,IAAgC,CAAC,CAACmB,MAAM,CAACnB,oBALtD;AAMI,YAAA,QAAQ,EAAE,kBAACmF,CAAD,EAAO;AAAEL,cAAAA,YAAY,CAACK,CAAD,CAAZ;;AAAiB,cAAA,MAAI,CAACrD,UAAL,CAAgBqD,CAAhB;AAAoB,aAN5D;AAOI,YAAA,MAAM,EAAEJ,UAPZ;AAQI,YAAA,QAAQ,MARZ;AASI,YAAA,KAAK,EAAE,MAAI,CAAChD,UAAL,CAAgB,MAAI,CAACR,KAAL,CAAWE,gBAAX,CAA4BoB,KAA5B,CAAkCC,QAAlD,CATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAaI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAe3B,MAAM,CAACnB,oBAAtB,CAbJ,CAxBJ,EAuCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAC,6BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0CL,IAAI,CAACqE,CAAL,CAAO,6DAAP,CAA1C,CADJ,EAEI,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AACI,YAAA,MAAM,EAAC,IADX;AAEI,YAAA,IAAI,EAAC,6BAFT;AAGI,YAAA,EAAE,EAAC,6BAHP;AAII,YAAA,KAAK,EAAE,CAAC7C,MAAM,CAAClB,2BAJnB;AAKI,YAAA,OAAO,EAAE4E,OAAO,CAAC5E,2BAAR,IAAuC,CAAC,CAACkB,MAAM,CAAClB,2BAL7D;AAMI,YAAA,QAAQ,EAAE,kBAACkF,CAAD,EAAO;AAAEL,cAAAA,YAAY,CAACK,CAAD,CAAZ;;AAAiB,cAAA,MAAI,CAACrD,UAAL,CAAgBqD,CAAhB;AAAoB,aAN5D;AAOI,YAAA,MAAM,EAAEJ,UAPZ;AAQI,YAAA,QAAQ,MARZ;AASI,YAAA,GAAG,EAAE,CATT;AAUI,YAAA,KAAK,EAAE,MAAI,CAACxD,KAAL,CAAWE,gBAAX,CAA4BxB,2BAVvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAekB,MAAM,CAAClB,2BAAtB,CAdJ,CAvCJ,EAuDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQN,IAAI,CAACqE,CAAL,CAAO,sBAAP,CAAR,OADJ,EAEI,oBAAC,SAAD;AAAW,YAAA,KAAK,MAAhB;AAAiB,YAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AACI,YAAA,SAAS,EAAC,kBADd;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,EAAE,EAAC,SAHP;AAII,YAAA,IAAI,EAAC,QAJT;AAKI,YAAA,KAAK,EAAE,IALX;AAMI,YAAA,OAAO,EAAE,MAAI,CAACzC,KAAL,CAAWE,gBAAX,CAA4BsB,MAA5B,KAAuC,IANpD;AAOI,YAAA,QAAQ,EAAE,kBAACoC,CAAD,EAAO;AAAEL,cAAAA,YAAY,CAACK,CAAD,CAAZ;;AAAiB,cAAA,MAAI,CAACrD,UAAL,CAAgBqD,CAAhB;AAAoB,aAP5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAUI,oBAAC,KAAD;AACI,YAAA,SAAS,EAAC,kBADd;AAEI,YAAA,KAAK,MAFT;AAEU,YAAA,OAAO,EAAC,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGKxF,IAAI,CAACqE,CAAL,CAAO,sBAAP,CAHL,CAVJ,CAFJ,EAkBI,oBAAC,SAAD;AAAW,YAAA,KAAK,MAAhB;AAAiB,YAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AACI,YAAA,SAAS,EAAC,kBADd;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,EAAE,EAAC,SAHP;AAII,YAAA,IAAI,EAAC,QAJT;AAKI,YAAA,KAAK,EAAE,KALX;AAMI,YAAA,OAAO,EAAE,MAAI,CAACzC,KAAL,CAAWE,gBAAX,CAA4BsB,MAA5B,KAAuC,KANpD;AAOI,YAAA,QAAQ,EAAE,kBAACoC,CAAD,EAAO;AAAEL,cAAAA,YAAY,CAACK,CAAD,CAAZ;;AAAiB,cAAA,MAAI,CAACrD,UAAL,CAAgBqD,CAAhB;AAAoB,aAP5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAUI,oBAAC,KAAD;AACI,YAAA,SAAS,EAAC,kBADd;AAEI,YAAA,KAAK,MAFT;AAEU,YAAA,OAAO,EAAC,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGKxF,IAAI,CAACqE,CAAL,CAAO,wBAAP,CAHL,CAVJ,CAlBJ,CAvDJ,CADJ,EA4FI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC,IAA3B;AAAgC,YAAA,KAAK,EAAC,QAAtC;AAA+C,YAAA,SAAS,EAAC,kBAAzD;AAA4E,YAAA,OAAO,EAAE,MAAI,CAACpC,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyG;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzG,OAA0IjC,IAAI,CAACqE,CAAL,CAAO,sBAAP,CAA1I,CADJ,EAEI,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,IAAI,EAAC,IAA3B;AAAgC,YAAA,KAAK,EAAC,SAAtC;AAAgD,YAAA,SAAS,EAAC,kBAA1D;AAA6E,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACoB,QAAL,CAAclC,UAAd,EAA0B/B,MAA1B,CAAN;AAAA,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA+H;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/H,EAA+JxB,IAAI,CAACqE,CAAL,CAAO,sBAAP,CAA/J,CAFJ,SADJ,CA5FJ,CAXR;AAAA,SA5CR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADJ,CAFJ,CADJ;AA6KH;;;oCACe;AACZ,WAAK1C,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,CAAwB,4CAA4C,iBAApE;AACH;;;;EAxPuC7F,S;;AA2P5C,eAAeyC,6BAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\nimport i18n from '../../i18n';\nimport RealmService from \"../../api/RealmService\";\nimport ProcurementAgentService from \"../../api/ProcurementAgentService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nconst initialValues = {\n    procurementAgentName: \"\",\n    submittedToApprovedLeadTime: \"\"\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        procurementAgentName: Yup.string()\n            .required(\"Please enter procurement agent name\"),\n        submittedToApprovedLeadTime: Yup.string()\n            .matches(/^[0-9]*$/, 'Only numbers allowed')\n            .required(\"Please enter submitted to approved lead time.\")\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\nclass EditProcurementAgentComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            realms: [],\n            procurementAgent: this.props.location.state.procurementAgent,\n            message: ''\n        }\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        this.Capitalize = this.Capitalize.bind(this);\n    }\n\n    Capitalize(str) {\n        console.log(\"capitalize\");\n        if (str != null && str != \"\") {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        } else {\n            return \"\";\n        }\n    }\n\n\n    dataChange(event) {\n        let { procurementAgent } = this.state;\n        if (event.target.name == \"realmId\") {\n            procurementAgent.realm.realmId = event.target.value;\n        }\n        if (event.target.name == \"procurementAgentCode\") {\n            procurementAgent.procurementAgentCode = event.target.value;\n        }\n        if (event.target.name == \"procurementAgentName\") {\n            procurementAgent.label.label_en = event.target.value;\n        }\n        if (event.target.name == \"submittedToApprovedLeadTime\") {\n            procurementAgent.submittedToApprovedLeadTime = event.target.value;\n        }\n        if (event.target.name == \"active\") {\n            procurementAgent.active = event.target.id === \"active2\" ? false : true;\n        }\n\n\n        this.setState({\n            procurementAgent\n        },\n            () => { });\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            procurementAgentName: true,\n            submittedToApprovedLeadTime: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('procurementAgentForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <h5>{this.state.message}</h5>\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.procurementAgent.procurementagentedit')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={\n                                    {\n                                        procurementAgentCode: this.state.procurementAgent.procurementAgentCode,\n                                        procurementAgentName: this.state.procurementAgent.label.label_en,\n                                        submittedToApprovedLeadTime: this.state.procurementAgent.submittedToApprovedLeadTime\n                                    }}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    console.log(\"this.state.procurementAgent---\", this.state.procurementAgent);\n                                    AuthenticationService.setupAxiosInterceptors();\n                                    ProcurementAgentService.updateProcurementAgent(this.state.procurementAgent)\n                                        .then(response => {\n                                            if (response.status == 200) {\n                                                this.props.history.push(`/procurementAgent/listProcurementAgent/${response.data.messageCode}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.message\n                                                })\n                                            }\n                                        })\n                                        .catch(\n                                            error => {\n                                                if (error.message === \"Network Error\") {\n                                                    this.setState({ message: error.message });\n                                                } else {\n                                                    switch (error.response ? error.response.status : \"\") {\n                                                        case 500:\n                                                        case 401:\n                                                        case 404:\n                                                        case 406:\n                                                        case 412:\n                                                            this.setState({ message: error.response.data.messageCode });\n                                                            break;\n                                                        default:\n                                                            this.setState({ message: 'static.unkownError' });\n                                                            console.log(\"Error code unkown\");\n                                                            break;\n                                                    }\n                                                }\n                                            }\n                                        );\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='procurementAgentForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"realmId\">{i18n.t('static.realm.realmname')}</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"realmId\"\n                                                            id=\"realmId\"\n                                                            bsSize=\"sm\"\n                                                            readOnly={true}\n                                                            value={this.state.procurementAgent.realm.label.label_en}\n                                                        >\n                                                        </Input>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"procurementAgentCode\">{i18n.t('static.procurementagent.procurementagentcode')}</Label>\n                                                        <Input type=\"text\"\n                                                            bsSize=\"sm\"\n                                                            name=\"procurementAgentCode\"\n                                                            id=\"procurementAgentCode\"\n                                                            readOnly={true}\n                                                            value={this.Capitalize(this.state.procurementAgent.procurementAgentCode)}\n                                                        />\n                                                        <FormFeedback>{errors.procurementAgentCode}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"procurementAgentName\">{i18n.t('static.procurementagent.procurementagentname')}</Label>\n                                                        <Input type=\"text\"\n                                                            bsSize=\"sm\"\n                                                            name=\"procurementAgentName\"\n                                                            id=\"procurementAgentName\"\n                                                            valid={!errors.procurementAgentName}\n                                                            invalid={touched.procurementAgentName && !!errors.procurementAgentName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.Capitalize(this.state.procurementAgent.label.label_en)}\n                                                        />\n                                                        <FormFeedback>{errors.procurementAgentName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"submittedToApprovedLeadTime\">{i18n.t('static.procurementagent.procurementagentsubmittoapprovetime')}</Label>\n                                                        <Input type=\"number\"\n                                                            bsSize=\"sm\"\n                                                            name=\"submittedToApprovedLeadTime\"\n                                                            id=\"submittedToApprovedLeadTime\"\n                                                            valid={!errors.submittedToApprovedLeadTime}\n                                                            invalid={touched.submittedToApprovedLeadTime && !!errors.submittedToApprovedLeadTime}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            min={1}\n                                                            value={this.state.procurementAgent.submittedToApprovedLeadTime}\n                                                        />\n                                                        <FormFeedback>{errors.submittedToApprovedLeadTime}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label>{i18n.t('static.common.status')}  </Label>\n                                                        <FormGroup check inline>\n                                                            <Input\n                                                                className=\"form-check-input\"\n                                                                type=\"radio\"\n                                                                id=\"active1\"\n                                                                name=\"active\"\n                                                                value={true}\n                                                                checked={this.state.procurementAgent.active === true}\n                                                                onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            />\n                                                            <Label\n                                                                className=\"form-check-label\"\n                                                                check htmlFor=\"inline-radio1\">\n                                                                {i18n.t('static.common.active')}\n                                                            </Label>\n                                                        </FormGroup>\n                                                        <FormGroup check inline>\n                                                            <Input\n                                                                className=\"form-check-input\"\n                                                                type=\"radio\"\n                                                                id=\"active2\"\n                                                                name=\"active\"\n                                                                value={false}\n                                                                checked={this.state.procurementAgent.active === false}\n                                                                onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            />\n                                                            <Label\n                                                                className=\"form-check-label\"\n                                                                check htmlFor=\"inline-radio2\">\n                                                                {i18n.t('static.common.disabled')}\n                                                            </Label>\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)}><i className=\"fa fa-check\"></i>{i18n.t('static.common.update')}</Button>\n                                                        &nbsp;\n                                                    </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n\n                                        )} />\n\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/procurementAgent/listProcurementAgent/` + \"Action Canceled\")\n    }\n}\n\nexport default EditProcurementAgentComponent;\n"]},"metadata":{},"sourceType":"module"}