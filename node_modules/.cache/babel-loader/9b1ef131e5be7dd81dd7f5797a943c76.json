{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/procurementAgent/AddProcurementAgentComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport RealmService from \"../../api/RealmService\";\nimport ProcurementAgentService from \"../../api/ProcurementAgentService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n';\nvar initialValues = {\n  realmId: [],\n  procurementAgentCode: \"\",\n  procurementAgentName: \"\",\n  submittedToApprovedLeadTime: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    realmId: Yup.string().required(i18n.t('static.procurementagent.realmtext')),\n    procurementAgentCode: Yup.string().required(i18n.t('static.procurementagent.codetext')),\n    procurementAgentName: Yup.string().required(i18n.t('static.procurementAgent.procurementagentnametext')),\n    submittedToApprovedLeadTime: Yup.string().matches(/^[0-9]*$/, 'Only numbers allowed').required(\"Please enter submitted to approved lead time\")\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddProcurementAgentComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AddProcurementAgentComponent, _Component);\n\n  function AddProcurementAgentComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddProcurementAgentComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProcurementAgentComponent).call(this, props));\n    _this.state = {\n      realms: [],\n      procurementAgent: {\n        realm: {},\n        label: {}\n      },\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    _this.Capitalize = _this.Capitalize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddProcurementAgentComponent, [{\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      if (str != null && str != \"\") {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var procurementAgent = this.state.procurementAgent;\n\n      if (event.target.name == \"realmId\") {\n        procurementAgent.realm.realmId = event.target.value;\n      }\n\n      if (event.target.name == \"procurementAgentCode\") {\n        procurementAgent.procurementAgentCode = event.target.value;\n      }\n\n      if (event.target.name == \"procurementAgentName\") {\n        procurementAgent.label.label_en = event.target.value;\n      }\n\n      if (event.target.name == \"submittedToApprovedLeadTime\") {\n        procurementAgent.submittedToApprovedLeadTime = event.target.value;\n      }\n\n      this.setState({\n        procurementAgent: procurementAgent\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        realmId: true,\n        procurementAgentCode: true,\n        procurementAgentName: true,\n        submittedToApprovedLeadTime: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('procurementAgentForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RealmService.getRealmListAll().then(function (response) {\n        _this2.setState({\n          realms: response.data.data\n        });\n      }).catch(function (error) {\n        if (error.message === \"Network Error\") {\n          _this2.setState({\n            message: error.message\n          });\n        } else {\n          switch (error.response ? error.response.status : \"\") {\n            case 500:\n            case 401:\n            case 404:\n            case 406:\n            case 412:\n              _this2.setState({\n                message: error.response.data.messageCode\n              });\n\n              break;\n\n            default:\n              _this2.setState({\n                message: 'static.unkownError'\n              });\n\n              console.log(\"Error code unkown\");\n              break;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var realms = this.state.realms;\n      var realmList = realms.length > 0 && realms.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.realmId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, i18n.t(this.state.message)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, i18n.t('static.procurementagent.procurementagentadd')), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          console.log(\"this.state.procurementAgent---\", _this3.state.procurementAgent);\n          ProcurementAgentService.addProcurementAgent(_this3.state.procurementAgent).then(function (response) {\n            if (response.status == 200) {\n              _this3.props.history.push(\"/procurementAgent/listProcurementAgent/\".concat(response.data.messageCode));\n            } else {\n              _this3.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            if (error.message === \"Network Error\") {\n              _this3.setState({\n                message: error.message\n              });\n            } else {\n              switch (error.response ? error.response.status : \"\") {\n                case 500:\n                case 401:\n                case 404:\n                case 406:\n                case 412:\n                  _this3.setState({\n                    message: error.response.data.messageCode\n                  });\n\n                  break;\n\n                default:\n                  _this3.setState({\n                    message: 'static.unkownError'\n                  });\n\n                  console.log(\"Error code unkown\");\n                  break;\n              }\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"procurementAgentForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"realmId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, i18n.t('static.realm.realmname')), React.createElement(Input, {\n            type: \"select\",\n            bsSize: \"sm\",\n            name: \"realmId\",\n            id: \"realmId\",\n            valid: !errors.realmId,\n            invalid: touched.realmId && !!errors.realmId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, i18n.t('static.common.select')), realmList), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }, errors.realmId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"procurementAgentCode\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentcode')), React.createElement(Input, {\n            type: \"text\",\n            bsSize: \"sm\",\n            name: \"procurementAgentCode\",\n            id: \"procurementAgentCode\",\n            valid: !errors.procurementAgentCode,\n            invalid: touched.procurementAgentCode && !!errors.procurementAgentCode,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            maxLength: 6,\n            value: _this3.Capitalize(_this3.state.procurementAgent.procurementAgentCode),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }, errors.procurementAgentCode)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"procurementAgentName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentname')), React.createElement(Input, {\n            type: \"text\",\n            bsSize: \"sm\",\n            name: \"procurementAgentName\",\n            id: \"procurementAgentName\",\n            valid: !errors.procurementAgentName,\n            invalid: touched.procurementAgentName && !!errors.procurementAgentName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.Capitalize(_this3.state.procurementAgent.label.label_en),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, errors.procurementAgentName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"submittedToApprovedLeadTime\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279\n            },\n            __self: this\n          }, i18n.t('static.procurementagent.procurementagentsubmittoapprovetime')), React.createElement(Input, {\n            type: \"number\",\n            bsSize: \"sm\",\n            name: \"submittedToApprovedLeadTime\",\n            id: \"submittedToApprovedLeadTime\",\n            valid: !errors.submittedToApprovedLeadTime,\n            invalid: touched.submittedToApprovedLeadTime && !!errors.submittedToApprovedLeadTime,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            min: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, errors.submittedToApprovedLeadTime))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this3.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this3.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/procurementAgent/listProcurementAgent/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return AddProcurementAgentComponent;\n}(Component);\n\nexport default AddProcurementAgentComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/procurementAgent/AddProcurementAgentComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","RealmService","ProcurementAgentService","AuthenticationService","i18n","initialValues","realmId","procurementAgentCode","procurementAgentName","submittedToApprovedLeadTime","validationSchema","values","object","shape","string","required","t","matches","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddProcurementAgentComponent","props","state","realms","procurementAgent","realm","label","message","cancelClicked","bind","dataChange","Capitalize","str","charAt","toUpperCase","slice","event","target","name","value","label_en","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","getRealmListAll","then","response","data","catch","status","messageCode","console","log","realmList","map","item","flexBasis","setSubmitting","setErrors","addProcurementAgent","history","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\n\nimport RealmService from \"../../api/RealmService\";\nimport ProcurementAgentService from \"../../api/ProcurementAgentService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport i18n from '../../i18n';\nconst initialValues = {\n    realmId: [],\n    procurementAgentCode: \"\",\n    procurementAgentName: \"\",\n    submittedToApprovedLeadTime: \"\"\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        realmId: Yup.string()\n            .required(i18n.t('static.procurementagent.realmtext')),\n        procurementAgentCode: Yup.string()\n            .required(i18n.t('static.procurementagent.codetext')),\n        procurementAgentName: Yup.string()\n            .required(i18n.t('static.procurementAgent.procurementagentnametext')),\n        submittedToApprovedLeadTime: Yup.string()\n            .matches(/^[0-9]*$/, 'Only numbers allowed')\n            .required(\"Please enter submitted to approved lead time\")\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\nclass AddProcurementAgentComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            realms: [],\n            procurementAgent: {\n                realm: {\n                },\n                label: {\n\n                }\n            },\n            message: ''\n        }\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        this.Capitalize = this.Capitalize.bind(this);\n    }\n\n    Capitalize(str) {\n        if (str != null && str != \"\") {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        } else {\n            return \"\";\n        }\n    }\n\n\n    dataChange(event) {\n        let { procurementAgent } = this.state;\n        if (event.target.name == \"realmId\") {\n            procurementAgent.realm.realmId = event.target.value;\n        }\n        if (event.target.name == \"procurementAgentCode\") {\n            procurementAgent.procurementAgentCode = event.target.value;\n        }\n        if (event.target.name == \"procurementAgentName\") {\n            procurementAgent.label.label_en = event.target.value;\n        }\n        if (event.target.name == \"submittedToApprovedLeadTime\") {\n            procurementAgent.submittedToApprovedLeadTime = event.target.value;\n        }\n\n\n        this.setState({\n            procurementAgent\n        },\n            () => { });\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            realmId: true,\n            procurementAgentCode: true,\n            procurementAgentName: true,\n            submittedToApprovedLeadTime: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('procurementAgentForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RealmService.getRealmListAll()\n            .then(response => {\n                this.setState({\n                    realms: response.data.data\n                })\n            }).catch(\n                error => {\n                    if (error.message === \"Network Error\") {\n                        this.setState({ message: error.message });\n                    } else {\n                        switch (error.response ? error.response.status : \"\") {\n                            case 500:\n                            case 401:\n                            case 404:\n                            case 406:\n                            case 412:\n                                this.setState({ message: error.response.data.messageCode });\n                                break;\n                            default:\n                                this.setState({ message: 'static.unkownError' });\n                                console.log(\"Error code unkown\");\n                                break;\n                        }\n                    }\n                }\n            );\n    }\n\n    render() {\n        const { realms } = this.state;\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {item.label.label_en}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"animated fadeIn\">\n                <h5>{i18n.t(this.state.message)}</h5>\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.procurementagent.procurementagentadd')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={initialValues}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    console.log(\"this.state.procurementAgent---\", this.state.procurementAgent);\n                                    ProcurementAgentService.addProcurementAgent(this.state.procurementAgent)\n                                        .then(response => {\n                                            if (response.status == 200) {\n                                                this.props.history.push(`/procurementAgent/listProcurementAgent/${response.data.messageCode}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.message\n                                                })\n                                            }\n                                        })\n                                        .catch(\n                                            error => {\n                                                if (error.message === \"Network Error\") {\n                                                    this.setState({ message: error.message });\n                                                } else {\n                                                    switch (error.response ? error.response.status : \"\") {\n                                                        case 500:\n                                                        case 401:\n                                                        case 404:\n                                                        case 406:\n                                                        case 412:\n                                                            this.setState({ message: error.response.data.messageCode });\n                                                            break;\n                                                        default:\n                                                            this.setState({ message: 'static.unkownError' });\n                                                            console.log(\"Error code unkown\");\n                                                            break;\n                                                    }\n                                                }\n                                            }\n                                        );\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='procurementAgentForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"realmId\">{i18n.t('static.realm.realmname')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            bsSize=\"sm\"\n                                                            name=\"realmId\"\n                                                            id=\"realmId\"\n                                                            valid={!errors.realmId}\n                                                            invalid={touched.realmId && !!errors.realmId}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                        >\n                                                            <option value=\"\">{i18n.t('static.common.select')}</option>\n                                                            {realmList}\n                                                        </Input>\n                                                        <FormFeedback>{errors.realmId}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"procurementAgentCode\">{i18n.t('static.procurementagent.procurementagentcode')}</Label>\n                                                        <Input type=\"text\"\n                                                            bsSize=\"sm\"\n                                                            name=\"procurementAgentCode\"\n                                                            id=\"procurementAgentCode\"\n                                                            valid={!errors.procurementAgentCode}\n                                                            invalid={touched.procurementAgentCode && !!errors.procurementAgentCode}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            maxLength={6}\n                                                            value={this.Capitalize(this.state.procurementAgent.procurementAgentCode)}\n                                                        />\n                                                        <FormFeedback>{errors.procurementAgentCode}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"procurementAgentName\">{i18n.t('static.procurementagent.procurementagentname')}</Label>\n                                                        <Input type=\"text\"\n                                                            bsSize=\"sm\"\n                                                            name=\"procurementAgentName\"\n                                                            id=\"procurementAgentName\"\n                                                            valid={!errors.procurementAgentName}\n                                                            invalid={touched.procurementAgentName && !!errors.procurementAgentName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.Capitalize(this.state.procurementAgent.label.label_en)}\n                                                        />\n                                                        <FormFeedback>{errors.procurementAgentName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"submittedToApprovedLeadTime\">{i18n.t('static.procurementagent.procurementagentsubmittoapprovetime')}</Label>\n                                                        <Input type=\"number\"\n                                                            bsSize=\"sm\"\n                                                            name=\"submittedToApprovedLeadTime\"\n                                                            id=\"submittedToApprovedLeadTime\"\n                                                            valid={!errors.submittedToApprovedLeadTime}\n                                                            invalid={touched.submittedToApprovedLeadTime && !!errors.submittedToApprovedLeadTime}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            min={1}\n                                                        />\n                                                        <FormFeedback>{errors.submittedToApprovedLeadTime}</FormFeedback>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n\n                                                        &nbsp;\n                                                    </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n\n                                        )} />\n\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/procurementAgent/listProcurementAgent/` + \"Action Canceled\")\n    }\n}\n\nexport default AddProcurementAgentComponent;\n"]},"metadata":{},"sourceType":"module"}