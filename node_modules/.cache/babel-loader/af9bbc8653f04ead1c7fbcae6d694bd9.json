{"ast":null,"code":"var $ = require('../internals/export');\n\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\n\nvar anObject = require('../internals/an-object');\n\nvar toMetadataKey = ReflectMetadataModule.toKey;\nvar getOrCreateMetadataMap = ReflectMetadataModule.getMap;\nvar store = ReflectMetadataModule.store; // `Reflect.deleteMetadata` method\n// https://github.com/rbuckton/reflect-metadata\n\n$({\n  target: 'Reflect',\n  stat: true\n}, {\n  deleteMetadata: function deleteMetadata(metadataKey, target\n  /* , targetKey */\n  ) {\n    var targetKey = arguments.length < 3 ? undefined : toMetadataKey(arguments[2]);\n    var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n    if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n    if (metadataMap.size) return true;\n    var targetMetadata = store.get(target);\n    targetMetadata['delete'](targetKey);\n    return !!targetMetadata.size || store['delete'](target);\n  }\n});","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/node_modules/core-js/modules/esnext.reflect.delete-metadata.js"],"names":["$","require","ReflectMetadataModule","anObject","toMetadataKey","toKey","getOrCreateMetadataMap","getMap","store","target","stat","deleteMetadata","metadataKey","targetKey","arguments","length","undefined","metadataMap","size","targetMetadata","get"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIG,aAAa,GAAGF,qBAAqB,CAACG,KAA1C;AACA,IAAIC,sBAAsB,GAAGJ,qBAAqB,CAACK,MAAnD;AACA,IAAIC,KAAK,GAAGN,qBAAqB,CAACM,KAAlC,C,CAEA;AACA;;AACAR,CAAC,CAAC;AAAES,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAD,EAAoC;AACnCC,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBC,WAAxB,EAAqCH;AAAO;AAA5C,IAA+D;AAC7E,QAAII,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBC,SAAvB,GAAmCZ,aAAa,CAACU,SAAS,CAAC,CAAD,CAAV,CAAhE;AACA,QAAIG,WAAW,GAAGX,sBAAsB,CAACH,QAAQ,CAACM,MAAD,CAAT,EAAmBI,SAAnB,EAA8B,KAA9B,CAAxC;AACA,QAAII,WAAW,KAAKD,SAAhB,IAA6B,CAACC,WAAW,CAAC,QAAD,CAAX,CAAsBL,WAAtB,CAAlC,EAAsE,OAAO,KAAP;AACtE,QAAIK,WAAW,CAACC,IAAhB,EAAsB,OAAO,IAAP;AACtB,QAAIC,cAAc,GAAGX,KAAK,CAACY,GAAN,CAAUX,MAAV,CAArB;AACAU,IAAAA,cAAc,CAAC,QAAD,CAAd,CAAyBN,SAAzB;AACA,WAAO,CAAC,CAACM,cAAc,CAACD,IAAjB,IAAyBV,KAAK,CAAC,QAAD,CAAL,CAAgBC,MAAhB,CAAhC;AACD;AATkC,CAApC,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar ReflectMetadataModule = require('../internals/reflect-metadata');\nvar anObject = require('../internals/an-object');\n\nvar toMetadataKey = ReflectMetadataModule.toKey;\nvar getOrCreateMetadataMap = ReflectMetadataModule.getMap;\nvar store = ReflectMetadataModule.store;\n\n// `Reflect.deleteMetadata` method\n// https://github.com/rbuckton/reflect-metadata\n$({ target: 'Reflect', stat: true }, {\n  deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\n    var targetKey = arguments.length < 3 ? undefined : toMetadataKey(arguments[2]);\n    var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n    if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n    if (metadataMap.size) return true;\n    var targetMetadata = store.get(target);\n    targetMetadata['delete'](targetKey);\n    return !!targetMetadata.size || store['delete'](target);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}