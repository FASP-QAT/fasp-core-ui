{"ast":null,"code":"var DESCRIPTORS = require('../internals/descriptors');\n\nvar global = require('../internals/global');\n\nvar isForced = require('../internals/is-forced');\n\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar isRegExp = require('../internals/is-regexp');\n\nvar getFlags = require('../internals/regexp-flags');\n\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\n\nvar redefine = require('../internals/redefine');\n\nvar fails = require('../internals/fails');\n\nvar setInternalState = require('../internals/internal-state').set;\n\nvar setSpecies = require('../internals/set-species');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g; // \"new\" should create a new object, old webkit bug\n\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar FORCED = DESCRIPTORS && isForced('RegExp', !CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false; // RegExp constructor can alter flags and IsRegExp works correct with @@match\n\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})); // `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\n\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, {\n      sticky: sticky\n    });\n    return result;\n  };\n\n  var proxy = function proxy(key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function get() {\n        return NativeRegExp[key];\n      },\n      set: function set(it) {\n        NativeRegExp[key] = it;\n      }\n    });\n  };\n\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n\n  while (keys.length > index) {\n    proxy(keys[index++]);\n  }\n\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n} // https://tc39.github.io/ecma262/#sec-get-regexp-@@species\n\n\nsetSpecies('RegExp');","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/node_modules/core-js/modules/es.regexp.constructor.js"],"names":["DESCRIPTORS","require","global","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","isRegExp","getFlags","stickyHelpers","redefine","fails","setInternalState","set","setSpecies","wellKnownSymbol","MATCH","NativeRegExp","RegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","FORCED","RegExpWrapper","pattern","flags","thisIsRegExp","patternIsRegExp","flagsAreUndefined","undefined","sticky","constructor","source","call","indexOf","replace","result","proxy","key","configurable","get","it","keys","index","length"],"mappings":"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","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n"]},"metadata":{},"sourceType":"script"}