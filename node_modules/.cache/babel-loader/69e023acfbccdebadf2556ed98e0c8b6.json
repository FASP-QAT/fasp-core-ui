{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/role/AddRoleComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport i18n from '../../i18n';\nimport UserService from \"../../api/UserService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nvar initialValues = {\n  roleName: \"\",\n  businessFunctions: [],\n  canCreateRole: []\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    roleName: Yup.string().required('Please enter role name'),\n    businessFunctions: Yup.string().required('Please select business functions'),\n    canCreateRole: Yup.string().required('Please select can create role')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddRoleComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AddRoleComponent, _Component);\n\n  function AddRoleComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddRoleComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRoleComponent).call(this, props));\n    _this.state = {\n      businessFunctions: [],\n      roles: [],\n      role: {\n        businessFunctions: [],\n        canCreateRole: [],\n        label: {}\n      },\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    _this.Capitalize = _this.Capitalize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddRoleComponent, [{\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      if (str != null && str != \"\") {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var role = this.state.role;\n\n      if (event.target.name == \"roleName\") {\n        role.label.label_en = event.target.value;\n      }\n\n      if (event.target.name == \"businessFunctions\") {\n        role.businessFunctions = Array.from(event.target.selectedOptions, function (item) {\n          return item.value;\n        });\n      }\n\n      if (event.target.name == \"canCreateRole\") {\n        role.canCreateRole = Array.from(event.target.selectedOptions, function (item) {\n          return item.value;\n        });\n      }\n\n      this.setState({\n        role: role\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        roleName: true,\n        businessFunctions: true,\n        canCreateRole: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('roleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      UserService.getBusinessFunctionList().then(function (response) {\n        _this2.setState({\n          businessFunctions: response.data\n        });\n      }).catch(function (error) {\n        if (error.message === \"Network Error\") {\n          _this2.setState({\n            message: error.message\n          });\n        } else {\n          switch (error.response ? error.response.status : \"\") {\n            case 500:\n            case 401:\n            case 404:\n            case 406:\n            case 412:\n              _this2.setState({\n                message: error.response.data.messageCode\n              });\n\n              break;\n\n            default:\n              _this2.setState({\n                message: 'static.unkownError'\n              });\n\n              console.log(\"Error code unkown\");\n              break;\n          }\n        }\n      });\n      UserService.getRoleList().then(function (response) {\n        _this2.setState({\n          roles: response.data\n        });\n      }).catch(function (error) {\n        if (error.message === \"Network Error\") {\n          _this2.setState({\n            message: error.message\n          });\n        } else {\n          switch (error.response ? error.response.status : \"\") {\n            case 500:\n            case 401:\n            case 404:\n            case 406:\n            case 412:\n              _this2.setState({\n                message: error.response.data.messageCode\n              });\n\n              break;\n\n            default:\n              _this2.setState({\n                message: 'static.unkownError'\n              });\n\n              console.log(\"Error code unkown\");\n              break;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var businessFunctions = this.state.businessFunctions;\n      var roles = this.state.roles;\n      var businessFunctionsList = businessFunctions.length > 0 && businessFunctions.map(function (item, i) {\n        return React.createElement(React.Fragment, null, React.createElement(\"option\", {\n          key: i,\n          value: item.businessFunctionId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, item.label.label_en));\n      }, this);\n      var roleList = roles.length > 0 && roles.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.roleId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, i18n.t(this.state.message)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, i18n.t('static.role.roleaddtext')), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          UserService.addNewRole(_this3.state.role).then(function (response) {\n            if (response.status == 200) {\n              _this3.props.history.push(\"/role/listRole/\".concat(response.data.messageCode));\n            } else {\n              _this3.setState({\n                message: response.data.messageCode\n              });\n            }\n          }).catch(function (error) {\n            if (error.message === \"Network Error\") {\n              _this3.setState({\n                message: error.message\n              });\n            } else {\n              switch (error.response ? error.response.status : \"\") {\n                case 500:\n                case 401:\n                case 404:\n                case 406:\n                case 412:\n                  _this3.setState({\n                    message: error.response.data.messageCode\n                  });\n\n                  break;\n\n                default:\n                  _this3.setState({\n                    message: 'static.unkownError'\n                  });\n\n                  console.log(\"Error code unkown\");\n                  break;\n              }\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"roleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"roleName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }, i18n.t('static.role.rolename')), React.createElement(Input, {\n            type: \"text\",\n            name: \"roleName\",\n            id: \"roleName\",\n            bsSize: \"sm\",\n            valid: !errors.roleName,\n            invalid: touched.roleName && !!errors.roleName,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.Capitalize(_this3.state.role.label.label_en),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, errors.roleName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"businessFunctions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275\n            },\n            __self: this\n          }, i18n.t('static.role.businessfunction')), React.createElement(Input, {\n            type: \"select\",\n            name: \"businessFunctions\",\n            id: \"businessFunctions\",\n            bsSize: \"sm\",\n            valid: !errors.businessFunctions,\n            invalid: touched.businessFunctions && !!errors.businessFunctions,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.state.role.businessFunctions,\n            multiple: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"0\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, i18n.t('static.common.select')), businessFunctionsList), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 292\n            },\n            __self: this\n          }, errors.businessFunctions)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"canCreateRole\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295\n            },\n            __self: this\n          }, i18n.t('static.role.cancreaterole')), React.createElement(Input, {\n            type: \"select\",\n            name: \"canCreateRole\",\n            id: \"canCreateRole\",\n            bsSize: \"sm\",\n            valid: !errors.canCreateRole,\n            invalid: touched.canCreateRole && !!errors.canCreateRole,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.state.role.canCreateRole,\n            multiple: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"0\",\n            disabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309\n            },\n            __self: this\n          }, i18n.t('static.common.select')), roleList), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }, errors.canCreateRole))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this3.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this3.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/role/listRole/\" + \"static.actionCancelled\");\n    }\n  }]);\n\n  return AddRoleComponent;\n}(Component);\n\nexport default AddRoleComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/role/AddRoleComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","i18n","UserService","AuthenticationService","initialValues","roleName","businessFunctions","canCreateRole","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddRoleComponent","props","state","roles","role","label","message","cancelClicked","bind","dataChange","Capitalize","str","charAt","toUpperCase","slice","event","target","name","label_en","value","Array","from","selectedOptions","item","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","getBusinessFunctionList","then","response","data","catch","status","messageCode","console","log","getRoleList","businessFunctionsList","map","businessFunctionId","roleList","roleId","t","flexBasis","setSubmitting","setErrors","addNewRole","history","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\nimport i18n from '../../i18n'\nimport UserService from \"../../api/UserService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nconst initialValues = {\n    roleName: \"\",\n    businessFunctions: [],\n    canCreateRole: []\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        roleName: Yup.string()\n            .required('Please enter role name'),\n        businessFunctions: Yup.string()\n            .required('Please select business functions'),\n        canCreateRole: Yup.string()\n            .required('Please select can create role')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\nclass AddRoleComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            businessFunctions: [],\n            roles: [],\n            role: {\n                businessFunctions: [],\n                canCreateRole: [],\n                label: {\n\n                }\n            },\n            message: ''\n        }\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.dataChange = this.dataChange.bind(this);\n        this.Capitalize = this.Capitalize.bind(this);\n    }\n\n    Capitalize(str) {\n        if (str != null && str != \"\") {\n            return str.charAt(0).toUpperCase() + str.slice(1);\n        } else {\n            return \"\";\n        }\n    }\n\n\n    dataChange(event) {\n        let { role } = this.state;\n        if (event.target.name == \"roleName\") {\n            role.label.label_en = event.target.value;\n        }\n        if (event.target.name == \"businessFunctions\") {\n            role.businessFunctions = Array.from(event.target.selectedOptions, (item) => item.value);\n        }\n        if (event.target.name == \"canCreateRole\") {\n            role.canCreateRole = Array.from(event.target.selectedOptions, (item) => item.value);\n        }\n        this.setState({\n            role\n        },\n            () => { });\n    };\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            roleName: true,\n            businessFunctions: true,\n            canCreateRole: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('roleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        UserService.getBusinessFunctionList()\n            .then(response => {\n                this.setState({\n                    businessFunctions: response.data\n                })\n            }).catch(\n                error => {\n                    if (error.message === \"Network Error\") {\n                        this.setState({ message: error.message });\n                    } else {\n                        switch (error.response ? error.response.status : \"\") {\n                            case 500:\n                            case 401:\n                            case 404:\n                            case 406:\n                            case 412:\n                                this.setState({ message: error.response.data.messageCode });\n                                break;\n                            default:\n                                this.setState({ message: 'static.unkownError' });\n                                console.log(\"Error code unkown\");\n                                break;\n                        }\n                    }\n                }\n            );\n        UserService.getRoleList()\n            .then(response => {\n                this.setState({\n                    roles: response.data\n                })\n            }).catch(\n                error => {\n                    if (error.message === \"Network Error\") {\n                        this.setState({ message: error.message });\n                    } else {\n                        switch (error.response ? error.response.status : \"\") {\n                            case 500:\n                            case 401:\n                            case 404:\n                            case 406:\n                            case 412:\n                                this.setState({ message: error.response.data.messageCode });\n                                break;\n                            default:\n                                this.setState({ message: 'static.unkownError' });\n                                console.log(\"Error code unkown\");\n                                break;\n                        }\n                    }\n                }\n            );\n    }\n\n    render() {\n        const { businessFunctions } = this.state;\n        const { roles } = this.state;\n\n        let businessFunctionsList = businessFunctions.length > 0\n            && businessFunctions.map((item, i) => {\n                return (\n                    <>\n                        <option key={i} value={item.businessFunctionId}>\n                            {item.label.label_en}\n                        </option>\n                    </>\n                )\n            }, this);\n        let roleList = roles.length > 0\n            && roles.map((item, i) => {\n                return (\n                    <option key={i} value={item.roleId}>\n                        {item.label.label_en}\n                    </option>\n                )\n            }, this);\n\n        return (\n            <div className=\"animated fadeIn\">\n                <h5>{i18n.t(this.state.message)}</h5>\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>{i18n.t('static.role.roleaddtext')}</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={initialValues}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    UserService.addNewRole(this.state.role)\n                                        .then(response => {\n                                            if (response.status == 200) {\n                                                this.props.history.push(`/role/listRole/${response.data.messageCode}`)\n                                            } else {\n                                                this.setState({\n                                                    message: response.data.messageCode\n                                                })\n                                            }\n\n                                        })\n                                        .catch(\n                                            error => {\n                                                if (error.message === \"Network Error\") {\n                                                    this.setState({ message: error.message });\n                                                } else {\n                                                    switch (error.response ? error.response.status : \"\") {\n                                                        case 500:\n                                                        case 401:\n                                                        case 404:\n                                                        case 406:\n                                                        case 412:\n                                                            this.setState({ message: error.response.data.messageCode });\n                                                            break;\n                                                        default:\n                                                            this.setState({ message: 'static.unkownError' });\n                                                            console.log(\"Error code unkown\");\n                                                            break;\n                                                    }\n                                                }\n                                            }\n                                        );\n\n\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='roleForm'>\n                                                <CardBody>\n                                                    <FormGroup>\n                                                        <Label for=\"roleName\">{i18n.t('static.role.rolename')}</Label>\n                                                        <Input type=\"text\"\n                                                            name=\"roleName\"\n                                                            id=\"roleName\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.roleName}\n                                                            invalid={touched.roleName && !!errors.roleName}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.Capitalize(this.state.role.label.label_en)}\n                                                        />\n                                                        <FormFeedback>{errors.roleName}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"businessFunctions\">{i18n.t('static.role.businessfunction')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            name=\"businessFunctions\"\n                                                            id=\"businessFunctions\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.businessFunctions}\n                                                            invalid={touched.businessFunctions && !!errors.businessFunctions}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.state.role.businessFunctions}\n                                                            multiple={true}\n                                                        >\n                                                            <option value=\"0\" disabled>{i18n.t('static.common.select')}</option>\n                                                            {businessFunctionsList}\n                                                        </Input>\n                                                        <FormFeedback>{errors.businessFunctions}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label htmlFor=\"canCreateRole\">{i18n.t('static.role.cancreaterole')}</Label>\n                                                        <Input\n                                                            type=\"select\"\n                                                            name=\"canCreateRole\"\n                                                            id=\"canCreateRole\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.canCreateRole}\n                                                            invalid={touched.canCreateRole && !!errors.canCreateRole}\n                                                            onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                            value={this.state.role.canCreateRole}\n                                                            multiple={true}\n                                                        >\n                                                            <option value=\"0\" disabled>{i18n.t('static.common.select')}</option>\n                                                            {roleList}\n                                                        </Input>\n                                                        <FormFeedback>{errors.canCreateRole}</FormFeedback>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n\n                                                        &nbsp;\n                          </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n                                        )} />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/role/listRole/` + \"static.actionCancelled\")\n    }\n}\n\nexport default AddRoleComponent;\n"]},"metadata":{},"sourceType":"module"}