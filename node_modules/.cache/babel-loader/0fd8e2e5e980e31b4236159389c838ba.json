{"ast":null,"code":"'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/node_modules/is-callable/index.js"],"names":["fnToStr","Function","prototype","toString","constructorRegex","isES6ClassFn","isES6ClassFunction","value","fnStr","call","test","e","tryFunctionObject","tryFunctionToStr","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","module","exports","isCallable","strClass"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,SAAT,CAAmBC,QAAjC;AAEA,IAAIC,gBAAgB,GAAG,aAAvB;;AACA,IAAIC,YAAY,GAAG,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACrD,MAAI;AACH,QAAIC,KAAK,GAAGR,OAAO,CAACS,IAAR,CAAaF,KAAb,CAAZ;AACA,WAAOH,gBAAgB,CAACM,IAAjB,CAAsBF,KAAtB,CAAP;AACA,GAHD,CAGE,OAAOG,CAAP,EAAU;AACX,WAAO,KAAP,CADW,CACG;AACd;AACD,CAPD;;AASA,IAAIC,iBAAiB,GAAG,SAASC,gBAAT,CAA0BN,KAA1B,EAAiC;AACxD,MAAI;AACH,QAAIF,YAAY,CAACE,KAAD,CAAhB,EAAyB;AAAE,aAAO,KAAP;AAAe;;AAC1CP,IAAAA,OAAO,CAACS,IAAR,CAAaF,KAAb;AACA,WAAO,IAAP;AACA,GAJD,CAIE,OAAOI,CAAP,EAAU;AACX,WAAO,KAAP;AACA;AACD,CARD;;AASA,IAAIG,KAAK,GAAGC,MAAM,CAACb,SAAP,CAAiBC,QAA7B;AACA,IAAIa,OAAO,GAAG,mBAAd;AACA,IAAIC,QAAQ,GAAG,4BAAf;AACA,IAAIC,cAAc,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,WAAd,KAA8B,QAAnF;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBhB,KAApB,EAA2B;AAC3C,MAAI,CAACA,KAAL,EAAY;AAAE,WAAO,KAAP;AAAe;;AAC7B,MAAI,OAAOA,KAAP,KAAiB,UAAjB,IAA+B,OAAOA,KAAP,KAAiB,QAApD,EAA8D;AAAE,WAAO,KAAP;AAAe;;AAC/E,MAAI,OAAOA,KAAP,KAAiB,UAAjB,IAA+B,CAACA,KAAK,CAACL,SAA1C,EAAqD;AAAE,WAAO,IAAP;AAAc;;AACrE,MAAIgB,cAAJ,EAAoB;AAAE,WAAON,iBAAiB,CAACL,KAAD,CAAxB;AAAkC;;AACxD,MAAIF,YAAY,CAACE,KAAD,CAAhB,EAAyB;AAAE,WAAO,KAAP;AAAe;;AAC1C,MAAIiB,QAAQ,GAAGV,KAAK,CAACL,IAAN,CAAWF,KAAX,CAAf;AACA,SAAOiB,QAAQ,KAAKR,OAAb,IAAwBQ,QAAQ,KAAKP,QAA5C;AACA,CARD","sourcesContent":["'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n"]},"metadata":{},"sourceType":"script"}