{"ast":null,"code":"import _classCallCheck from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/Documents/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/Documents/QAT/fasp-core-ui/src/views/subFundingSource/AddSubFundingSourceComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\nvar initialValues = {\n  fundingSourceId: [],\n  subFundingSource: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    fundingSourceId: Yup.string().required('Please select realm.'),\n    subFundingSource: Yup.string().required('Please enter health area')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar AddSubFundingSourceComponent = /*#__PURE__*/function (_Component) {\n  _inherits(AddSubFundingSourceComponent, _Component);\n\n  function AddSubFundingSourceComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AddSubFundingSourceComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSubFundingSourceComponent).call(this, props));\n    _this.state = {\n      fundingSources: [],\n      subFundingSource: {\n        fundingSource: {},\n        label: {}\n      },\n      message: ''\n    };\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    _this.dataChange = _this.dataChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddSubFundingSourceComponent, [{\n    key: \"dataChange\",\n    value: function dataChange(event) {\n      var subFundingSource = this.state.subFundingSource;\n\n      if (event.target.name == \"fundingSourceId\") {\n        subFundingSource.fundingSource.fundingSourceId = event.target.value;\n      }\n\n      if (event.target.name == \"subFundingSource\") {\n        subFundingSource.label.label_en = event.target.value;\n      }\n\n      this.setState({\n        subFundingSource: subFundingSource\n      }, function () {});\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        fundingSourceId: true,\n        subFundingSource: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('subFundingSourceForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      FundingSourceService.getFundingSourceListAll().then(function (response) {\n        _this2.setState({\n          fundingSources: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var fundingSources = this.state.fundingSources;\n      var fundingSourceList = fundingSources.length > 0 && fundingSources.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.fundingSourceId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Add Sub Funding Source\"), ' '), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          FundingSourceService.addSubFundingSource(_this3.state.subFundingSource).then(function (response) {\n            if (response.data.status == \"Success\") {\n              _this3.props.history.push(\"/subFundingSource/subFundingSourceList/\".concat(response.data.message));\n            } else {\n              _this3.setState({\n                message: response.data.message\n              });\n            }\n          }).catch(function (error) {\n            switch (error.message) {\n              case \"Network Error\":\n                _this3.setState({\n                  message: error.message\n                });\n\n                break;\n\n              default:\n                _this3.setState({\n                  message: error.response.data.message\n                });\n\n                break;\n            }\n          });\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"subFundingSourceForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"fundingSourceId\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, \"Funding Source\"), React.createElement(Input, {\n            type: \"select\",\n            name: \"fundingSourceId\",\n            id: \"fundingSourceId\",\n            bsSize: \"lg\",\n            valid: !errors.fundingSourceId,\n            invalid: touched.fundingSourceId && !!errors.fundingSourceId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            value: _this3.state.fundingSourceId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(\"option\", {\n            value: \"0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, \"Please select\"), fundingSourceList), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, errors.fundingSourceId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"healthArea\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, \"Sub Funding Source\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"subFundingSource\",\n            id: \"subFundingSource\",\n            valid: !errors.subFundingSource,\n            invalid: touched.subFundingSource && !!errors.subFundingSource,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this3.dataChange(e);\n            },\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, errors.subFundingSource))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            color: \"success\",\n            className: \"mr-1\",\n            onClick: function onClick() {\n              return _this3.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          }, \"Submit\"), React.createElement(Button, {\n            type: \"reset\",\n            color: \"danger\",\n            className: \"mr-1\",\n            onClick: _this3.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, \"Cancel\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/subFundingSource/subFundingSourceList/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return AddSubFundingSourceComponent;\n}(Component);\n\nexport default AddSubFundingSourceComponent;","map":{"version":3,"sources":["/home/altius/Documents/QAT/fasp-core-ui/src/views/subFundingSource/AddSubFundingSourceComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","FormText","InputGroup","InputGroupAddon","InputGroupText","Formik","Yup","FundingSourceService","AuthenticationService","initialValues","fundingSourceId","subFundingSource","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","AddSubFundingSourceComponent","props","state","fundingSources","fundingSource","label","message","cancelClicked","bind","dataChange","event","target","name","value","label_en","setState","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","focus","setupAxiosInterceptors","getFundingSourceListAll","then","response","data","catch","fundingSourceList","map","item","flexBasis","setSubmitting","setErrors","addSubFundingSource","status","history","push","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","e","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\n\nimport FundingSourceService from \"../../api/FundingSourceService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nconst initialValues = {\n  fundingSourceId: [],\n  subFundingSource: \"\"\n}\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    fundingSourceId: Yup.string()\n      .required('Please select realm.'),\n    subFundingSource: Yup.string()\n      .required('Please enter health area')\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\nclass AddSubFundingSourceComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fundingSources: [],\n      subFundingSource: {\n        fundingSource: {\n        },\n        label: {\n\n        }\n      },\n      message: ''\n    }\n    this.cancelClicked = this.cancelClicked.bind(this);\n    this.dataChange = this.dataChange.bind(this);\n  }\n\n  dataChange(event) {\n    let { subFundingSource } = this.state;\n    if (event.target.name == \"fundingSourceId\") {\n      subFundingSource.fundingSource.fundingSourceId = event.target.value;\n    }\n    if (event.target.name == \"subFundingSource\") {\n      subFundingSource.label.label_en = event.target.value;\n    }\n    this.setState({\n      subFundingSource\n    },\n      () => { });\n  };\n\n  touchAll(setTouched, errors) {\n    setTouched({\n      fundingSourceId: true,\n      subFundingSource: true\n    }\n    )\n    this.validateForm(errors)\n  }\n  validateForm(errors) {\n    this.findFirstError('subFundingSourceForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n  findFirstError(formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  componentDidMount() {\n    AuthenticationService.setupAxiosInterceptors();\n    FundingSourceService.getFundingSourceListAll()\n      .then(response => {\n        this.setState({\n          fundingSources: response.data.data\n        })\n      }).catch(\n        error => {\n          switch (error.message) {\n            case \"Network Error\":\n              this.setState({\n                message: error.message\n              })\n              break\n            default:\n              this.setState({\n                message: error.response.data.message\n              })\n              break\n          }\n        }\n      );\n  }\n\n  render() {\n    const { fundingSources } = this.state;\n    let fundingSourceList = fundingSources.length > 0\n      && fundingSources.map((item, i) => {\n        return (\n          <option key={i} value={item.fundingSourceId}>\n            {item.label.label_en}\n          </option>\n        )\n      }, this);\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n            <Card>\n              <CardHeader>\n                <i className=\"icon-note\"></i><strong>Add Sub Funding Source</strong>{' '}\n              </CardHeader>\n              <Formik\n                initialValues={initialValues}\n                validate={validate(validationSchema)}\n                onSubmit={(values, { setSubmitting, setErrors }) => {\n                  FundingSourceService.addSubFundingSource(this.state.subFundingSource)\n                    .then(response => {\n                      if (response.data.status == \"Success\") {\n                        this.props.history.push(`/subFundingSource/subFundingSourceList/${response.data.message}`)\n                      } else {\n                        this.setState({\n                          message: response.data.message\n                        })\n                      }\n                    })\n                    .catch(\n                      error => {\n                        switch (error.message) {\n                          case \"Network Error\":\n                            this.setState({\n                              message: error.message\n                            })\n                            break\n                          default:\n                            this.setState({\n                              message: error.response.data.message\n                            })\n                            break\n                        }\n                      }\n                    );\n                }}\n                render={\n                  ({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    setTouched\n                  }) => (\n                      <Form onSubmit={handleSubmit} noValidate name='subFundingSourceForm'>\n                        <CardBody>\n                          <FormGroup>\n                            <Label htmlFor=\"fundingSourceId\">Funding Source</Label>\n                            <Input\n                              type=\"select\"\n                              name=\"fundingSourceId\"\n                              id=\"fundingSourceId\"\n                              bsSize=\"lg\"\n                              valid={!errors.fundingSourceId}\n                              invalid={touched.fundingSourceId && !!errors.fundingSourceId}\n                              onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                              onBlur={handleBlur}\n                              required\n                              value={this.state.fundingSourceId}\n                            >\n                              <option value=\"0\">Please select</option>\n                              {fundingSourceList}\n                            </Input>\n                            <FormFeedback>{errors.fundingSourceId}</FormFeedback>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"healthArea\">Sub Funding Source</Label>\n                            <Input type=\"text\"\n                              name=\"subFundingSource\"\n                              id=\"subFundingSource\"\n                              valid={!errors.subFundingSource}\n                              invalid={touched.subFundingSource && !!errors.subFundingSource}\n                              onChange={(e) => { handleChange(e); this.dataChange(e) }}\n                              onBlur={handleBlur}\n                              required />\n                            <FormFeedback>{errors.subFundingSource}</FormFeedback>\n                          </FormGroup>\n                        </CardBody>\n                        <CardFooter>\n                          <FormGroup>\n                            <Button type=\"submit\" color=\"success\" className=\"mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}>Submit</Button>\n                            <Button type=\"reset\" color=\"danger\" className=\"mr-1\" onClick={this.cancelClicked}>Cancel</Button>\n                          </FormGroup>\n                        </CardFooter>\n                      </Form>\n\n                    )} />\n\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  cancelClicked() {\n    this.props.history.push(`/subFundingSource/subFundingSourceList/` + \"Action Canceled\")\n  }\n}\n\nexport default AddSubFundingSourceComponent;\n"]},"metadata":{},"sourceType":"module"}