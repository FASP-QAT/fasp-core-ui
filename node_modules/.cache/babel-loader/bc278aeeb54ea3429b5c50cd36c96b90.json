{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/DataSource/DataSourceListComponent.jsx\";\nimport React, { Compoent, Component } from 'react';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\nimport i18n from '../../i18n';\n\nvar DataSourceListComponent = /*#__PURE__*/function (_Component) {\n  _inherits(DataSourceListComponent, _Component);\n\n  function DataSourceListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, DataSourceListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataSourceListComponent).call(this, props));\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editDataSource(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      dataSourceList: []\n    };\n    _this.editDataSource = _this.editDataSource.bind(_assertThisInitialized(_this));\n    _this.addNewDataSource = _this.addNewDataSource.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DataSourceListComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      DataSourceService.getDataSourceList().then(function (response) {\n        _this2.setState({\n          dataSourceList: response.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"editDataSource\",\n    value: function editDataSource(dataSource) {\n      this.props.history.push({\n        pathname: \"/dataSource/editDataSource\",\n        state: {\n          dataSource: dataSource\n        }\n      });\n    }\n  }, {\n    key: \"addNewDataSource\",\n    value: function addNewDataSource() {\n      if (navigator.onLine) {\n        this.props.history.push(\"/dataSource/addDataSource\");\n      } else {\n        alert(\"You must be Online.\");\n      }\n    }\n  }, {\n    key: \"showDataSourceLabel\",\n    value: function showDataSourceLabel(cell, row) {\n      return cell.label_en;\n    }\n  }, {\n    key: \"showDataSourceTypeLabel\",\n    value: function showDataSourceTypeLabel(cell, row) {\n      return cell.label.label_en;\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus(cell, row) {\n      if (cell) {\n        return \"Active\";\n      } else {\n        return \"Disabled\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), i18n.t('static.datasource.datasourcelist'), React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Datasource\",\n        onClick: this.addNewDataSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.dataSourceList,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showDataSourceLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, i18n.t('static.datasource.datasource')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"dataSourceType\",\n        dataSort: true,\n        dataFormat: this.showDataSourceTypeLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, i18n.t('static.datasource.datasourcetype')), React.createElement(TableHeaderColumn, {\n        dataField: \"active\",\n        dataSort: true,\n        dataFormat: this.showStatus,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, i18n.t('static.common.status'))))));\n    }\n  }]);\n\n  return DataSourceListComponent;\n}(Component);\n\nexport { DataSourceListComponent as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/DataSource/DataSourceListComponent.jsx"],"names":["React","Compoent","Component","DataSourceService","AuthenticationService","NavLink","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","data","i18n","DataSourceListComponent","props","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editDataSource","bind","state","dataSourceList","addNewDataSource","setupAxiosInterceptors","getDataSourceList","then","response","setState","catch","error","message","dataSource","history","push","pathname","navigator","onLine","alert","cell","label_en","label","t","showDataSourceLabel","showDataSourceTypeLabel","showStatus"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,OAAO,+DAAP;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IAGqBC,uB;;;AAEjB,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iGAAMA,KAAN;AACA,UAAKC,KAAL,GAAaJ,IAAI,CAACK,IAAlB;AACA,UAAKC,OAAL,GAAe;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,eAAe,EAAE,IAFN;AAGXC,MAAAA,cAAc,EAAE,CAHL;AAIXC,MAAAA,uBAAuB,EAAE,IAJd;AAKXC,MAAAA,WAAW,EAAE,IALF;AAMXC,MAAAA,iBAAiB,EAAE,KANR;AAOXC,MAAAA,gBAAgB,EAAE,KAPP;AAQXC,MAAAA,UAAU,EAAE,UAAUC,GAAV,EAAe;AACvB,aAAKC,cAAL,CAAoBD,GAApB;AACH,OAFW,CAEVE,IAFU;AARD,KAAf;AAaA,UAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAIA,UAAKH,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AACA,UAAKG,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBH,IAAtB,+BAAxB;AArBe;AAsBlB;;;;wCAEmB;AAAA;;AAChBxB,MAAAA,qBAAqB,CAAC4B,sBAAtB;AACA7B,MAAAA,iBAAiB,CAAC8B,iBAAlB,GAAsCC,IAAtC,CAA2C,UAAAC,QAAQ,EAAI;AACnD,QAAA,MAAI,CAACC,QAAL,CAAc;AACVN,UAAAA,cAAc,EAAEK,QAAQ,CAACxB;AADf,SAAd;AAGH,OAJD,EAKK0B,KALL,CAMQ,UAAAC,KAAK,EAAI;AACL,gBAAQA,KAAK,CAACC,OAAd;AACI,eAAK,eAAL;AACI,YAAA,MAAI,CAACH,QAAL,CAAc;AACVG,cAAAA,OAAO,EAAED,KAAK,CAACC;AADL,aAAd;;AAGA;;AACJ;AACI,YAAA,MAAI,CAACH,QAAL,CAAc;AACVG,cAAAA,OAAO,EAAED,KAAK,CAACC;AADL,aAAd;;AAGA;AAVR;AAYH,OAnBT;AAqBH;;;mCAEcC,U,EAAY;AACvB,WAAK1B,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,4BADU;AAEpBd,QAAAA,KAAK,EAAE;AAAEW,UAAAA,UAAU,EAAEA;AAAd;AAFa,OAAxB;AAKH;;;uCAEkB;AAEf,UAAII,SAAS,CAACC,MAAd,EAAsB;AAClB,aAAK/B,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB;AACH,OAFD,MAEO;AACHI,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AAEJ;;;wCAEmBC,I,EAAMrB,G,EAAK;AAC3B,aAAOqB,IAAI,CAACC,QAAZ;AACH;;;4CAEuBD,I,EAAMrB,G,EAAK;AAC/B,aAAOqB,IAAI,CAACE,KAAL,CAAWD,QAAlB;AACH;;;+BACUD,I,EAAMrB,G,EAAK;AAClB,UAAIqB,IAAJ,EAAU;AACN,eAAO,QAAP;AACH,OAFD,MAEO;AACH,eAAO,UAAP;AACH;AACJ;;;6BAEQ;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EACkCnC,IAAI,CAACsC,CAAL,CAAO,kCAAP,CADlC,EAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,oBAAR;AAA6B,QAAA,KAAK,EAAC,gBAAnC;AAAoD,QAAA,OAAO,EAAE,KAAKnB,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoF;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApF,CADJ,CADJ,CAFJ,CADJ,EAUI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,cAAjC;AAAiD,QAAA,OAAO,EAAC,GAAzD;AAA6D,QAAA,KAAK,MAAlE;AAAmE,QAAA,UAAU,MAA7E;AAA8E,QAAA,MAAM,MAApF;AAAqF,QAAA,OAAO,EAAE,KAAKb,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,eAAe,MAAxC;AAAyC,QAAA,SAAS,EAAC,OAAnD;AAA2D,QAAA,QAAQ,MAAnE;AAAoE,QAAA,UAAU,EAAE,KAAKkC,mBAArF;AAA0G,QAAA,SAAS,EAAC,QAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8HvC,IAAI,CAACsC,CAAL,CAAO,8BAAP,CAA9H,CADJ,EAEI,oBAAC,iBAAD;AAAmB,QAAA,eAAe,MAAlC;AAAmC,QAAA,SAAS,EAAC,gBAA7C;AAA8D,QAAA,QAAQ,MAAtE;AAAuE,QAAA,UAAU,EAAE,KAAKE,uBAAxF;AAAiH,QAAA,SAAS,EAAC,QAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqIxC,IAAI,CAACsC,CAAL,CAAO,kCAAP,CAArI,CAFJ,EAGI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,MAA9C;AAA+C,QAAA,UAAU,EAAE,KAAKG,UAAhE;AAA4E,QAAA,SAAS,EAAC,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgGzC,IAAI,CAACsC,CAAL,CAAO,sBAAP,CAAhG,CAHJ,CADJ,CAVJ,CADJ,CADJ;AAsBH;;;;EA5GgDhD,S;;SAAhCW,uB","sourcesContent":["import React, { Compoent, Component } from 'react';\nimport DataSourceService from '../../api/DataSourceService';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom'\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\nimport i18n from '../../i18n';\n\n\nexport default class DataSourceListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.table = data.rows;\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: true,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                this.editDataSource(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            dataSourceList: []\n\n        }\n        this.editDataSource = this.editDataSource.bind(this);\n        this.addNewDataSource = this.addNewDataSource.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        DataSourceService.getDataSourceList().then(response => {\n            this.setState({\n                dataSourceList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    editDataSource(dataSource) {\n        this.props.history.push({\n            pathname: \"/dataSource/editDataSource\",\n            state: { dataSource: dataSource }\n        });\n\n    }\n\n    addNewDataSource() {\n\n        if (navigator.onLine) {\n            this.props.history.push(`/dataSource/addDataSource`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n\n    showDataSourceLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    showDataSourceTypeLabel(cell, row) {\n        return cell.label.label_en;\n    }\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i>{i18n.t('static.datasource.datasourcelist')}\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Datasource\" onClick={this.addNewDataSource}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n\n                </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.dataSourceList} version=\"4\" hover pagination search options={this.options}>\n                            <TableHeaderColumn isKey filterFormatted dataField=\"label\" dataSort dataFormat={this.showDataSourceLabel} dataAlign=\"center\">{i18n.t('static.datasource.datasource')}</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"dataSourceType\" dataSort dataFormat={this.showDataSourceTypeLabel} dataAlign=\"center\">{i18n.t('static.datasource.datasourcetype')}</TableHeaderColumn>\n                            <TableHeaderColumn dataField=\"active\" dataSort dataFormat={this.showStatus} dataAlign=\"center\">{i18n.t('static.common.status')}</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}