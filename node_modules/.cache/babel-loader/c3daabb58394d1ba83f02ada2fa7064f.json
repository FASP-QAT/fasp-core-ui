{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global['custom-tooltips'] = {}));\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var position = this._chart.canvas.getBoundingClientRect();\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../../js/custom-tooltips.js","../../js/index.js"],"names":["_setCanvasId","_idMaker","_hex","_multiplier","Math","_canvasId","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","tooltip","document","tooltipModel","titleLines","tooltipHeader","tooltipHeaderTitle","tooltipBody","tooltipBodyItems","item","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","position","positionY","positionX","positionLeft","positionTop","halfWidth","customTooltips"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\nfunction CustomTooltips(tooltipModel) {\n  // Add unique id if not exist\n  const _setCanvasId = () => {\n    const _idMaker = () => {\n      const _hex = 16\n      const _multiplier = 0x10000\n      return ((1 + Math.random()) * _multiplier | 0).toString(_hex)\n    }\n    const _canvasId = `_canvas-${_idMaker() + _idMaker()}`\n    this._chart.canvas.id = _canvasId\n    return _canvasId\n  }\n\n  const ClassName = {\n    ABOVE                   : 'above',\n    BELOW                   : 'below',\n    CHARTJS_TOOLTIP         : 'chartjs-tooltip',\n    NO_TRANSFORM            : 'no-transform',\n    TOOLTIP_BODY            : 'tooltip-body',\n    TOOLTIP_BODY_ITEM       : 'tooltip-body-item',\n    TOOLTIP_BODY_ITEM_COLOR : 'tooltip-body-item-color',\n    TOOLTIP_BODY_ITEM_LABEL : 'tooltip-body-item-label',\n    TOOLTIP_BODY_ITEM_VALUE : 'tooltip-body-item-value',\n    TOOLTIP_HEADER          : 'tooltip-header',\n    TOOLTIP_HEADER_ITEM     : 'tooltip-header-item'\n  }\n\n  const Selector = {\n    DIV     : 'div',\n    SPAN    : 'span',\n    TOOLTIP : `${this._chart.canvas.id || _setCanvasId()}-tooltip`\n  }\n\n  let tooltip = document.getElementById(Selector.TOOLTIP)\n\n  if (!tooltip) {\n    tooltip = document.createElement('div')\n    tooltip.id = Selector.TOOLTIP\n    tooltip.className = ClassName.CHARTJS_TOOLTIP\n    this._chart.canvas.parentNode.appendChild(tooltip)\n  }\n\n  // Hide if no tooltip\n  if (tooltipModel.opacity === 0) {\n    tooltip.style.opacity = 0\n    return\n  }\n\n  // Set caret Position\n  tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM)\n  if (tooltipModel.yAlign) {\n    tooltip.classList.add(tooltipModel.yAlign)\n  } else {\n    tooltip.classList.add(ClassName.NO_TRANSFORM)\n  }\n\n  // Set Text\n  if (tooltipModel.body) {\n    const titleLines = tooltipModel.title || []\n\n    const tooltipHeader = document.createElement(Selector.DIV)\n    tooltipHeader.className = ClassName.TOOLTIP_HEADER\n\n    titleLines.forEach((title) => {\n      const tooltipHeaderTitle = document.createElement(Selector.DIV)\n      tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM\n      tooltipHeaderTitle.innerHTML = title\n      tooltipHeader.appendChild(tooltipHeaderTitle)\n    })\n\n    const tooltipBody = document.createElement(Selector.DIV)\n    tooltipBody.className = ClassName.TOOLTIP_BODY\n\n    const tooltipBodyItems = tooltipModel.body.map((item) => item.lines)\n    tooltipBodyItems.forEach((item, i) => {\n      const tooltipBodyItem = document.createElement(Selector.DIV)\n      tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM\n\n      const colors = tooltipModel.labelColors[i]\n\n      const tooltipBodyItemColor = document.createElement(Selector.SPAN)\n      tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR\n      tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor\n\n      tooltipBodyItem.appendChild(tooltipBodyItemColor)\n\n      if (item[0].split(':').length > 1) {\n        const tooltipBodyItemLabel = document.createElement(Selector.SPAN)\n        tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL\n        tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemLabel)\n\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0].split(': ').pop()\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      } else {\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      }\n\n      tooltipBody.appendChild(tooltipBodyItem)\n    })\n\n    tooltip.innerHTML = ''\n\n    tooltip.appendChild(tooltipHeader)\n    tooltip.appendChild(tooltipBody)\n  }\n\n  const position = this._chart.canvas.getBoundingClientRect()\n\n  const positionY = this._chart.canvas.offsetTop\n  const positionX = this._chart.canvas.offsetLeft\n\n  let positionLeft = positionX + tooltipModel.caretX\n  const positionTop = positionY + tooltipModel.caretY\n  // eslint-disable-next-line\n  const halfWidth = tooltipModel.width / 2\n\n  if (positionLeft + halfWidth > position.width) {\n    positionLeft -= halfWidth\n  } else if (positionLeft < halfWidth) {\n    positionLeft += halfWidth\n  }\n\n  // Display, position, and set styles for font\n  tooltip.style.opacity = 1\n  tooltip.style.left = `${positionLeft}px`\n  tooltip.style.top = `${positionTop}px`\n}\n\nexport default CustomTooltips\n","import CustomTooltips from './custom-tooltips'\nconst customTooltips = CustomTooltips\n// TODO: camel-case\nexport {\n  CustomTooltips,\n  customTooltips\n}\n"]},"metadata":{},"sourceType":"script"}