{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/realmCountry/ListRealmCountryComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardBody, FormGroup, Input, InputGroup, InputGroupAddon, Label, Button, Col } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport RealmService from \"../../api/RealmService\";\nimport RealmCountryService from \"../../api/RealmCountryService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nvar ListRealmCountryComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ListRealmCountryComponent, _Component);\n\n  function ListRealmCountryComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ListRealmCountryComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListRealmCountryComponent).call(this, props));\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: false,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editProcurementAgent(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      realms: [],\n      realmCountryList: [],\n      message: '',\n      selRealmCountry: []\n    };\n    _this.editProcurementAgent = _this.editProcurementAgent.bind(_assertThisInitialized(_this));\n    _this.filterData = _this.filterData.bind(_assertThisInitialized(_this));\n    _this.addNewRealmCountry = _this.addNewRealmCountry.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ListRealmCountryComponent, [{\n    key: \"addNewRealmCountry\",\n    value: function addNewRealmCountry() {\n      this.props.history.push(\"/realmCountry/addRealmCountry\");\n    }\n  }, {\n    key: \"filterData\",\n    value: function filterData() {\n      var realmId = document.getElementById(\"realmId\").value;\n\n      if (realmId != 0) {\n        var selRealmCountry = this.state.realmCountryList.filter(function (c) {\n          return c.realm.realmId == realmId;\n        });\n        console.log(\"selRealmCountry---\", selRealmCountry);\n        this.setState({\n          selRealmCountry: selRealmCountry\n        });\n      } else {\n        this.setState({\n          selRealmCountry: this.state.realmCountryList\n        });\n      }\n    }\n  }, {\n    key: \"editProcurementAgent\",\n    value: function editProcurementAgent(procurementAgent) {\n      this.props.history.push({\n        pathname: \"/procurementAgent/editProcurementAgent\",\n        state: {\n          procurementAgent: procurementAgent\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RealmService.getRealmListAll().then(function (response) {\n        _this2.setState({\n          realms: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n      RealmCountryService.getRealmCountryListAll().then(function (response) {\n        _this2.setState({\n          realmCountryList: response.data.data,\n          selRealmCountry: response.data.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"showCountryLabel\",\n    value: function showCountryLabel(cell, row) {\n      return cell.label.label_en;\n    }\n  }, {\n    key: \"showCurrencyLabel\",\n    value: function showCurrencyLabel(cell, row) {\n      return cell.label.label_en;\n    }\n  }, {\n    key: \"showPalletUnitLabel\",\n    value: function showPalletUnitLabel(cell, row) {\n      return cell.label.label_en;\n    }\n  }, {\n    key: \"showRealmLabel\",\n    value: function showRealmLabel(cell, row) {\n      return cell.label.label_en;\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus(cell, row) {\n      if (cell) {\n        return \"Active\";\n      } else {\n        return \"Disabled\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var realms = this.state.realms;\n      var realmList = realms.length > 0 && realms.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.realmId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.props.match.params.message), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.message), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Realm Country List\"), ' ', React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Realm Country\",\n        onClick: this.addNewRealmCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"appendedInputButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Realm\"), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"realmId\",\n        id: \"realmId\",\n        bsSize: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Please select\"), realmList), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.filterData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Go\")))))), React.createElement(BootstrapTable, {\n        data: this.state.selRealmCountry,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"realmCountryId\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"country\",\n        dataSort: true,\n        dataFormat: this.showCountryLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Country\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"realm\",\n        dataFormat: this.showRealmLabel,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Realm\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"defaultCurrency\",\n        dataFormat: this.showCurrencyLabel,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Default Currency\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"palletUnit\",\n        dataFormat: this.showPalletUnitLabel,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Pallet Unit\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"airFreightPercentage\",\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Air Freight Percentage\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"seaFreightPercentage\",\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Sea Freight Percentage\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"shippedToArrivedAirLeadTime\",\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Shipped To Arrived Air Lead Time\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"shippedToArrivedSeaLeadTime\",\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Shipped To Arrived Sea Lead Time\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"arrivedToDeliveredLeadTime\",\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Arrived To Delivered Lead Time\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"active\",\n        dataFormat: this.showStatus,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Status\")))));\n    }\n  }]);\n\n  return ListRealmCountryComponent;\n}(Component);\n\nexport default ListRealmCountryComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/realmCountry/ListRealmCountryComponent.js"],"names":["React","Component","Card","CardHeader","CardBody","FormGroup","Input","InputGroup","InputGroupAddon","Label","Button","Col","BootstrapTable","TableHeaderColumn","RealmService","RealmCountryService","AuthenticationService","ListRealmCountryComponent","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editProcurementAgent","bind","state","realms","realmCountryList","message","selRealmCountry","filterData","addNewRealmCountry","history","push","realmId","document","getElementById","value","filter","c","realm","console","log","setState","procurementAgent","pathname","setupAxiosInterceptors","getRealmListAll","then","response","data","catch","error","getRealmCountryListAll","cell","label","label_en","realmList","length","map","item","i","match","params","showCountryLabel","showRealmLabel","showCurrencyLabel","showPalletUnitLabel","showStatus"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport {\n    Card, CardHeader, CardBody, FormGroup, Input, InputGroup, InputGroupAddon, Label, Button, Col\n} from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\n\n\nimport RealmService from \"../../api/RealmService\";\nimport RealmCountryService from \"../../api/RealmCountryService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nclass ListRealmCountryComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: false,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                this.editProcurementAgent(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            realms: [],\n            realmCountryList: [],\n            message: '',\n            selRealmCountry: []\n        }\n        this.editProcurementAgent = this.editProcurementAgent.bind(this);\n        this.filterData = this.filterData.bind(this);\n        this.addNewRealmCountry = this.addNewRealmCountry.bind(this);\n\n    }\n    addNewRealmCountry() {\n        this.props.history.push(\"/realmCountry/addRealmCountry\");\n    }\n    filterData() {\n        let realmId = document.getElementById(\"realmId\").value;\n        if (realmId != 0) {\n            const selRealmCountry = this.state.realmCountryList.filter(c => c.realm.realmId == realmId)\n            console.log(\"selRealmCountry---\", selRealmCountry);\n            this.setState({\n                selRealmCountry\n            });\n        } else {\n            this.setState({\n                selRealmCountry: this.state.realmCountryList\n            });\n        }\n    }\n    editProcurementAgent(procurementAgent) {\n        this.props.history.push({\n            pathname: \"/procurementAgent/editProcurementAgent\",\n            state: { procurementAgent }\n        });\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RealmService.getRealmListAll()\n            .then(response => {\n                this.setState({\n                    realms: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n            RealmCountryService.getRealmCountryListAll()\n            .then(response => {\n                this.setState({\n                    realmCountryList: response.data.data,\n                    selRealmCountry: response.data.data\n                })\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    showCountryLabel(cell, row) {\n        return cell.label.label_en;\n    }\n    showCurrencyLabel(cell, row) {\n        return cell.label.label_en;\n    }\n\n    showPalletUnitLabel(cell, row) {\n        return cell.label.label_en;\n    }\n\n    showRealmLabel(cell, row) {\n        return cell.label.label_en;\n    }\n\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n    render() {\n        const { realms } = this.state;\n        let realmList = realms.length > 0\n            && realms.map((item, i) => {\n                return (\n                    <option key={i} value={item.realmId}>\n                        {item.label.label_en}\n                    </option>\n                )\n            }, this);\n        return (\n            <div className=\"animated\">\n                <h5>{this.props.match.params.message}</h5>\n                <h5>{this.state.message}</h5>\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i><strong>Realm Country List</strong>{' '}\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Realm Country\" onClick={this.addNewRealmCountry}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                        <Col md=\"3\">\n                            <FormGroup>\n                                <Label htmlFor=\"appendedInputButton\">Realm</Label>\n                                <div className=\"controls\">\n                                    <InputGroup>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"realmId\"\n                                            id=\"realmId\"\n                                            bsSize=\"lg\"\n                                        >\n                                            <option value=\"0\">Please select</option>\n                                            {realmList}\n                                        </Input>\n                                        <InputGroupAddon addonType=\"append\">\n                                            <Button color=\"secondary\" onClick={this.filterData}>Go</Button>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </div>\n                            </FormGroup>\n                        </Col>\n                        <BootstrapTable data={this.state.selRealmCountry} version=\"4\" hover pagination search options={this.options}>\n                            <TableHeaderColumn isKey dataField='realmCountryId' hidden>ID</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"country\" dataSort dataFormat={this.showCountryLabel} dataAlign=\"center\">Country</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"realm\" dataFormat={this.showRealmLabel} dataAlign=\"center\" dataSort>Realm</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"defaultCurrency\" dataFormat={this.showCurrencyLabel} dataAlign=\"center\" dataSort>Default Currency</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"palletUnit\" dataFormat={this.showPalletUnitLabel} dataAlign=\"center\" dataSort>Pallet Unit</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"airFreightPercentage\" dataAlign=\"center\" dataSort>Air Freight Percentage</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"seaFreightPercentage\" dataAlign=\"center\" dataSort>Sea Freight Percentage</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"shippedToArrivedAirLeadTime\" dataAlign=\"center\" dataSort>Shipped To Arrived Air Lead Time</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"shippedToArrivedSeaLeadTime\" dataAlign=\"center\" dataSort>Shipped To Arrived Sea Lead Time</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"arrivedToDeliveredLeadTime\" dataAlign=\"center\" dataSort>Arrived To Delivered Lead Time</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"active\" dataFormat={this.showStatus} dataAlign=\"center\" dataSort>Status</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default ListRealmCountryComponent;\n"]},"metadata":{},"sourceType":"module"}