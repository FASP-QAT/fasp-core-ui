{"ast":null,"code":"var $ = require('../internals/export');\n\nvar getCompositeKeyNode = require('../internals/composite-key');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar create = require('../internals/object-create');\n\nvar initializer = function initializer() {\n  var freeze = getBuiltIn('Object', 'freeze');\n  return freeze ? freeze(create(null)) : create(null);\n}; // https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n\n\n$({\n  global: true\n}, {\n  compositeKey: function compositeKey() {\n    return getCompositeKeyNode.apply(Object, arguments).get('object', initializer);\n  }\n});","map":{"version":3,"sources":["/home/altius/Documents/FASP/fasp-core-ui/node_modules/core-js/modules/esnext.composite-key.js"],"names":["$","require","getCompositeKeyNode","getBuiltIn","create","initializer","freeze","global","compositeKey","apply","Object","arguments","get"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,4BAAD,CAApB;;AAEA,IAAII,WAAW,GAAG,SAAdA,WAAc,GAAY;AAC5B,MAAIC,MAAM,GAAGH,UAAU,CAAC,QAAD,EAAW,QAAX,CAAvB;AACA,SAAOG,MAAM,GAAGA,MAAM,CAACF,MAAM,CAAC,IAAD,CAAP,CAAT,GAA0BA,MAAM,CAAC,IAAD,CAA7C;AACD,CAHD,C,CAKA;;;AACAJ,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE;AAAV,CAAD,EAAmB;AAClBC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAON,mBAAmB,CAACO,KAApB,CAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,GAA7C,CAAiD,QAAjD,EAA2DP,WAA3D,CAAP;AACD;AAHiB,CAAnB,CAAD","sourcesContent":["var $ = require('../internals/export');\nvar getCompositeKeyNode = require('../internals/composite-key');\nvar getBuiltIn = require('../internals/get-built-in');\nvar create = require('../internals/object-create');\n\nvar initializer = function () {\n  var freeze = getBuiltIn('Object', 'freeze');\n  return freeze ? freeze(create(null)) : create(null);\n};\n\n// https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n$({ global: true }, {\n  compositeKey: function compositeKey() {\n    return getCompositeKeyNode.apply(Object, arguments).get('object', initializer);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}