{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar bind = require('../internals/function-bind-context');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar getMapIterator = require('../internals/get-map-iterator');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  filter: function filter(callbackfn\n  /* , thisArg */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    iterate(iterator, function (key, value) {\n      if (boundFunction(value, key, map)) setter.call(newMap, key, value);\n    }, undefined, true, true);\n    return newMap;\n  }\n});","map":{"version":3,"sources":["/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/core-js/modules/esnext.map.filter.js"],"names":["$","require","IS_PURE","getBuiltIn","anObject","aFunction","bind","speciesConstructor","getMapIterator","iterate","target","proto","real","forced","filter","callbackfn","map","iterator","boundFunction","arguments","length","undefined","newMap","setter","set","key","value","call"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIO,cAAc,GAAGP,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEU,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEX;AAAlD,CAAD,EAA8D;AAC7DY,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAA4C;AAClD,QAAIC,GAAG,GAAGZ,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIa,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;AACA,QAAIE,aAAa,GAAGZ,IAAI,CAACS,UAAD,EAAaI,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAnD,EAA8D,CAA9D,CAAxB;AACA,QAAIC,MAAM,GAAG,KAAKf,kBAAkB,CAACS,GAAD,EAAMb,UAAU,CAAC,KAAD,CAAhB,CAAvB,GAAb;AACA,QAAIoB,MAAM,GAAGlB,SAAS,CAACiB,MAAM,CAACE,GAAR,CAAtB;AACAf,IAAAA,OAAO,CAACQ,QAAD,EAAW,UAAUQ,GAAV,EAAeC,KAAf,EAAsB;AACtC,UAAIR,aAAa,CAACQ,KAAD,EAAQD,GAAR,EAAaT,GAAb,CAAjB,EAAoCO,MAAM,CAACI,IAAP,CAAYL,MAAZ,EAAoBG,GAApB,EAAyBC,KAAzB;AACrC,KAFM,EAEJL,SAFI,EAEO,IAFP,EAEa,IAFb,CAAP;AAGA,WAAOC,MAAP;AACD;AAX4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar getBuiltIn = require('../internals/get-built-in');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar bind = require('../internals/function-bind-context');\nvar speciesConstructor = require('../internals/species-constructor');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.filter` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    iterate(iterator, function (key, value) {\n      if (boundFunction(value, key, map)) setter.call(newMap, key, value);\n    }, undefined, true, true);\n    return newMap;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}