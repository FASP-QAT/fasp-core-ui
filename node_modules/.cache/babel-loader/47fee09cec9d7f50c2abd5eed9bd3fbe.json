{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/ExportProgram.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramService from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\";\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nvar initialValues = {\n  programId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programId: Yup.string().required('Please select program.')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar DownloadProgram = /*#__PURE__*/function (_Component) {\n  _inherits(DownloadProgram, _Component);\n\n  function DownloadProgram() {\n    var _this;\n\n    _classCallCheck(this, DownloadProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DownloadProgram).call(this));\n    _this.state = {\n      programList: []\n    };\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DownloadProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var lan = 'en';\n      JsStoreFunction.getProgramDataList().then(function (response) {\n        var json = response;\n        var prgList = [];\n\n        for (var i = 0; i < json.length; i++) {\n          var bytes = CryptoJS.AES.decrypt(json[i].programName, SECRET_KEY);\n          var programNameLabel = bytes.toString(CryptoJS.enc.Utf8);\n          console.log(\"ProgramNameLabel\", programNameLabel);\n          prgList[i] = {\n            value: json[i].id,\n            label: getLabelText(JSON.parse(programNameLabel), lan) + \"~v\" + json[i].version\n          };\n        }\n\n        console.log(\"ProgramList\", prgList);\n\n        _this2.setState({\n          programList: prgList\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit() {\n      var _this3 = this;\n\n      var zip = new JSZip();\n      var programId = this.state.programId;\n      var programIdStr = \"\";\n\n      for (var i = 0; i < programId.length; i++) {\n        programIdStr = programIdStr.concat(\"'\" + programId[i].value).concat(\"',\");\n      }\n\n      console.log(\"programIdStr\", programIdStr);\n      JsStoreFunction.getProgramDataByprogramIds(programIdStr.substring(0, programIdStr.length - 1).toString()).then(function (response) {\n        var json = response;\n\n        for (var i = 0; i < json.length; i++) {\n          var txt = JSON.stringify(json[i]);\n          zip.file(programId[i].value + \"_\" + parseInt(i + 1) + \".txt\", txt);\n        }\n\n        zip.generateAsync({\n          type: \"blob\"\n        }).then(function (content) {\n          FileSaver.saveAs(content, \"download.zip\");\n        });\n\n        _this3.setState({\n          message: \"Data exported successfully.\"\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"updateFieldData\",\n    value: function updateFieldData(value) {\n      console.log(\"Value\", value); // console.log(event.value)\n\n      this.setState({\n        programId: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        render: function render(_ref) {\n          var errors = _ref.errors,\n              touched = _ref.touched,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur;\n          return React.createElement(Form, {\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, \"Export Program Data\")), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: \"3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, \"Select Program\")), React.createElement(Col, {\n            xs: \"12\",\n            md: \"9\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, React.createElement(Select, {\n            valid: !errors.programId,\n            invalid: touched.programId && !!errors.programId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this4.updateFieldData(e);\n            },\n            onBlur: handleBlur,\n            name: \"programId\",\n            id: \"programId\",\n            multi: true,\n            options: _this4.state.programList,\n            value: _this4.state.programId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, errors.programId)))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            onClick: function onClick() {\n              return _this4.formSubmit();\n            },\n            size: \"sm\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-dot-circle-o\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), \"Export\"), React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-ban\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }), \" Reset\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DownloadProgram;\n}(Component);\n\nexport { DownloadProgram as default };","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/views/Program/ExportProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","FormFeedback","Formik","Yup","ProgramService","getLabelText","JsStoreFunction","Select","CryptoJS","SECRET_KEY","JSZip","initialValues","programId","validationSchema","values","object","shape","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","DownloadProgram","state","programList","formSubmit","bind","lan","getProgramDataList","then","response","json","prgList","i","length","bytes","AES","decrypt","programName","programNameLabel","toString","enc","Utf8","console","log","value","id","label","JSON","parse","version","setState","catch","message","zip","programIdStr","concat","getProgramDataByprogramIds","substring","txt","stringify","file","parseInt","generateAsync","type","content","FileSaver","saveAs","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","name","focus","touched","handleChange","handleBlur","e","updateFieldData"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,EACUC,QADV,EACoBC,UADpB,EAEIC,KAFJ,EAEWC,KAFX,EAEkBC,SAFlB,EAGIC,UAHJ,EAGgBC,MAHhB,EAGwBC,GAHxB,EAG6BC,IAH7B,EAIMC,YAJN,QAKO,YALP;AAMA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,8CAAP;AACA,OAAO,wCAAP;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAO,KAAKC,eAAZ,MAAiC,2CAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,wCAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE;AADO,CAAtB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,MAAV,EAAkB;AACvC,SAAOX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACtBJ,IAAAA,SAAS,EAAET,GAAG,CAACc,MAAJ,GACNC,QADM,CACG,wBADH;AADW,GAAnB,CAAP;AAIH,CALD;;AAOA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,mBAAD,EAAyB;AACtC,SAAO,UAACN,MAAD,EAAY;AACf,QAAMD,gBAAgB,GAAGO,mBAAmB,CAACN,MAAD,CAA5C;;AACA,QAAI;AACAD,MAAAA,gBAAgB,CAACQ,YAAjB,CAA8BP,MAA9B,EAAsC;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAAtC;AACA,aAAO,EAAP;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,aAAOC,4BAA4B,CAACD,KAAD,CAAnC;AACH;AACJ,GARD;AASH,CAVD;;AAYA,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,eAAD,EAAqB;AACtD,MAAMC,WAAW,GAAG,CAApB;AACA,SAAOD,eAAe,CAACE,KAAhB,CAAsBC,MAAtB,CAA6B,UAACC,MAAD,EAASN,KAAT,EAAmB;AACnD,6BACOM,MADP,sBAEKN,KAAK,CAACO,IAFX,EAEkBP,KAAK,CAACM,MAAN,CAAaH,WAAb,CAFlB;AAIH,GALM,EAKJ,EALI,CAAP;AAMH,CARD;;IAYqBK,e;;;AAEjB,6BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AALU;AAMb;;;;wCAEmB;AAAA;;AAChB,UAAMC,GAAG,GAAG,IAAZ;AACA9B,MAAAA,eAAe,CAAC+B,kBAAhB,GAAqCC,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AAClD,YAAIC,IAAI,GAAGD,QAAX;AACA,YAAIE,OAAO,GAAG,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAIE,KAAK,GAAGpC,QAAQ,CAACqC,GAAT,CAAaC,OAAb,CAAqBN,IAAI,CAACE,CAAD,CAAJ,CAAQK,WAA7B,EAA0CtC,UAA1C,CAAZ;AACA,cAAIuC,gBAAgB,GAAGJ,KAAK,CAACK,QAAN,CAAezC,QAAQ,CAAC0C,GAAT,CAAaC,IAA5B,CAAvB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,gBAAhC;AACAP,UAAAA,OAAO,CAACC,CAAD,CAAP,GAAa;AAAEY,YAAAA,KAAK,EAAEd,IAAI,CAACE,CAAD,CAAJ,CAAQa,EAAjB;AAAqBC,YAAAA,KAAK,EAAEnD,YAAY,CAACoD,IAAI,CAACC,KAAL,CAAWV,gBAAX,CAAD,EAA+BZ,GAA/B,CAAZ,GAAkD,IAAlD,GAAyDI,IAAI,CAACE,CAAD,CAAJ,CAAQiB;AAA7F,WAAb;AACH;;AACDP,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,OAA3B;;AACA,QAAA,MAAI,CAACmB,QAAL,CAAc;AACV3B,UAAAA,WAAW,EAAEQ;AADH,SAAd;AAGH,OAbD,EAcKoB,KAdL,CAeQ,UAAAtC,KAAK,EAAI;AACL,gBAAQA,KAAK,CAACuC,OAAd;AACI,eAAK,eAAL;AACI,YAAA,MAAI,CAACF,QAAL,CAAc;AACVE,cAAAA,OAAO,EAAEvC,KAAK,CAACuC;AADL,aAAd;;AAGA;;AACJ;AACI,YAAA,MAAI,CAACF,QAAL,CAAc;AACVE,cAAAA,OAAO,EAAEvC,KAAK,CAACuC;AADL,aAAd;;AAGA;AAVR;AAYH,OA5BT;AA8BH;;;iCAEY;AAAA;;AACT,UAAIC,GAAG,GAAG,IAAIrD,KAAJ,EAAV;AACA,UAAIE,SAAS,GAAG,KAAKoB,KAAL,CAAWpB,SAA3B;AACA,UAAIoD,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,SAAS,CAAC+B,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCsB,QAAAA,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAoB,MAAMrD,SAAS,CAAC8B,CAAD,CAAT,CAAaY,KAAvC,EAA8CW,MAA9C,CAAqD,IAArD,CAAf;AACH;;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,YAA5B;AACA1D,MAAAA,eAAe,CAAC4D,0BAAhB,CAA4CF,YAAY,CAACG,SAAb,CAAuB,CAAvB,EAA0BH,YAAY,CAACrB,MAAb,GAAsB,CAAhD,CAAD,CAAqDM,QAArD,EAA3C,EAA4GX,IAA5G,CAAiH,UAAAC,QAAQ,EAAI;AACzH,YAAIC,IAAI,GAAGD,QAAX;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAI0B,GAAG,GAAGX,IAAI,CAACY,SAAL,CAAe7B,IAAI,CAACE,CAAD,CAAnB,CAAV;AACAqB,UAAAA,GAAG,CAACO,IAAJ,CAAS1D,SAAS,CAAC8B,CAAD,CAAT,CAAaY,KAAb,GAAqB,GAArB,GAA2BiB,QAAQ,CAAC7B,CAAC,GAAG,CAAL,CAAnC,GAA6C,MAAtD,EAA8D0B,GAA9D;AACH;;AACDL,QAAAA,GAAG,CAACS,aAAJ,CAAkB;AACdC,UAAAA,IAAI,EAAE;AADQ,SAAlB,EAEGnC,IAFH,CAEQ,UAAUoC,OAAV,EAAmB;AACvBC,UAAAA,SAAS,CAACC,MAAV,CAAiBF,OAAjB,EAA0B,cAA1B;AACH,SAJD;;AAKA,QAAA,MAAI,CAACd,QAAL,CAAc;AACVE,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OAdD,EAeKD,KAfL,CAgBQ,UAAAtC,KAAK,EAAI;AACL,gBAAQA,KAAK,CAACuC,OAAd;AACI,eAAK,eAAL;AACI,YAAA,MAAI,CAACF,QAAL,CAAc;AACVE,cAAAA,OAAO,EAAEvC,KAAK,CAACuC;AADL,aAAd;;AAGA;;AACJ;AACI,YAAA,MAAI,CAACF,QAAL,CAAc;AACVE,cAAAA,OAAO,EAAEvC,KAAK,CAACuC;AADL,aAAd;;AAGA;AAVR;AAYH,OA7BT;AA+BH;;;6BAEQe,U,EAAYhD,M,EAAQ;AACzBgD,MAAAA,UAAU,CAAC;AACPjE,QAAAA,SAAS,EAAE;AADJ,OAAD,CAAV;AAIA,WAAKkE,YAAL,CAAkBjD,MAAlB;AACH;;;iCAEYA,M,EAAQ;AACjB,WAAKkD,cAAL,CAAoB,YAApB,EAAkC,UAACC,SAAD,EAAe;AAC7C,eAAOC,OAAO,CAACpD,MAAM,CAACmD,SAAD,CAAP,CAAd;AACH,OAFD;AAGH;;;mCAEcE,Q,EAAUC,Q,EAAU;AAC/B,UAAMC,IAAI,GAAGC,QAAQ,CAACC,KAAT,CAAeJ,QAAf,CAAb;;AACA,WAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,IAAI,CAACzC,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAIyC,QAAQ,CAACC,IAAI,CAAC1C,CAAD,CAAJ,CAAQ6C,IAAT,CAAZ,EAA4B;AACxBH,UAAAA,IAAI,CAAC1C,CAAD,CAAJ,CAAQ8C,KAAR;AACA;AACH;AACJ;AACJ;;;oCAEelC,K,EAAO;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB,EADmB,CAEnB;;AACA,WAAKM,QAAL,CAAc;AAAEhD,QAAAA,SAAS,EAAE0C;AAAb,OAAd;AACH;;;6BAEQ;AAAA;;AACL,aACI,0CACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,aAAa,EAAE3C,aADnB;AAEI,QAAA,MAAM,EACF;AAAA,cACIkB,MADJ,QACIA,MADJ;AAAA,cAEI4D,OAFJ,QAEIA,OAFJ;AAAA,cAGIC,YAHJ,QAGIA,YAHJ;AAAA,cAIIC,UAJJ,QAIIA,UAJJ;AAAA,iBAMQ,oBAAC,IAAD;AAAM,YAAA,UAAU,MAAhB;AAAiB,YAAA,IAAI,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ,EAII,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,KAAD;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,EAII,oBAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAa,YAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AACI,YAAA,KAAK,EAAE,CAAC9D,MAAM,CAACjB,SADnB;AAEI,YAAA,OAAO,EAAE6E,OAAO,CAAC7E,SAAR,IAAqB,CAAC,CAACiB,MAAM,CAACjB,SAF3C;AAGI,YAAA,QAAQ,EAAE,kBAACgF,CAAD,EAAO;AAAEF,cAAAA,YAAY,CAACE,CAAD,CAAZ;;AAAiB,cAAA,MAAI,CAACC,eAAL,CAAqBD,CAArB;AAAyB,aAHjE;AAII,YAAA,MAAM,EAAED,UAJZ;AAIwB,YAAA,IAAI,EAAC,WAJ7B;AAIyC,YAAA,EAAE,EAAC,WAJ5C;AAKI,YAAA,KAAK,MALT;AAMI,YAAA,OAAO,EAAE,MAAI,CAAC3D,KAAL,CAAWC,WANxB;AAOI,YAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWpB,SAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAUI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAeiB,MAAM,CAACjB,SAAtB,CAVJ,CAJJ,CADJ,CAJJ,EAwBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACsB,UAAL,EAAN;AAAA,aAA/B;AAAwD,YAAA,IAAI,EAAC,IAA7D;AAAkE,YAAA,KAAK,EAAC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkF;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlF,WADJ,EAEI,oBAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,IAAI,EAAC,IAA1B;AAA+B,YAAA,KAAK,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9C,WAFJ,CAxBJ,CANR;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ;AAgDH;;;;EApKwC5C,S;;SAAxByC,e","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n    , FormFeedback\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport ProgramService from '../../api/ProgramService';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport * as JsStoreFunction from \"../../CommonComponent/JsStoreFunctions.js\"\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../../Constants.js'\nimport JSZip from 'jszip';\n\nconst initialValues = {\n    programId: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programId: Yup.string()\n            .required('Please select program.')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\n\nexport default class DownloadProgram extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            programList: []\n        }\n        this.formSubmit = this.formSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        const lan = 'en'\n        JsStoreFunction.getProgramDataList().then(response => {\n            var json = response;\n            var prgList = [];\n            for (var i = 0; i < json.length; i++) {\n                var bytes = CryptoJS.AES.decrypt(json[i].programName, SECRET_KEY);\n                var programNameLabel = bytes.toString(CryptoJS.enc.Utf8);\n                console.log(\"ProgramNameLabel\", programNameLabel);\n                prgList[i] = { value: json[i].id, label: getLabelText(JSON.parse(programNameLabel), lan) + \"~v\" + json[i].version }\n            }\n            console.log(\"ProgramList\", prgList)\n            this.setState({\n                programList: prgList\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    formSubmit() {\n        var zip = new JSZip();\n        var programId = this.state.programId;\n        var programIdStr = \"\";\n        for (var i = 0; i < programId.length; i++) {\n            programIdStr = programIdStr.concat(\"'\" + programId[i].value).concat(\"',\");\n        }\n        console.log(\"programIdStr\", programIdStr);\n        JsStoreFunction.getProgramDataByprogramIds((programIdStr.substring(0, programIdStr.length - 1)).toString()).then(response => {\n            var json = response;\n            for (var i = 0; i < json.length; i++) {\n                var txt = JSON.stringify(json[i]);\n                zip.file(programId[i].value + \"_\" + parseInt(i + 1) + \".txt\", txt);\n            }\n            zip.generateAsync({\n                type: \"blob\"\n            }).then(function (content) {\n                FileSaver.saveAs(content, \"download.zip\");\n            });\n            this.setState({\n                message: \"Data exported successfully.\"\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true\n        }\n        )\n        this.validateForm(errors)\n    }\n\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    updateFieldData(value) {\n        console.log(\"Value\", value);\n        // console.log(event.value)\n        this.setState({ programId: value });\n    }\n\n    render() {\n        return (\n            <>\n                <Col xs=\"12\" sm=\"8\">\n                    <Card>\n                        <Formik\n                            initialValues={initialValues}\n                            render={\n                                ({\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                }) => (\n                                        <Form noValidate name='simpleForm'>\n                                            <CardHeader>\n                                                <strong>Export Program Data</strong>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup >\n                                                    <Col md=\"3\">\n                                                        <Label htmlFor=\"select\">Select Program</Label>\n                                                    </Col>\n                                                    <Col xs=\"12\" md=\"9\">\n                                                        <Select\n                                                            valid={!errors.programId}\n                                                            invalid={touched.programId && !!errors.programId}\n                                                            onChange={(e) => { handleChange(e); this.updateFieldData(e) }}\n                                                            onBlur={handleBlur} name=\"programId\" id=\"programId\"\n                                                            multi\n                                                            options={this.state.programList}\n                                                            value={this.state.programId}\n                                                        />\n                                                        <FormFeedback>{errors.programId}</FormFeedback>\n                                                    </Col>\n\n                                                </FormGroup>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <Button type=\"button\" onClick={() => this.formSubmit()} size=\"sm\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i>Export</Button>\n                                                <Button type=\"reset\" size=\"sm\" color=\"danger\"><i className=\"fa fa-ban\"></i> Reset</Button>\n                                            </CardFooter>\n                                        </Form>\n                                    )} />\n                    </Card>\n                </Col>\n            </>\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}