{"ast":null,"code":"import _classCallCheck from \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/src/views/HealthArea/AddHealthArea.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css'; // React select\n\nimport states from '../Forms/AdvancedForms/data/states';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport HealthAreaService from \"../../api/HealthAreaService\";\n\nvar AddHealthArea = /*#__PURE__*/function (_Component) {\n  _inherits(AddHealthArea, _Component);\n\n  function AddHealthArea(props) {\n    _classCallCheck(this, AddHealthArea);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddHealthArea).call(this, props));\n  }\n\n  _createClass(AddHealthArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      HealthAreaService.getRealmList().then(function (response) {\n        console.log(\"realm list---\", response.data);\n\n        _this.setState({\n          realms: response.data\n        });\n\n        options1 = response.data;\n      }).catch(function (error) {\n        console.log(\"error occured---\" + error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var realms = this.state.realms;\n      var realmList = realms.length > 0 && realms.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.realmId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n\n      handleChange = function handleChange(value) {\n        // this is going to call setFieldValue and manually update values.topcis\n        _this2.props.onChange(\"realmId\", value);\n      };\n\n      handleBlur = function handleBlur() {\n        // this is going to call setFieldTouched and manually update touched.topcis\n        _this2.props.onBlur(\"realmId\", true);\n      };\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Add Health Area\"), ' '), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: onSubmit,\n        render: function render(_ref) {\n          var values = _ref.values,\n              errors = _ref.errors,\n              touched = _ref.touched,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur,\n              handleSubmit = _ref.handleSubmit,\n              isSubmitting = _ref.isSubmitting,\n              isValid = _ref.isValid,\n              setTouched = _ref.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"Realm\"), React.createElement(Select, {\n            name: \"realmId\",\n            id: \"realmId\",\n            value: _this2.props.value,\n            options: options1,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            valid: !errors.realmId,\n            invalid: touched.realmId && !!errors.realmId,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, !!_this2.props.error && _this2.props.touched && React.createElement(\"div\", {\n            style: {\n              color: \"red\",\n              marginTop: \".5rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, _this2.props.error))), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"Country\"), React.createElement(Select, {\n            name: \"countryId\",\n            id: \"countryId\",\n            valid: !errors.countryId,\n            invalid: touched.countryId && !!errors.countryId,\n            options: options1,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            multi: true,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, errors.countryId)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"healthArea\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"Health Area\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"healthAreaName\",\n            id: \"healthAreaName\",\n            valid: !errors.healthAreaName,\n            invalid: touched.healthAreaName && !!errors.healthAreaName,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, errors.healthAreaName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: \"mr-1\",\n            disabled: isSubmitting || !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, isSubmitting ? 'Wait...' : 'Submit'), React.createElement(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            disabled: isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Validate\"), React.createElement(Button, {\n            type: \"reset\",\n            color: \"danger\",\n            className: \"mr-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, \"Cancel\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        size: \"md\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), \" Submit\"), React.createElement(Button, {\n        type: \"reset\",\n        size: \"md\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), \" Cancel\"))))));\n    }\n  }]);\n\n  return AddHealthArea;\n}(Component);\n\nexport default AddHealthArea;","map":{"version":3,"sources":["/home/altius/Documents/FASP/coreui-pro-react-2019-06-21/coreui-pro-react-admin-template-2.6.0/src/views/HealthArea/AddHealthArea.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","FormText","InputGroup","InputGroupAddon","InputGroupText","Formik","Yup","states","Select","HealthAreaService","AddHealthArea","props","getRealmList","then","response","console","log","data","setState","realms","options1","catch","error","state","realmList","length","map","item","i","realmId","label","label_en","handleChange","value","onChange","handleBlur","onBlur","flexBasis","initialValues","validate","validationSchema","onSubmit","values","errors","touched","handleSubmit","isSubmitting","isValid","setTouched","color","marginTop","countryId","healthAreaName","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input, FormText, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../Forms/ValidationForms/ValidationForms.css'\n// React select\nimport states from '../Forms/AdvancedForms/data/states';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\n\nimport HealthAreaService from \"../../api/HealthAreaService\";\n\n\nclass AddHealthArea extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n\n  componentDidMount() {\n    HealthAreaService.getRealmList()\n      .then(response => {\n        console.log(\"realm list---\", response.data);\n        this.setState({\n          realms: response.data\n        });\n        options1 = response.data\n\n      }).catch(\n        error => {\n          console.log(\"error occured---\" + error);\n        }\n      );\n  }\n\n  render() {\n    const { realms } = this.state;\n    let realmList = realms.length > 0\n      && realms.map((item, i) => {\n        return (\n          <option key={i} value={item.realmId}>\n            {item.label.label_en}\n          </option>\n        )\n      }, this);\n\n    handleChange = value => {\n      // this is going to call setFieldValue and manually update values.topcis\n      this.props.onChange(\"realmId\", value);\n    };\n\n    handleBlur = () => {\n      // this is going to call setFieldTouched and manually update touched.topcis\n      this.props.onBlur(\"realmId\", true);\n    };\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n            <Card>\n              <CardHeader>\n                <i className=\"icon-note\"></i><strong>Add Health Area</strong>{' '}\n              </CardHeader>\n              <CardBody>\n                <Formik\n                  initialValues={initialValues}\n                  validate={validate(validationSchema)}\n                  onSubmit={onSubmit}\n                  render={\n                    ({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                      isValid,\n                      setTouched\n                    }) => (\n                        <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                          <FormGroup>\n                            <Label>Realm</Label>\n                            <Select\n                              name=\"realmId\"\n                              id=\"realmId\"\n                              value={this.props.value}\n                              options={options1}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              valid={!errors.realmId}\n                              invalid={touched.realmId && !!errors.realmId}\n                              required\n                            />\n                            <FormFeedback>\n                              {!!this.props.error && this.props.touched && (\n                                <div style={{ color: \"red\", marginTop: \".5rem\" }}>\n                                  {this.props.error}\n                                </div>\n                              )}\n                            </FormFeedback>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label>Country</Label>\n                            <Select\n                              name=\"countryId\"\n                              id=\"countryId\"\n                              valid={!errors.countryId}\n                              invalid={touched.countryId && !!errors.countryId}\n                              options={options1}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              multi\n                              required\n                            />\n                            <FormFeedback>{errors.countryId}</FormFeedback>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"healthArea\">Health Area</Label>\n                            <Input type=\"text\"\n                              name=\"healthAreaName\"\n                              id=\"healthAreaName\"\n                              valid={!errors.healthAreaName}\n                              invalid={touched.healthAreaName && !!errors.healthAreaName}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              required />\n                            <FormFeedback>{errors.healthAreaName}</FormFeedback>\n                          </FormGroup>\n                          <FormGroup>\n                            <Button type=\"submit\" color=\"primary\" className=\"mr-1\" disabled={isSubmitting || !isValid}>{isSubmitting ? 'Wait...' : 'Submit'}</Button>\n                            <Button type=\"button\" color=\"success\" className=\"mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={isValid}>Validate</Button>\n                            <Button type=\"reset\" color=\"danger\" className=\"mr-1\">Cancel</Button>\n                          </FormGroup>\n                        </Form>\n                      )} />\n              </CardBody>\n              <CardFooter>\n                <Button type=\"submit\" size=\"md\" color=\"primary\"><i className=\"fa fa-dot-circle-o\"></i> Submit</Button>\n                <Button type=\"reset\" size=\"md\" color=\"danger\"><i className=\"fa fa-ban\"></i> Cancel</Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default AddHealthArea;\n"]},"metadata":{},"sourceType":"module"}