{"ast":null,"code":"'use strict';\n\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\nexports.nodebuffer = typeof Buffer !== \"undefined\"; // contains true if JSZip can read/generate Uint8Array, false otherwise.\n\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n  exports.blob = false;\n} else {\n  var buffer = new ArrayBuffer(0);\n\n  try {\n    exports.blob = new Blob([buffer], {\n      type: \"application/zip\"\n    }).size === 0;\n  } catch (e) {\n    try {\n      var Builder = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder;\n      var builder = new Builder();\n      builder.append(buffer);\n      exports.blob = builder.getBlob('application/zip').size === 0;\n    } catch (e) {\n      exports.blob = false;\n    }\n  }\n}\n\ntry {\n  exports.nodestream = !!require('readable-stream').Readable;\n} catch (e) {\n  exports.nodestream = false;\n}","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/node_modules/jszip/lib/support.js"],"names":["exports","base64","array","string","arraybuffer","ArrayBuffer","Uint8Array","nodebuffer","Buffer","uint8array","blob","buffer","Blob","type","size","e","Builder","self","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","append","getBlob","nodestream","require","Readable"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,MAAR,GAAiB,IAAjB;AACAD,OAAO,CAACE,KAAR,GAAgB,IAAhB;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GAAsB,OAAOC,WAAP,KAAuB,WAAvB,IAAsC,OAAOC,UAAP,KAAsB,WAAlF;AACAN,OAAO,CAACO,UAAR,GAAqB,OAAOC,MAAP,KAAkB,WAAvC,C,CACA;;AACAR,OAAO,CAACS,UAAR,GAAqB,OAAOH,UAAP,KAAsB,WAA3C;;AAEA,IAAI,OAAOD,WAAP,KAAuB,WAA3B,EAAwC;AACpCL,EAAAA,OAAO,CAACU,IAAR,GAAe,KAAf;AACH,CAFD,MAGK;AACD,MAAIC,MAAM,GAAG,IAAIN,WAAJ,CAAgB,CAAhB,CAAb;;AACA,MAAI;AACAL,IAAAA,OAAO,CAACU,IAAR,GAAe,IAAIE,IAAJ,CAAS,CAACD,MAAD,CAAT,EAAmB;AAC9BE,MAAAA,IAAI,EAAE;AADwB,KAAnB,EAEZC,IAFY,KAEH,CAFZ;AAGH,GAJD,CAKA,OAAOC,CAAP,EAAU;AACN,QAAI;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACE,iBAAzB,IAA8CF,IAAI,CAACG,cAAnD,IAAqEH,IAAI,CAACI,aAAxF;AACA,UAAIC,OAAO,GAAG,IAAIN,OAAJ,EAAd;AACAM,MAAAA,OAAO,CAACC,MAAR,CAAeZ,MAAf;AACAX,MAAAA,OAAO,CAACU,IAAR,GAAeY,OAAO,CAACE,OAAR,CAAgB,iBAAhB,EAAmCV,IAAnC,KAA4C,CAA3D;AACH,KALD,CAMA,OAAOC,CAAP,EAAU;AACNf,MAAAA,OAAO,CAACU,IAAR,GAAe,KAAf;AACH;AACJ;AACJ;;AAED,IAAI;AACAV,EAAAA,OAAO,CAACyB,UAAR,GAAqB,CAAC,CAACC,OAAO,CAAC,iBAAD,CAAP,CAA2BC,QAAlD;AACH,CAFD,CAEE,OAAMZ,CAAN,EAAS;AACPf,EAAAA,OAAO,CAACyB,UAAR,GAAqB,KAArB;AACH","sourcesContent":["'use strict';\n\nexports.base64 = true;\nexports.array = true;\nexports.string = true;\nexports.arraybuffer = typeof ArrayBuffer !== \"undefined\" && typeof Uint8Array !== \"undefined\";\nexports.nodebuffer = typeof Buffer !== \"undefined\";\n// contains true if JSZip can read/generate Uint8Array, false otherwise.\nexports.uint8array = typeof Uint8Array !== \"undefined\";\n\nif (typeof ArrayBuffer === \"undefined\") {\n    exports.blob = false;\n}\nelse {\n    var buffer = new ArrayBuffer(0);\n    try {\n        exports.blob = new Blob([buffer], {\n            type: \"application/zip\"\n        }).size === 0;\n    }\n    catch (e) {\n        try {\n            var Builder = self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder;\n            var builder = new Builder();\n            builder.append(buffer);\n            exports.blob = builder.getBlob('application/zip').size === 0;\n        }\n        catch (e) {\n            exports.blob = false;\n        }\n    }\n}\n\ntry {\n    exports.nodestream = !!require('readable-stream').Readable;\n} catch(e) {\n    exports.nodestream = false;\n}\n"]},"metadata":{},"sourceType":"script"}