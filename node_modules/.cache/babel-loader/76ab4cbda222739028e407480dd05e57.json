{"ast":null,"code":"import _classCallCheck from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/QAT/fasp-core-ui/src/views/Pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport navigation from '../../../_nav'; // routes config\n\nimport routes from '../../../routes';\nimport CryptoJS from 'crypto-js';\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode';\nimport { SECRET_KEY } from '../../../Constants.js';\nimport LoginService from '../../../api/LoginService';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      message: ''\n    };\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"loginClicked\",\n    value: function loginClicked() {\n      var _this2 = this;\n\n      var username = document.getElementById(\"username\").value;\n      var password = document.getElementById(\"password\").value;\n\n      if (navigator.onLine) {\n        LoginService.authenticate(username, password).then(function (response) {\n          var decoded = jwt_decode(response.data.token);\n          console.log(\"user id---\" + decoded.userId);\n          localStorage.removeItem(\"token-\" + decoded.userId);\n          localStorage.removeItem('username-' + decoded.userId);\n          localStorage.removeItem('password-' + decoded.userId);\n          localStorage.removeItem('curUser');\n          localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt(response.data.token.toString(), \"\".concat(SECRET_KEY)));\n          localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.username.toString(), \"\".concat(SECRET_KEY)));\n          localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.password.toString(), \"\".concat(SECRET_KEY)));\n          localStorage.setItem('typeOfSession', \"Online\");\n          localStorage.setItem('curUser', CryptoJS.AES.encrypt(decoded.userId.toString(), \"\".concat(SECRET_KEY)));\n          console.log(\"local storage length---\" + localStorage.length);\n          console.log(\"user cur ---\" + localStorage.getItem(\"curUser\"));\n          AuthenticationService.setupAxiosInterceptors();\n\n          _this2.props.history.push(\"/dashboard\");\n        }).catch(function (error) {\n          if (error.response != null && error.response.status === 401) {\n            switch (error.response.data) {\n              case \"Password expired\":\n                _this2.setState({\n                  message: error.response.data\n                });\n\n                _this2.props.history.push({\n                  pathname: \"/updateExpiredPassword\",\n                  state: {\n                    username: username\n                  }\n                });\n\n                break;\n\n              default:\n                _this2.setState({\n                  message: error.response.data\n                });\n\n                break;\n            }\n          } else {\n            switch (error.message) {\n              case \"Network Error\":\n                _this2.setState({\n                  message: error.message\n                });\n\n                break;\n\n              default:\n                _this2.setState({\n                  message: error.message\n                });\n\n                break;\n            }\n          }\n        });\n      } else {\n        var decryptedPassword = AuthenticationService.isUserLoggedIn(username, password);\n\n        if (decryptedPassword != \"\") {\n          bcrypt.compare(password, decryptedPassword, function (err, res) {\n            if (err) {\n              this.setState({\n                message: 'Error occured'\n              });\n            }\n\n            if (res) {\n              localStorage.setItem('typeOfSession', \"Offline\");\n              localStorage.setItem('curUser', CryptoJS.AES.encrypt(localStorage.getItem(\"tempUser\").toString(), \"\".concat(SECRET_KEY)));\n              localStorage.removeItem(\"tempUser\");\n              this.props.history.push(\"/welcome\");\n            } else {\n              this.setState({\n                message: 'Bad credentials.'\n              });\n            }\n          }.bind(this));\n        } else {\n          this.setState({\n            message: 'User not found.'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Sign In to your account\"), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Username\",\n        autoComplete: \"username\",\n        name: \"username\",\n        id: \"username\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        type: \"password\",\n        placeholder: \"Password\",\n        autoComplete: \"current-password\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"px-4\",\n        onClick: this.loginClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Col, {\n        xs: \"6\",\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"link\",\n        className: \"px-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Forgot password?\")))))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/src/views/Pages/Login/Login.js"],"names":["React","Component","Link","Button","Card","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","navigation","routes","CryptoJS","AuthenticationService","Online","bcrypt","jwt_decode","SECRET_KEY","LoginService","Login","props","state","message","loginClicked","bind","username","document","getElementById","value","password","navigator","onLine","authenticate","then","response","decoded","data","token","console","log","userId","localStorage","removeItem","setItem","AES","encrypt","toString","user","length","getItem","setupAxiosInterceptors","history","push","catch","error","status","setState","pathname","decryptedPassword","isUserLoggedIn","compare","err","res"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport navigation from '../../../_nav';\n// routes config\nimport routes from '../../../routes';\n\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode'\nimport { SECRET_KEY } from '../../../Constants.js'\nimport LoginService from '../../../api/LoginService'\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    }\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n  loginClicked() {\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n    if (navigator.onLine) {\n      LoginService.authenticate(username, password)\n        .then(response => {\n          var decoded = jwt_decode(response.data.token);\n          console.log(\"user id---\" + decoded.userId);\n          localStorage.removeItem(\"token-\" + decoded.userId);\n          localStorage.removeItem('username-' + decoded.userId);\n          localStorage.removeItem('password-' + decoded.userId);\n          localStorage.removeItem('curUser');\n\n          localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt((response.data.token).toString(), `${SECRET_KEY}`));\n          localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.username).toString(), `${SECRET_KEY}`));\n          localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n          localStorage.setItem('typeOfSession', \"Online\");\n          localStorage.setItem('curUser', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n          console.log(\"local storage length---\" + localStorage.length);\n          console.log(\"user cur ---\" + localStorage.getItem(\"curUser\"));\n          AuthenticationService.setupAxiosInterceptors();\n          this.props.history.push(`/dashboard`)\n        })\n        .catch(\n          error => {\n            if (error.response != null && error.response.status === 401) {\n              switch (error.response.data) {\n                case \"Password expired\":\n                  this.setState({\n                    message: error.response.data\n                  })\n                  this.props.history.push({\n                    pathname: \"/updateExpiredPassword\",\n                    state: {\n                      username: username\n                    }\n                  });\n                  break\n                default:\n                  this.setState({\n                    message: error.response.data\n                  })\n                  break\n              }\n            } else {\n              switch (error.message) {\n                case \"Network Error\":\n                  this.setState({\n                    message: error.message\n                  })\n                  break\n                default:\n                  this.setState({\n                    message: error.message\n                  })\n                  break\n              }\n            }\n          }\n        );\n    }\n    else {\n      var decryptedPassword = AuthenticationService.isUserLoggedIn(username, password);\n      if (decryptedPassword != \"\") {\n        bcrypt.compare(password, decryptedPassword, function (err, res) {\n          if (err) {\n            this.setState({ message: 'Error occured' });\n          }\n          if (res) {\n            localStorage.setItem('typeOfSession', \"Offline\");\n            localStorage.setItem('curUser', CryptoJS.AES.encrypt(localStorage.getItem(\"tempUser\").toString(), `${SECRET_KEY}`));\n            localStorage.removeItem(\"tempUser\");\n            this.props.history.push(`/welcome`)\n          } else {\n            this.setState({ message: 'Bad credentials.' });\n          }\n        }.bind(this));\n      }\n      else {\n        this.setState({ message: 'User not found.' });\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" placeholder=\"Username\" autoComplete=\"username\" name=\"username\" id=\"username\" required />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name=\"password\" id=\"password\" required />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"primary\" className=\"px-4\" onClick={this.loginClicked}>Login</Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}