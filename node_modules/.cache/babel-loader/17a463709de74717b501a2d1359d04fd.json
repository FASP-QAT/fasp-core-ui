{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Dimension/DimensionListComponent.js\";\nimport React, { Component } from 'react';\nimport UnitTypeService from '../../api/UnitTypeService.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\n\nvar UnitTypeListComponent = /*#__PURE__*/function (_Component) {\n  _inherits(UnitTypeListComponent, _Component);\n\n  function UnitTypeListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, UnitTypeListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UnitTypeListComponent).call(this, props));\n    _this.table = data.rows;\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: true,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        // console.log(\"row--------------\", row);\n        this.editUnitType(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      unitTypeList: []\n    };\n    _this.addNewUnitType = _this.addNewUnitType.bind(_assertThisInitialized(_this));\n    _this.editUnitType = _this.editUnitType.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UnitTypeListComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      UnitTypeService.getUnitTypeListAll().then(function (response) {\n        console.log(response.data);\n\n        _this2.setState({\n          unitTypeList: response.data\n        });\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"showUnitTypeLabel\",\n    value: function showUnitTypeLabel(cell, row) {\n      return cell.label_en;\n    }\n  }, {\n    key: \"editUnitType\",\n    value: function editUnitType(unitType) {\n      this.props.history.push({\n        pathname: \"/diamension/editDiamension\",\n        state: {\n          unitType: unitType\n        }\n      });\n    }\n  }, {\n    key: \"addNewUnitType\",\n    value: function addNewUnitType() {\n      if (navigator.onLine) {\n        this.props.history.push(\"/diamension/addDiamension\");\n      } else {\n        alert(\"You must be Online.\");\n      }\n    } // render() {\n    //     return (\n    //         <>\n    //             <p>{this.props.match.params.message}</p>\n    //             <div>\n    //                 <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewUnitType}>{myConst.ADD_NEW_UNIT_TYPE}</button><br /><br />\n    //             </div>\n    //             <div className=\"unitTypeList\">\n    //                 <h1>{myConst.UNIT_TYPE_LIST}</h1>\n    //                 <table border=\"1\" align=\"center\">\n    //                     <thead>\n    //                         <tr>\n    //                             <th>{myConst.UNIT_TYPE_NAME_EN}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_FR}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_SP}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_PO}</th>\n    //                         </tr>\n    //                     </thead>\n    //                     <tbody>\n    //                         {\n    //                             this.state.unitTypeList.map(unityType =>\n    //                                 <tr key={unityType.unitTypeId} onClick={() => this.editUnitType(unityType)}>\n    //                                     <td>{unityType.label.label_en}</td>\n    //                                     <td>{unityType.label.label_fr}</td>\n    //                                     <td>{unityType.label.label_sp}</td>\n    //                                     <td>{unityType.label.label_pr}</td>\n    //                                 </tr>\n    //                             )\n    //                         }\n    //                     </tbody>\n    //                 </table>\n    //             </div>\n    //         </>\n    //     );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), \"Dimension List\", React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Realm\",\n        onClick: this.addNewUnitType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.unitTypeList,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showUnitTypeLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Dimension List\")))));\n    }\n  }]);\n\n  return UnitTypeListComponent;\n}(Component);\n\nexport { UnitTypeListComponent as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Dimension/DimensionListComponent.js"],"names":["React","Component","UnitTypeService","AuthenticationService","NavLink","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","data","UnitTypeListComponent","props","table","rows","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editUnitType","bind","state","unitTypeList","addNewUnitType","setupAxiosInterceptors","getUnitTypeListAll","then","response","console","log","setState","catch","error","message","cell","label_en","unitType","history","push","pathname","navigator","onLine","alert","showUnitTypeLabel"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UnitTypeService from '../../api/UnitTypeService.js';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport { NavLink } from 'react-router-dom'\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport data from '../Tables/DataTable/_data';\n\nexport default class UnitTypeListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.table = data.rows;\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: true,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                // console.log(\"row--------------\", row);\n                this.editUnitType(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            unitTypeList: []\n        }\n        this.addNewUnitType = this.addNewUnitType.bind(this);\n        this.editUnitType = this.editUnitType.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        UnitTypeService.getUnitTypeListAll().then(response => {\n            console.log(response.data)\n            this.setState({\n                unitTypeList: response.data\n            })\n        })\n            .catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    showUnitTypeLabel(cell,row){\n        return cell.label_en;\n    }\n\n    editUnitType(unitType) {\n        this.props.history.push({\n            pathname: \"/diamension/editDiamension\",\n            state: { unitType: unitType }\n        });\n    }\n\n    addNewUnitType() {\n        if (navigator.onLine) {\n            this.props.history.push(`/diamension/addDiamension`)\n        } else {\n            alert(\"You must be Online.\")\n        }\n\n    }\n    // render() {\n\n    //     return (\n    //         <>\n    //             <p>{this.props.match.params.message}</p>\n    //             <div>\n    //                 <button type=\"button\" style={{ marginLeft: '-999px' }} onClick={this.addNewUnitType}>{myConst.ADD_NEW_UNIT_TYPE}</button><br /><br />\n    //             </div>\n\n    //             <div className=\"unitTypeList\">\n\n    //                 <h1>{myConst.UNIT_TYPE_LIST}</h1>\n    //                 <table border=\"1\" align=\"center\">\n    //                     <thead>\n    //                         <tr>\n    //                             <th>{myConst.UNIT_TYPE_NAME_EN}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_FR}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_SP}</th>\n    //                             <th>{myConst.UNIT_TYPE_NAME_PO}</th>\n                               \n\n    //                         </tr>\n    //                     </thead>\n    //                     <tbody>\n    //                         {\n    //                             this.state.unitTypeList.map(unityType =>\n\n    //                                 <tr key={unityType.unitTypeId} onClick={() => this.editUnitType(unityType)}>\n    //                                     <td>{unityType.label.label_en}</td>\n    //                                     <td>{unityType.label.label_fr}</td>\n    //                                     <td>{unityType.label.label_sp}</td>\n    //                                     <td>{unityType.label.label_pr}</td>\n                                       \n    //                                 </tr>\n    //                             )\n\n    //                         }\n    //                     </tbody>\n    //                 </table>\n    //             </div>\n\n\n    //         </>\n    //     );\n    // }\n\n\n    render() {\n\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i>Dimension List\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Realm\" onClick={this.addNewUnitType}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n\n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.unitTypeList} version=\"4\"  hover pagination search options={this.options}>\n                            <TableHeaderColumn isKey filterFormatted dataField=\"label\" dataSort dataFormat={this.showUnitTypeLabel} dataAlign=\"center\">Dimension List</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n        }\n}"]},"metadata":{},"sourceType":"module"}