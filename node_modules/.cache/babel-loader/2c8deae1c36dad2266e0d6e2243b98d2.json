{"ast":null,"code":"var MILI = 'milliseconds',\n    SECONDS = 'seconds',\n    MINUTES = 'minutes',\n    HOURS = 'hours',\n    DAY = 'day',\n    WEEK = 'week',\n    MONTH = 'month',\n    YEAR = 'year',\n    DECADE = 'decade',\n    CENTURY = 'century';\nvar dates = module.exports = {\n  add: function add(date, num, unit) {\n    date = new Date(date);\n\n    switch (unit) {\n      case MILI:\n      case SECONDS:\n      case MINUTES:\n      case HOURS:\n      case YEAR:\n        return dates[unit](date, dates[unit](date) + num);\n\n      case DAY:\n        return dates.date(date, dates.date(date) + num);\n\n      case WEEK:\n        return dates.date(date, dates.date(date) + 7 * num);\n\n      case MONTH:\n        return monthMath(date, num);\n\n      case DECADE:\n        return dates.year(date, dates.year(date) + num * 10);\n\n      case CENTURY:\n        return dates.year(date, dates.year(date) + num * 100);\n    }\n\n    throw new TypeError('Invalid units: \"' + unit + '\"');\n  },\n  subtract: function subtract(date, num, unit) {\n    return dates.add(date, -num, unit);\n  },\n  startOf: function startOf(date, unit, firstOfWeek) {\n    date = new Date(date);\n\n    switch (unit) {\n      case 'century':\n      case 'decade':\n      case 'year':\n        date = dates.month(date, 0);\n\n      case 'month':\n        date = dates.date(date, 1);\n\n      case 'week':\n      case 'day':\n        date = dates.hours(date, 0);\n\n      case 'hours':\n        date = dates.minutes(date, 0);\n\n      case 'minutes':\n        date = dates.seconds(date, 0);\n\n      case 'seconds':\n        date = dates.milliseconds(date, 0);\n    }\n\n    if (unit === DECADE) date = dates.subtract(date, dates.year(date) % 10, 'year');\n    if (unit === CENTURY) date = dates.subtract(date, dates.year(date) % 100, 'year');\n    if (unit === WEEK) date = dates.weekday(date, 0, firstOfWeek);\n    return date;\n  },\n  endOf: function endOf(date, unit, firstOfWeek) {\n    date = new Date(date);\n    date = dates.startOf(date, unit, firstOfWeek);\n    date = dates.add(date, 1, unit);\n    date = dates.subtract(date, 1, MILI);\n    return date;\n  },\n  eq: createComparer(function (a, b) {\n    return a === b;\n  }),\n  neq: createComparer(function (a, b) {\n    return a !== b;\n  }),\n  gt: createComparer(function (a, b) {\n    return a > b;\n  }),\n  gte: createComparer(function (a, b) {\n    return a >= b;\n  }),\n  lt: createComparer(function (a, b) {\n    return a < b;\n  }),\n  lte: createComparer(function (a, b) {\n    return a <= b;\n  }),\n  min: function min() {\n    return new Date(Math.min.apply(Math, arguments));\n  },\n  max: function max() {\n    return new Date(Math.max.apply(Math, arguments));\n  },\n  inRange: function inRange(day, min, max, unit) {\n    unit = unit || 'day';\n    return (!min || dates.gte(day, min, unit)) && (!max || dates.lte(day, max, unit));\n  },\n  milliseconds: createAccessor('Milliseconds'),\n  seconds: createAccessor('Seconds'),\n  minutes: createAccessor('Minutes'),\n  hours: createAccessor('Hours'),\n  day: createAccessor('Day'),\n  date: createAccessor('Date'),\n  month: createAccessor('Month'),\n  year: createAccessor('FullYear'),\n  decade: function decade(date, val) {\n    return val === undefined ? dates.year(dates.startOf(date, DECADE)) : dates.add(date, val + 10, YEAR);\n  },\n  century: function century(date, val) {\n    return val === undefined ? dates.year(dates.startOf(date, CENTURY)) : dates.add(date, val + 100, YEAR);\n  },\n  weekday: function weekday(date, val, firstDay) {\n    var weekday = (dates.day(date) + 7 - (firstDay || 0)) % 7;\n    return val === undefined ? weekday : dates.add(date, val - weekday, DAY);\n  },\n  diff: function diff(date1, date2, unit, asFloat) {\n    var dividend, divisor, result;\n\n    switch (unit) {\n      case MILI:\n      case SECONDS:\n      case MINUTES:\n      case HOURS:\n      case DAY:\n      case WEEK:\n        dividend = date2.getTime() - date1.getTime();\n        break;\n\n      case MONTH:\n      case YEAR:\n      case DECADE:\n      case CENTURY:\n        dividend = (dates.year(date2) - dates.year(date1)) * 12 + dates.month(date2) - dates.month(date1);\n        break;\n\n      default:\n        throw new TypeError('Invalid units: \"' + unit + '\"');\n    }\n\n    switch (unit) {\n      case MILI:\n        divisor = 1;\n        break;\n\n      case SECONDS:\n        divisor = 1000;\n        break;\n\n      case MINUTES:\n        divisor = 1000 * 60;\n        break;\n\n      case HOURS:\n        divisor = 1000 * 60 * 60;\n        break;\n\n      case DAY:\n        divisor = 1000 * 60 * 60 * 24;\n        break;\n\n      case WEEK:\n        divisor = 1000 * 60 * 60 * 24 * 7;\n        break;\n\n      case MONTH:\n        divisor = 1;\n        break;\n\n      case YEAR:\n        divisor = 12;\n        break;\n\n      case DECADE:\n        divisor = 120;\n        break;\n\n      case CENTURY:\n        divisor = 1200;\n        break;\n\n      default:\n        throw new TypeError('Invalid units: \"' + unit + '\"');\n    }\n\n    result = dividend / divisor;\n    return asFloat ? result : absoluteFloor(result);\n  }\n};\n\nfunction absoluteFloor(number) {\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\nfunction monthMath(date, val) {\n  var current = dates.month(date),\n      newMonth = current + val;\n  date = dates.month(date, newMonth);\n\n  while (newMonth < 0) {\n    newMonth = 12 + newMonth;\n  } //month rollover\n\n\n  if (dates.month(date) !== newMonth % 12) date = dates.date(date, 0); //move to last of month\n\n  return date;\n}\n\nfunction createAccessor(method) {\n  return function (date, val) {\n    if (val === undefined) return date['get' + method]();\n    date = new Date(date);\n    date['set' + method](val);\n    return date;\n  };\n}\n\nfunction createComparer(operator) {\n  return function (a, b, unit) {\n    return operator(+dates.startOf(a, unit), +dates.startOf(b, unit));\n  };\n}","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/node_modules/date-arithmetic/index.js"],"names":["MILI","SECONDS","MINUTES","HOURS","DAY","WEEK","MONTH","YEAR","DECADE","CENTURY","dates","module","exports","add","date","num","unit","Date","monthMath","year","TypeError","subtract","startOf","firstOfWeek","month","hours","minutes","seconds","milliseconds","weekday","endOf","eq","createComparer","a","b","neq","gt","gte","lt","lte","min","Math","apply","arguments","max","inRange","day","createAccessor","decade","val","undefined","century","firstDay","diff","date1","date2","asFloat","dividend","divisor","result","getTime","absoluteFloor","number","ceil","floor","current","newMonth","method","operator"],"mappings":"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","sourcesContent":["var MILI    = 'milliseconds'\n  , SECONDS = 'seconds'\n  , MINUTES = 'minutes'\n  , HOURS   = 'hours'\n  , DAY     = 'day'\n  , WEEK    = 'week'\n  , MONTH   = 'month'\n  , YEAR    = 'year'\n  , DECADE  = 'decade'\n  , CENTURY = 'century';\n\nvar dates = module.exports = {\n\n  add: function(date, num, unit) {\n    date = new Date(date)\n\n    switch (unit){\n      case MILI:\n      case SECONDS:\n      case MINUTES:\n      case HOURS:\n      case YEAR:\n        return dates[unit](date, dates[unit](date) + num)\n      case DAY:\n        return dates.date(date, dates.date(date) + num)\n      case WEEK:\n        return dates.date(date, dates.date(date) + (7 * num)) \n      case MONTH:\n        return monthMath(date, num)\n      case DECADE:\n        return dates.year(date, dates.year(date) + (num * 10))\n      case CENTURY:\n        return dates.year(date, dates.year(date) + (num * 100))\n    }\n\n    throw new TypeError('Invalid units: \"' + unit + '\"')\n  },\n\n  subtract: function(date, num, unit) {\n    return dates.add(date, -num, unit)\n  },\n\n  startOf: function(date, unit, firstOfWeek) {\n    date = new Date(date)\n\n    switch (unit) {\n      case 'century':\n      case 'decade':\n      case 'year':\n          date = dates.month(date, 0);\n      case 'month':\n          date = dates.date(date, 1);\n      case 'week':\n      case 'day':\n          date = dates.hours(date, 0);\n      case 'hours':\n          date = dates.minutes(date, 0);\n      case 'minutes':\n          date = dates.seconds(date, 0);\n      case 'seconds':\n          date = dates.milliseconds(date, 0);\n    }\n\n    if (unit === DECADE) \n      date = dates.subtract(date, dates.year(date) % 10, 'year')\n    \n    if (unit === CENTURY) \n      date = dates.subtract(date, dates.year(date) % 100, 'year')\n\n    if (unit === WEEK) \n      date = dates.weekday(date, 0, firstOfWeek);\n\n    return date\n  },\n\n\n  endOf: function(date, unit, firstOfWeek){\n    date = new Date(date)\n    date = dates.startOf(date, unit, firstOfWeek)\n    date = dates.add(date, 1, unit)\n    date = dates.subtract(date, 1, MILI)\n    return date\n  },\n\n  eq:  createComparer(function(a, b){ return a === b }),\n  neq: createComparer(function(a, b){ return a !== b }),\n  gt:  createComparer(function(a, b){ return a > b }),\n  gte: createComparer(function(a, b){ return a >= b }),\n  lt:  createComparer(function(a, b){ return a < b }),\n  lte: createComparer(function(a, b){ return a <= b }),\n\n  min: function(){\n    return new Date(Math.min.apply(Math, arguments))\n  },\n\n  max: function(){\n    return new Date(Math.max.apply(Math, arguments))\n  },\n  \n  inRange: function(day, min, max, unit){\n    unit = unit || 'day'\n\n    return (!min || dates.gte(day, min, unit))\n        && (!max || dates.lte(day, max, unit))\n  },\n\n  milliseconds:   createAccessor('Milliseconds'),\n  seconds:        createAccessor('Seconds'),\n  minutes:        createAccessor('Minutes'),\n  hours:          createAccessor('Hours'),\n  day:            createAccessor('Day'),\n  date:           createAccessor('Date'),\n  month:          createAccessor('Month'),\n  year:           createAccessor('FullYear'),\n\n  decade: function (date, val) {\n    return val === undefined \n      ? dates.year(dates.startOf(date, DECADE))\n      : dates.add(date, val + 10, YEAR);\n  },\n\n  century: function (date, val) {\n    return val === undefined \n      ? dates.year(dates.startOf(date, CENTURY))\n      : dates.add(date, val + 100, YEAR);\n  },\n\n  weekday: function (date, val, firstDay) {\n      var weekday = (dates.day(date) + 7 - (firstDay || 0) ) % 7;\n\n      return val === undefined \n        ? weekday \n        : dates.add(date, val - weekday, DAY);\n  },\n\n  diff: function (date1, date2, unit, asFloat) {\n    var dividend, divisor, result;\n\n    switch (unit) {\n      case MILI:\n      case SECONDS:\n      case MINUTES:\n      case HOURS:\n      case DAY:\n      case WEEK:\n        dividend = date2.getTime() - date1.getTime(); break;\n      case MONTH:\n      case YEAR:\n      case DECADE:\n      case CENTURY:\n        dividend = (dates.year(date2) - dates.year(date1)) * 12 + dates.month(date2) - dates.month(date1); break;\n      default:\n        throw new TypeError('Invalid units: \"' + unit + '\"');\n    }\n\n    switch (unit) {\n      case MILI:\n          divisor = 1; break;\n      case SECONDS:\n          divisor = 1000; break;\n      case MINUTES:\n          divisor = 1000 * 60; break;\n      case HOURS:\n          divisor = 1000 * 60 * 60; break;\n      case DAY:\n          divisor = 1000 * 60 * 60 * 24; break;\n      case WEEK:\n          divisor = 1000 * 60 * 60 * 24 * 7; break;\n      case MONTH:\n          divisor = 1; break;\n      case YEAR:\n          divisor = 12; break;\n      case DECADE:\n          divisor = 120; break;\n      case CENTURY:\n          divisor = 1200; break;\n      default:\n        throw new TypeError('Invalid units: \"' + unit + '\"');\n    }\n\n    result = dividend / divisor;\n\n    return asFloat ? result : absoluteFloor(result);\n  }\n};\n\nfunction absoluteFloor(number) {\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\nfunction monthMath(date, val){\n  var current = dates.month(date)\n    , newMonth  = (current + val);\n\n    date = dates.month(date, newMonth)\n\n    while (newMonth < 0 ) newMonth = 12 + newMonth\n      \n    //month rollover\n    if ( dates.month(date) !== ( newMonth % 12))\n      date = dates.date(date, 0) //move to last of month\n\n    return date\n}\n\nfunction createAccessor(method){\n  return function(date, val){\n    if (val === undefined)\n      return date['get' + method]()\n\n    date = new Date(date)\n    date['set' + method](val)\n    return date\n  }\n}\n\nfunction createComparer(operator) {\n  return function (a, b, unit) {\n    return operator(+dates.startOf(a, unit), +dates.startOf(b, unit))\n  };\n}\n"]},"metadata":{},"sourceType":"script"}