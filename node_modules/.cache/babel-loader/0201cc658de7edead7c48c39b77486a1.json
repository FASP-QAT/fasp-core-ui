{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Program/ExportProgram.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Col, Form, FormFeedback } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../../Constants.js';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport i18n from '../../i18n';\nvar initialValues = {\n  programId: ''\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    programId: Yup.string().required(i18n.t('static.program.validselectprogramtext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar ExportProgram = /*#__PURE__*/function (_Component) {\n  _inherits(ExportProgram, _Component);\n\n  function ExportProgram(props) {\n    var _this;\n\n    _classCallCheck(this, ExportProgram);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExportProgram).call(this, props));\n    _this.state = {\n      programList: []\n    };\n    _this.formSubmit = _this.formSubmit.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ExportProgram, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var lan = 'en';\n      var db1;\n      var openRequest = indexedDB.open('fasp', 1);\n\n      openRequest.onsuccess = function (e) {\n        console.log(\"in success\");\n        db1 = e.target.result;\n        var transaction = db1.transaction(['programData'], 'readwrite');\n        var program = transaction.objectStore('programData');\n        var prgList = [];\n        var getRequest = program.getAll();\n\n        getRequest.onerror = function (event) {// Handle errors!\n        };\n\n        getRequest.onsuccess = function (event) {\n          console.log(\"in success\");\n          var json = getRequest.result;\n          var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n          var userId = userBytes.toString(CryptoJS.enc.Utf8);\n\n          for (var i = 0; i < json.length; i++) {\n            var bytes = CryptoJS.AES.decrypt(json[i].programName, SECRET_KEY);\n            var programNameLabel = bytes.toString(CryptoJS.enc.Utf8);\n            console.log(\"ProgramNameLabel\", programNameLabel);\n\n            if (json[i].userId == userId) {\n              prgList[i] = {\n                value: json[i].id,\n                label: getLabelText(JSON.parse(programNameLabel), lan) + \"~v\" + json[i].version\n              };\n            }\n          }\n        }.bind(this);\n\n        transaction.oncomplete = function (event) {\n          console.log(\"ProgramList\", prgList);\n          this.setState({\n            programList: prgList\n          });\n          console.log(\"ProgramList\", this.state.programList);\n        }.bind(this);\n      }.bind(this);\n    }\n  }, {\n    key: \"formSubmit\",\n    value: function formSubmit() {\n      var zip = new JSZip();\n      var programId = this.state.programId;\n      var db1;\n      var storeOS;\n      var openRequest = indexedDB.open('fasp', 1);\n\n      openRequest.onsuccess = function (e) {\n        db1 = e.target.result;\n        var transaction = db1.transaction(['programData'], 'readwrite');\n        var program = transaction.objectStore('programData');\n        var getRequest = program.getAll();\n\n        getRequest.onerror = function (event) {// Handle errors!\n        };\n\n        getRequest.onsuccess = function (event) {\n          var myResult = [];\n          myResult = getRequest.result;\n\n          for (var i = 0; i < myResult.length; i++) {\n            for (var j = 0; j < programId.length; j++) {\n              if (myResult[i].id == programId[j].value) {\n                var txt = JSON.stringify(myResult[i]);\n                zip.file(programId[i].label + \"_\" + parseInt(i + 1) + \".txt\", txt);\n              }\n            }\n\n            if (i == myResult.length - 1) {\n              zip.generateAsync({\n                type: \"blob\"\n              }).then(function (content) {\n                FileSaver.saveAs(content, \"download.zip\");\n                this.props.history.push(\"/dashboard/\" + i18n.t('static.program.dataexportsuccess'));\n              }.bind(this));\n            }\n          }\n        }.bind(this);\n      }.bind(this);\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        programId: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"updateFieldData\",\n    value: function updateFieldData(value) {\n      console.log(\"Value\", value); // console.log(event.value)\n\n      this.setState({\n        programId: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        render: function render(_ref) {\n          var errors = _ref.errors,\n              touched = _ref.touched,\n              handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur;\n          return React.createElement(Form, {\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(CardHeader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, i18n.t('static.program.export'))), React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(Label, {\n            htmlFor: \"select\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, i18n.t('static.program.program')), React.createElement(Select, {\n            bsSize: \"sm\",\n            valid: !errors.programId,\n            invalid: touched.programId && !!errors.programId,\n            onChange: function onChange(e) {\n              handleChange(e);\n\n              _this2.updateFieldData(e);\n            },\n            onBlur: handleBlur,\n            name: \"programId\",\n            id: \"programId\",\n            multi: true,\n            options: _this2.state.programList,\n            value: _this2.state.programId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, errors.programId))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"warning\",\n            className: \"float-right mr-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-refresh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.reset')), React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this2.cancelClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this2.formSubmit();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), i18n.t('static.common.submit')), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/dashboard/\" + i18n.t('static.program.actioncancelled'));\n    }\n  }]);\n\n  return ExportProgram;\n}(Component);\n\nexport { ExportProgram as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Program/ExportProgram.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Col","Form","FormFeedback","Formik","Yup","getLabelText","Select","CryptoJS","SECRET_KEY","JSZip","FileSaver","i18n","initialValues","programId","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","ExportProgram","props","state","programList","formSubmit","bind","cancelClicked","lan","db1","openRequest","indexedDB","open","onsuccess","e","console","log","target","result","transaction","program","objectStore","prgList","getRequest","getAll","onerror","event","json","userBytes","AES","decrypt","localStorage","getItem","userId","toString","enc","Utf8","i","length","bytes","programName","programNameLabel","value","id","label","JSON","parse","version","oncomplete","setState","zip","storeOS","myResult","j","txt","stringify","file","parseInt","generateAsync","type","then","content","saveAs","history","push","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","name","focus","touched","handleChange","handleBlur","updateFieldData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Col, Form\n    , FormFeedback\n} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../Forms/ValidationForms/ValidationForms.css';\nimport 'react-select/dist/react-select.min.css';\nimport getLabelText from '../../CommonComponent/getLabelText.js';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.min.css';\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../../Constants.js'\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport i18n from '../../i18n';\n\nconst initialValues = {\n    programId: ''\n}\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        programId: Yup.string()\n        .required(i18n.t('static.program.validselectprogramtext'))\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\n\n\n\nexport default class ExportProgram extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programList: []\n        }\n        this.formSubmit = this.formSubmit.bind(this)\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        const lan = 'en'\n        var db1;\n        var openRequest = indexedDB.open('fasp', 1);\n        openRequest.onsuccess = function (e) {\n            console.log(\"in success\");\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var prgList = [];\n            var getRequest = program.getAll();\n            getRequest.onerror = function (event) {\n                // Handle errors!\n            };\n            getRequest.onsuccess = function (event) {\n                console.log(\"in success\")\n                var json = getRequest.result;\n                var userBytes = CryptoJS.AES.decrypt(localStorage.getItem('curUser'), SECRET_KEY);\n                var userId = userBytes.toString(CryptoJS.enc.Utf8);\n                for (var i = 0; i < json.length; i++) {\n                    var bytes = CryptoJS.AES.decrypt(json[i].programName, SECRET_KEY);\n                    var programNameLabel = bytes.toString(CryptoJS.enc.Utf8);\n                    console.log(\"ProgramNameLabel\", programNameLabel);\n                    if (json[i].userId == userId) {\n                        prgList[i] = { value: json[i].id, label: getLabelText(JSON.parse(programNameLabel), lan) + \"~v\" + json[i].version }\n                    }\n                }\n            }.bind(this)\n            transaction.oncomplete = function (event) {\n                console.log(\"ProgramList\", prgList)\n                this.setState({\n                    programList: prgList\n                })\n                console.log(\"ProgramList\", this.state.programList);\n            }.bind(this)\n        }.bind(this)\n    }\n\n    formSubmit() {\n        var zip = new JSZip();\n        var programId = this.state.programId;\n        var db1;\n        var storeOS;\n        var openRequest = indexedDB.open('fasp', 1);\n        openRequest.onsuccess = function (e) {\n            db1 = e.target.result;\n            var transaction = db1.transaction(['programData'], 'readwrite');\n            var program = transaction.objectStore('programData');\n            var getRequest = program.getAll();\n            getRequest.onerror = function (event) {\n                // Handle errors!\n            };\n            getRequest.onsuccess = function (event) {\n                var myResult = [];\n                myResult = getRequest.result;\n                for (var i = 0; i < myResult.length; i++) {\n                    for (var j = 0; j < programId.length; j++) {\n                        if (myResult[i].id == programId[j].value) {\n                            var txt = JSON.stringify(myResult[i]);\n                            zip.file(programId[i].label + \"_\" + parseInt(i + 1) + \".txt\", txt);\n                        }\n                    }\n                    if (i == myResult.length - 1) {\n                        zip.generateAsync({\n                            type: \"blob\"\n                        }).then(function (content) {\n                            FileSaver.saveAs(content, \"download.zip\");\n                            this.props.history.push(`/dashboard/` + i18n.t('static.program.dataexportsuccess'))\n                        }.bind(this));\n                    }\n                }\n            }.bind(this);\n        }.bind(this)\n    }\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            programId: true\n        }\n        )\n        this.validateForm(errors)\n    }\n\n    validateForm(errors) {\n        this.findFirstError('simpleForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    updateFieldData(value) {\n        console.log(\"Value\", value);\n        // console.log(event.value)\n        this.setState({ programId: value });\n    }\n\n    render() {\n        return (\n            <>\n                <Col xs=\"12\" sm=\"8\">\n                    <Card>\n                        <Formik\n                            initialValues={initialValues}\n                            render={\n                                ({\n                                    errors,\n                                    touched,\n                                    handleChange,\n                                    handleBlur,\n                                }) => (\n                                        <Form noValidate name='simpleForm'>\n                                            <CardHeader>\n                                                <strong>{i18n.t('static.program.export')}</strong>\n                                            </CardHeader>\n                                            <CardBody>\n                                                <FormGroup >\n                                                    <Label htmlFor=\"select\">{i18n.t('static.program.program')}</Label>\n                                                    <Select\n                                                        bsSize=\"sm\"\n                                                        valid={!errors.programId}\n                                                        invalid={touched.programId && !!errors.programId}\n                                                        onChange={(e) => { handleChange(e); this.updateFieldData(e) }}\n                                                        onBlur={handleBlur} name=\"programId\" id=\"programId\"\n                                                        multi\n                                                        options={this.state.programList}\n                                                        value={this.state.programId}\n                                                    />\n                                                    <FormFeedback>{errors.programId}</FormFeedback>\n                                                </FormGroup>\n                                            </CardBody>\n                                            <CardFooter>\n                                                <FormGroup>\n                                                    <Button type=\"reset\" size=\"sm\" color=\"warning\" className=\"float-right mr-1\"><i className=\"fa fa-refresh\"></i> {i18n.t('static.common.reset')}</Button>\n                                                    <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                                    <Button type=\"button\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.formSubmit()}><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')}</Button>\n                                                    &nbsp;\n                                                </FormGroup>\n                                            </CardFooter>\n                                        </Form>\n                                    )} />\n                    </Card>\n                </Col>\n            </>\n        )\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/dashboard/` +  i18n.t('static.program.actioncancelled'))\n    }\n\n}"]},"metadata":{},"sourceType":"module"}