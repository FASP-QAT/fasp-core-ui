{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar getMapIterator = require('../internals/get-map-iterator');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aFunction(callbackfn);\n    iterate(iterator, function (key, value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, key, map);\n      }\n    }, undefined, true, true);\n    if (noInitial) throw TypeError('Reduce of empty map with no initial value');\n    return accumulator;\n  }\n});","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/node_modules/core-js/modules/esnext.map.reduce.js"],"names":["$","require","IS_PURE","anObject","aFunction","getMapIterator","iterate","target","proto","real","forced","reduce","callbackfn","map","iterator","noInitial","arguments","length","accumulator","undefined","key","value","TypeError"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAER;AAAlD,CAAD,EAA8D;AAC7DS,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC;AAAW;AAA3B,IAAiD;AACvD,QAAIC,GAAG,GAAGV,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIW,QAAQ,GAAGT,cAAc,CAACQ,GAAD,CAA7B;AACA,QAAIE,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnC;AACA,QAAIC,WAAW,GAAGH,SAAS,GAAGI,SAAH,GAAeH,SAAS,CAAC,CAAD,CAAnD;AACAZ,IAAAA,SAAS,CAACQ,UAAD,CAAT;AACAN,IAAAA,OAAO,CAACQ,QAAD,EAAW,UAAUM,GAAV,EAAeC,KAAf,EAAsB;AACtC,UAAIN,SAAJ,EAAe;AACbA,QAAAA,SAAS,GAAG,KAAZ;AACAG,QAAAA,WAAW,GAAGG,KAAd;AACD,OAHD,MAGO;AACLH,QAAAA,WAAW,GAAGN,UAAU,CAACM,WAAD,EAAcG,KAAd,EAAqBD,GAArB,EAA0BP,GAA1B,CAAxB;AACD;AACF,KAPM,EAOJM,SAPI,EAOO,IAPP,EAOa,IAPb,CAAP;AAQA,QAAIJ,SAAJ,EAAe,MAAMO,SAAS,CAAC,2CAAD,CAAf;AACf,WAAOJ,WAAP;AACD;AAjB4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aFunction(callbackfn);\n    iterate(iterator, function (key, value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, key, map);\n      }\n    }, undefined, true, true);\n    if (noInitial) throw TypeError('Reduce of empty map with no initial value');\n    return accumulator;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}