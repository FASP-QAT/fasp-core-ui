{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $reduceRight = require('../internals/array-reduce').right;\n\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduceRight'); // For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', {\n  1: 0\n}); // `Array.prototype.reduceRight` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !STRICT_METHOD || !USES_TO_LENGTH\n}, {\n  reduceRight: function reduceRight(callbackfn\n  /* , initialValue */\n  ) {\n    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["/home/altius/Documents/FASP/fasp-core-ui/node_modules/core-js/modules/es.array.reduce-right.js"],"names":["$","require","$reduceRight","right","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","reduceRight","callbackfn","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,KAAxD;;AACA,IAAIC,mBAAmB,GAAGH,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAII,uBAAuB,GAAGJ,OAAO,CAAC,0CAAD,CAArC;;AAEA,IAAIK,aAAa,GAAGF,mBAAmB,CAAC,aAAD,CAAvC,C,CACA;;AACA,IAAIG,cAAc,GAAGF,uBAAuB,CAAC,QAAD,EAAW;AAAE,KAAG;AAAL,CAAX,CAA5C,C,CAEA;AACA;;AACAL,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,OAAV;AAAmBC,EAAAA,KAAK,EAAE,IAA1B;AAAgCC,EAAAA,MAAM,EAAE,CAACJ,aAAD,IAAkB,CAACC;AAA3D,CAAD,EAA8E;AAC7EI,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC;AAAW;AAAhC,IAAsD;AACjE,WAAOV,YAAY,CAAC,IAAD,EAAOU,UAAP,EAAmBC,SAAS,CAACC,MAA7B,EAAqCD,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAA3E,CAAnB;AACD;AAH4E,CAA9E,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $reduceRight = require('../internals/array-reduce').right;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduceRight');\n// For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduceRight` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}