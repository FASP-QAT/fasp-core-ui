{"ast":null,"code":"/* eslint-disable no-new */\nvar global = require('../internals/global');\n\nvar fails = require('../internals/fails');\n\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\n\nvar ArrayBuffer = global.ArrayBuffer;\nvar Int8Array = global.Int8Array;\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\n  Int8Array(1);\n}) || !fails(function () {\n  new Int8Array(-1);\n}) || !checkCorrectnessOfIteration(function (iterable) {\n  new Int8Array();\n  new Int8Array(null);\n  new Int8Array(1.5);\n  new Int8Array(iterable);\n}, true) || fails(function () {\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\n});","map":{"version":3,"sources":["/home/altius/NetbeansProjects/gitRepos/fasp-core-ui/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js"],"names":["global","require","fails","checkCorrectnessOfIteration","NATIVE_ARRAY_BUFFER_VIEWS","ArrayBuffer","Int8Array","module","exports","iterable","undefined","length"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIE,2BAA2B,GAAGF,OAAO,CAAC,6CAAD,CAAzC;;AACA,IAAIG,yBAAyB,GAAGH,OAAO,CAAC,qCAAD,CAAP,CAA+CG,yBAA/E;;AAEA,IAAIC,WAAW,GAAGL,MAAM,CAACK,WAAzB;AACA,IAAIC,SAAS,GAAGN,MAAM,CAACM,SAAvB;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACJ,yBAAD,IAA8B,CAACF,KAAK,CAAC,YAAY;AAChEI,EAAAA,SAAS,CAAC,CAAD,CAAT;AACD,CAFoD,CAApC,IAEX,CAACJ,KAAK,CAAC,YAAY;AACvB,MAAII,SAAJ,CAAc,CAAC,CAAf;AACD,CAFW,CAFK,IAIX,CAACH,2BAA2B,CAAC,UAAUM,QAAV,EAAoB;AACrD,MAAIH,SAAJ;AACA,MAAIA,SAAJ,CAAc,IAAd;AACA,MAAIA,SAAJ,CAAc,GAAd;AACA,MAAIA,SAAJ,CAAcG,QAAd;AACD,CALiC,EAK/B,IAL+B,CAJjB,IASLP,KAAK,CAAC,YAAY;AAC5B;AACA,SAAO,IAAII,SAAJ,CAAc,IAAID,WAAJ,CAAgB,CAAhB,CAAd,EAAkC,CAAlC,EAAqCK,SAArC,EAAgDC,MAAhD,KAA2D,CAAlE;AACD,CAHgB,CATjB","sourcesContent":["/* eslint-disable no-new */\nvar global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;\n\nvar ArrayBuffer = global.ArrayBuffer;\nvar Int8Array = global.Int8Array;\n\nmodule.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {\n  Int8Array(1);\n}) || !fails(function () {\n  new Int8Array(-1);\n}) || !checkCorrectnessOfIteration(function (iterable) {\n  new Int8Array();\n  new Int8Array(null);\n  new Int8Array(1.5);\n  new Int8Array(iterable);\n}, true) || fails(function () {\n  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;\n});\n"]},"metadata":{},"sourceType":"script"}