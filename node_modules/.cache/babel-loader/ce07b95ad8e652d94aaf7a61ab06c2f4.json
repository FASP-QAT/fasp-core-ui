{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, ContainerFluid, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, FormFeedback, Label, FormGroup } from 'reactstrap';\nimport navigation from '../../../_nav'; // routes config\n\nimport routes from '../../../routes';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../../Forms/ValidationForms/ValidationForms.css';\nimport CryptoJS from 'crypto-js';\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode';\nimport { SECRET_KEY } from '../../../Constants.js';\nimport LoginService from '../../../api/LoginService';\nimport i18n from '../../../i18n';\nvar initialValues = {\n  username: \"\",\n  password: \"\"\n};\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    username: Yup.string().required(i18n.t('static.login.usernametext')),\n    password: Yup.string().required(i18n.t('static.login.passwordtext'))\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      message: ''\n    };\n    _this.forgotPassword = _this.forgotPassword.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        username: true,\n        password: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('loginForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword() {\n      this.props.history.push(\"/forgotPassword\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-content flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Login-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'assets/img/QAT-logo.png',\n        className: \"img-fluid upper-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-4 Login-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n          var username = values.username;\n          var password = values.password;\n\n          if (navigator.onLine) {\n            LoginService.authenticate(username, password).then(function (response) {\n              var decoded = jwt_decode(response.data.token);\n              localStorage.removeItem(\"token-\" + decoded.userId);\n              localStorage.removeItem(\"user-\" + decoded.userId);\n              localStorage.removeItem('username-' + decoded.userId);\n              localStorage.removeItem('password-' + decoded.userId);\n              localStorage.removeItem('curUser');\n              localStorage.removeItem('lang');\n              localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt(response.data.token.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('user-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.username.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.password.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('typeOfSession', \"Online\");\n              localStorage.setItem('curUser', CryptoJS.AES.encrypt(decoded.userId.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('lang', decoded.user.language.languageCode);\n              AuthenticationService.setupAxiosInterceptors();\n\n              _this2.props.history.push(\"/dashboard\");\n            }).catch(function (error) {\n              console.log(error);\n\n              if (error.message === \"Network Error\") {\n                _this2.setState({\n                  message: error.message\n                });\n              } else {\n                switch (error.response.status) {\n                  case 500:\n                  case 401:\n                  case 404:\n                  case 412:\n                    _this2.setState({\n                      message: error.response.data.messageCode\n                    });\n\n                    break;\n\n                  case 406:\n                    _this2.props.history.push({\n                      pathname: \"/updateExpiredPassword\",\n                      state: {\n                        username: username\n                      }\n                    });\n\n                    break;\n\n                  default:\n                    _this2.setState({\n                      message: 'static.unkownError'\n                    });\n\n                    console.log(\"Error code unkown\");\n                    break;\n                }\n              }\n            });\n          } else {\n            var decryptedPassword = AuthenticationService.isUserLoggedIn(username, password);\n\n            if (decryptedPassword != \"\") {\n              bcrypt.compare(password, decryptedPassword, function (err, res) {\n                if (err) {\n                  this.setState({\n                    message: 'Error occured'\n                  });\n                }\n\n                if (res) {\n                  localStorage.setItem('typeOfSession', \"Offline\");\n                  localStorage.setItem('curUser', CryptoJS.AES.encrypt(localStorage.getItem(\"tempUser\").toString(), \"\".concat(SECRET_KEY)));\n                  localStorage.removeItem(\"tempUser\");\n                  this.props.history.push(\"/welcome\");\n                } else {\n                  this.setState({\n                    message: 'Bad credentials.'\n                  });\n                }\n              }.bind(_this2));\n            } else {\n              _this2.setState({\n                message: 'User not found.'\n              });\n            }\n          }\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"loginForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, i18n.t(_this2.props.match.params.message)), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, i18n.t(_this2.state.message)), React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, i18n.t('static.login.login')), React.createElement(\"p\", {\n            className: \"text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, i18n.t('static.login.signintext')), React.createElement(InputGroup, {\n            className: \"mb-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          }, React.createElement(InputGroupAddon, {\n            addonType: \"prepend\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205\n            },\n            __self: this\n          }, React.createElement(InputGroupText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"icon-user Loginicon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }))), React.createElement(Input, {\n            type: \"text\",\n            placeholder: i18n.t('static.login.username'),\n            autoComplete: \"username\",\n            name: \"username\",\n            id: \"username\",\n            valid: !errors.username,\n            invalid: touched.username && !!errors.username,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }, errors.username)), React.createElement(InputGroup, {\n            className: \"mb-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          }, React.createElement(InputGroupAddon, {\n            addonType: \"prepend\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(InputGroupText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"icon-lock Loginicon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }))), React.createElement(Input, {\n            type: \"password\",\n            placeholder: i18n.t('static.login.password'),\n            autoComplete: \"current-password\",\n            name: \"password\",\n            id: \"password\",\n            valid: !errors.password,\n            invalid: touched.password && !!errors.password,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, errors.password)), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: \"px-4\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, i18n.t('static.login.login'))), React.createElement(Col, {\n            xs: \"6\",\n            className: \"text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }, React.createElement(Online, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            color: \"link\",\n            className: \"px-0\",\n            onClick: _this2.forgotPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, i18n.t('static.login.forgotpassword'), \"?\")))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })))))), React.createElement(Col, {\n        className: \"Login-bttom \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"Login-p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"The USAID Global Health Supply Chain Program-Procurement and Supply Management (GHSC-PSM) project is funded under USAID Contract No. AID-OAA-I-15-0004. GHSC-PSM connects technical solutions and proven commercial processes to promote efficient and cost-effective health supply chains worldwide. Our goal is to ensure uninterrupted supplies of health commodities to save lives and create a healthier future for all. The project purchases and delivers health commodities, offers comprehensive technical assistance to strengthen national supply chain systems, and provides global supply chain leadership.For more information,visit ghsupplychain.org.The information provided in this tool is not official U.S. government information and does not represent the views or positions of the Agency for International Development or the U.S. government.\"))), React.createElement(Row, {\n        className: \"text-center Login-bttom-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'assets/img/wordmark.png',\n        className: \"img-fluid\",\n        width: \"420\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'assets/img/USAID-presidents-malaria-initiative.png',\n        className: \"img-fluid\",\n        width: \"420\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        md: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'assets/img/PEPFAR-logo.png',\n        className: \"img-fluid\",\n        width: \"420\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Pages/Login/Login.js"],"names":["React","Component","Link","Button","Card","CardBody","CardGroup","Col","Container","ContainerFluid","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","FormFeedback","Label","FormGroup","navigation","routes","Formik","Yup","CryptoJS","AuthenticationService","Online","bcrypt","jwt_decode","SECRET_KEY","LoginService","i18n","initialValues","username","password","validationSchema","values","object","shape","string","required","t","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","Login","props","state","message","forgotPassword","bind","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","name","focus","history","push","setSubmitting","setErrors","navigator","onLine","authenticate","then","response","decoded","data","token","localStorage","removeItem","userId","setItem","AES","encrypt","toString","user","language","languageCode","setupAxiosInterceptors","catch","console","log","setState","status","messageCode","pathname","decryptedPassword","isUserLoggedIn","compare","err","res","getItem","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","match","params","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, ContainerFluid, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, FormFeedback, Label, FormGroup } from 'reactstrap';\nimport navigation from '../../../_nav';\n// routes config\nimport routes from '../../../routes';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../../Forms/ValidationForms/ValidationForms.css'\n\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode'\nimport { SECRET_KEY } from '../../../Constants.js'\nimport LoginService from '../../../api/LoginService'\nimport i18n from '../../../i18n'\n\n\nconst initialValues = {\n  username: \"\",\n  password: \"\"\n}\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    username: Yup.string()\n      .required(i18n.t('static.login.usernametext')),\n    password: Yup.string()\n      .required(i18n.t('static.login.passwordtext'))\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    }\n    this.forgotPassword = this.forgotPassword.bind(this);\n  }\n\n  touchAll(setTouched, errors) {\n    setTouched({\n      username: true,\n      password: true\n    }\n    )\n    this.validateForm(errors)\n  }\n  validateForm(errors) {\n    this.findFirstError('loginForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n  findFirstError(formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  forgotPassword() {\n    this.props.history.push(`/forgotPassword`)\n  }\n  render() {\n    return (\n      <div className=\"main-content flex-row align-items-center\">\n\n        <div className=\"Login-component\">\n          \n          <div>\n            <img src={'assets/img/QAT-logo.png'} className=\"img-fluid upper-logo\" />\n          </div>\n         \n          <Col>\n            <Row className=\"justify-content-center\">\n              <Col md=\"4\">\n                <CardGroup>\n                  <Card className=\"p-4 Login-card\">\n                    <CardBody>\n                      <Formik\n                        initialValues={initialValues}\n                        validate={validate(validationSchema)}\n                        onSubmit={(values, { setSubmitting, setErrors }) => {\n                          var username = values.username;\n                          var password = values.password;\n                          if (navigator.onLine) {\n                            LoginService.authenticate(username, password)\n                              .then(response => {\n                                var decoded = jwt_decode(response.data.token);\n                                localStorage.removeItem(\"token-\" + decoded.userId);\n                                localStorage.removeItem(\"user-\" + decoded.userId);\n                                localStorage.removeItem('username-' + decoded.userId);\n                                localStorage.removeItem('password-' + decoded.userId);\n                                localStorage.removeItem('curUser');\n                                localStorage.removeItem('lang');\n\n                                localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt((response.data.token).toString(), `${SECRET_KEY}`));\n                                localStorage.setItem('user-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user).toString(), `${SECRET_KEY}`));\n                                localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.username).toString(), `${SECRET_KEY}`));\n                                localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                                localStorage.setItem('typeOfSession', \"Online\");\n                                localStorage.setItem('curUser', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                                localStorage.setItem('lang', decoded.user.language.languageCode);\n                                AuthenticationService.setupAxiosInterceptors();\n                                this.props.history.push(`/dashboard`)\n                              })\n                              .catch(\n                                error => {\n                                  console.log(error);\n                                  if (error.message === \"Network Error\") {\n                                    this.setState({ message: error.message });\n                                  } else {\n                                    switch (error.response.status) {\n                                      case 500:\n                                      case 401:\n                                      case 404:\n                                      case 412:\n                                        this.setState({ message: error.response.data.messageCode });\n                                        break;\n                                      case 406:\n                                        this.props.history.push({\n                                          pathname: \"/updateExpiredPassword\",\n                                          state: {\n                                            username\n                                          }\n                                        });\n                                        break;\n                                      default:\n                                        this.setState({ message: 'static.unkownError' });\n                                        console.log(\"Error code unkown\");\n                                        break;\n                                    }\n                                  }\n                                }\n                              );\n                          }\n                          else {\n                            var decryptedPassword = AuthenticationService.isUserLoggedIn(username, password);\n                            if (decryptedPassword != \"\") {\n                              bcrypt.compare(password, decryptedPassword, function (err, res) {\n                                if (err) {\n                                  this.setState({ message: 'Error occured' });\n                                }\n                                if (res) {\n                                  localStorage.setItem('typeOfSession', \"Offline\");\n                                  localStorage.setItem('curUser', CryptoJS.AES.encrypt(localStorage.getItem(\"tempUser\").toString(), `${SECRET_KEY}`));\n                                  localStorage.removeItem(\"tempUser\");\n                                  this.props.history.push(`/welcome`)\n                                } else {\n                                  this.setState({ message: 'Bad credentials.' });\n                                }\n                              }.bind(this));\n                            }\n                            else {\n                              this.setState({ message: 'User not found.' });\n                            }\n                          }\n                        }}\n                        render={\n                          ({\n                            values,\n                            errors,\n                            touched,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            isSubmitting,\n                            isValid,\n                            setTouched\n                          }) => (\n                              <Form onSubmit={handleSubmit} noValidate name=\"loginForm\">\n                                <h5>{i18n.t(this.props.match.params.message)}</h5>\n                                <h5>{i18n.t(this.state.message)}</h5>\n                                <h1>{i18n.t('static.login.login')}</h1>\n                                <p className=\"text-muted\">{i18n.t('static.login.signintext')}</p>\n                                <InputGroup className=\"mb-3\">\n                                  <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                      <i className=\"icon-user Loginicon\"></i>\n                                    </InputGroupText>\n                                  </InputGroupAddon>\n                                  <Input\n                                    type=\"text\"\n                                    placeholder={i18n.t('static.login.username')}\n                                    autoComplete=\"username\"\n                                    name=\"username\"\n                                    id=\"username\"\n                                    valid={!errors.username}\n                                    invalid={touched.username && !!errors.username}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    required />\n                                  <FormFeedback>{errors.username}</FormFeedback>\n                                </InputGroup>\n                                <InputGroup className=\"mb-4\">\n                                  <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>\n                                      <i className=\"icon-lock Loginicon\"></i>\n                                    </InputGroupText>\n                                  </InputGroupAddon>\n                                  <Input\n                                    type=\"password\"\n                                    placeholder={i18n.t('static.login.password')}\n                                    autoComplete=\"current-password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    valid={!errors.password}\n                                    invalid={touched.password && !!errors.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    required />\n                                  <FormFeedback>{errors.password}</FormFeedback>\n                                </InputGroup>\n                                <Row>\n                                  <Col xs=\"6\">\n                                    <Button type=\"submit\" color=\"primary\" className=\"px-4\" onClick={() => this.touchAll(setTouched, errors)} >{i18n.t('static.login.login')}</Button>\n                                  </Col>\n                                  <Col xs=\"6\" className=\"text-right\">\n                                    <Online><Button type=\"button\" color=\"link\" className=\"px-0\" onClick={this.forgotPassword}>{i18n.t('static.login.forgotpassword')}?</Button></Online>\n                                  </Col>\n\n                                </Row>\n                              </Form>\n                            )} />\n                    </CardBody>\n                  </Card>\n\n                </CardGroup>\n              </Col>\n            </Row>\n\n            < Col className=\"Login-bttom \">\n              <Col xs=\"12\">\n                <CardBody>\n                  \n                  <p className=\"Login-p\">The USAID Global Health Supply Chain Program-Procurement and Supply Management\n                  (GHSC-PSM) project is funded under USAID Contract No. AID-OAA-I-15-0004.\n                  GHSC-PSM connects technical solutions and proven commercial processes to\n                  promote efficient and cost-effective health supply chains worldwide.\n                  Our goal is to ensure uninterrupted supplies of health commodities to save\n                  lives and create a healthier future for all. The project purchases and delivers\n                  health commodities, offers comprehensive technical assistance to strengthen\n                  national supply chain systems, and provides global supply chain leadership.For more\n                  information,visit ghsupplychain.org.The information provided in this tool is not official\n                  U.S. government information and does not represent the views or positions of the Agency for International\n                  Development or the U.S. government.\n              </p>\n                </CardBody>\n              </Col>\n              <Row className=\"text-center Login-bttom-logo\">\n                <Col md=\"4\">\n                  <CardBody>\n                    <img src={'assets/img/wordmark.png'} className=\"img-fluid\" width=\"420\" />\n                  </CardBody>\n                </Col>\n                <Col md=\"4\">\n                  <CardBody>\n                    <img src={'assets/img/USAID-presidents-malaria-initiative.png'} className=\"img-fluid\" width=\"420\" />\n                  </CardBody>\n                </Col>\n                <Col md=\"4\">\n                  <CardBody>\n                    <img src={'assets/img/PEPFAR-logo.png'} className=\"img-fluid\" width=\"420\" />\n                  </CardBody>\n                </Col>\n              </Row>\n            </ Col>\n\n          </Col>\n        </div>\n      </div>\n\n\n\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}