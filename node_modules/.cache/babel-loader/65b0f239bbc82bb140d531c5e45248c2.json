{"ast":null,"code":"import * as JsStore from 'jsstore';\nimport { IDataBase, DATA_TYPE, ITable } from 'jsstore';\nimport CryptoJS from 'crypto-js';\nimport { SECRET_KEY } from '../Constants.js'; // This will ensure that we are using only one instance. \n// Otherwise due to multiple instance multiple worker will be created.\n\nexport var idbCon = new JsStore.Connection();\nexport var dbname = 'fasp';\nexport function syncDataSource(json) {\n  console.log(\"in data source\");\n  var newData = [];\n\n  for (var i = 0; i < json.length; i++) {\n    newData[i] = {\n      dataSourceId: json[i].dataSourceId,\n      active: json[i].active,\n      dataSourceType: json[i].dataSourceType,\n      label: json[i].label\n    };\n  }\n\n  connection.insert({\n    into: \"dataSource\",\n    upsert: true,\n    values: [newData] //you can insert multiple values at a time\n\n  });\n}","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/src/CommonComponent/JsStoreFunctionsCore.js"],"names":["JsStore","IDataBase","DATA_TYPE","ITable","CryptoJS","SECRET_KEY","idbCon","Connection","dbname","syncDataSource","json","console","log","newData","i","length","dataSourceId","active","dataSourceType","label","connection","insert","into","upsert","values"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,SAAzB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,SAA7C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,iBAA3B,C,CACA;AACA;;AACA,OAAO,IAAMC,MAAM,GAAG,IAAIN,OAAO,CAACO,UAAZ,EAAf;AACP,OAAO,IAAMC,MAAM,GAAG,MAAf;AAEP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,MAAIC,OAAO,GAAC,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1BD,IAAAA,OAAO,CAACC,CAAD,CAAP,GAAa;AACTE,MAAAA,YAAY,EAACN,IAAI,CAACI,CAAD,CAAJ,CAAQE,YADZ;AAETC,MAAAA,MAAM,EAACP,IAAI,CAACI,CAAD,CAAJ,CAAQG,MAFN;AAGTC,MAAAA,cAAc,EAACR,IAAI,CAACI,CAAD,CAAJ,CAAQI,cAHd;AAITC,MAAAA,KAAK,EAACT,IAAI,CAACI,CAAD,CAAJ,CAAQK;AAJL,KAAb;AAMH;;AACDC,EAAAA,UAAU,CAACC,MAAX,CAAkB;AACdC,IAAAA,IAAI,EAAE,YADQ;AAEdC,IAAAA,MAAM,EAAC,IAFO;AAGdC,IAAAA,MAAM,EAAE,CAACX,OAAD,CAHM,CAGK;;AAHL,GAAlB;AAKH","sourcesContent":["import * as JsStore from 'jsstore';\nimport { IDataBase, DATA_TYPE, ITable } from 'jsstore';\nimport CryptoJS from 'crypto-js'\nimport { SECRET_KEY } from '../Constants.js'\n// This will ensure that we are using only one instance. \n// Otherwise due to multiple instance multiple worker will be created.\nexport const idbCon = new JsStore.Connection();\nexport const dbname = 'fasp';\n\nexport function syncDataSource(json) {\n    console.log(\"in data source\")\n    var newData=[]\n    for(var i=0;i<json.length;i++){\n        newData[i] = {\n            dataSourceId:json[i].dataSourceId,\n            active:json[i].active,\n            dataSourceType:json[i].dataSourceType,\n            label:json[i].label\n        }\n    }\n    connection.insert({\n        into: \"dataSource\",\n        upsert:true,\n        values: [newData], //you can insert multiple values at a time\n    });\n}"]},"metadata":{},"sourceType":"module"}