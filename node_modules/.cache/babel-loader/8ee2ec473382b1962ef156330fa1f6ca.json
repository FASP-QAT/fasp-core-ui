{"ast":null,"code":"import _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Translations/DatabaseTranslations.js\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport jexcel from 'jexcel';\nimport \"../ProductCategory/style.css\";\nimport \"../../../node_modules/jexcel/dist/jexcel.css\";\nimport { Card, CardBody, CardHeader, FormGroup, CardFooter, Button, Col } from 'reactstrap';\nimport i18n from '../../i18n';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport LabelsService from '../../api/LabelService.js';\n\nvar DatabaseTranslations = /*#__PURE__*/function (_React$Component) {\n  _inherits(DatabaseTranslations, _React$Component);\n\n  function DatabaseTranslations(props) {\n    var _this;\n\n    _classCallCheck(this, DatabaseTranslations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DatabaseTranslations).call(this, props));\n\n    _this.saveData = function () {\n      var _this2 = this;\n\n      var labelList = this.state.labelList;\n      var tableJson = this.el.getRowData(this.state.rowId);\n      var mapOfLastRow = new Map(Object.entries(tableJson));\n      var jsonOfLastRow = {\n        labelId: mapOfLastRow.get(\"0\"),\n        label_en: mapOfLastRow.get(\"1\"),\n        label_sp: mapOfLastRow.get(\"4\"),\n        label_fr: mapOfLastRow.get(\"2\"),\n        label_pr: mapOfLastRow.get(\"3\")\n      };\n      labelList[this.state.rowId] = JSON.stringify(jsonOfLastRow);\n      this.setState({\n        labelList: labelList\n      });\n\n      if (JSON.stringify(this.el.getComments()).length == 2) {\n        AuthenticationService.setupAxiosInterceptors();\n        var json = this.state.labelList;\n        LabelsService.saveDatabaseLabels(json).then(function (response) {\n          _this2.props.history.push(\"/dashboard/\".concat(response.data.messageCode));\n        }).catch(function (error) {\n          if (error.message === \"Network Error\") {\n            _this2.setState({\n              message: error.message\n            });\n          } else {\n            switch (error.response ? error.response.status : \"\") {\n              case 500:\n              case 401:\n              case 404:\n              case 406:\n              case 412:\n                _this2.setState({\n                  message: error.response.data.messageCode\n                });\n\n                break;\n\n              default:\n                _this2.setState({\n                  message: 'static.unkownError'\n                });\n\n                break;\n            }\n          }\n        });\n      } else {\n        alert(\"\".concat(i18n.t('static.label.validData')));\n      }\n    };\n\n    _this.changed = function (instance, cell, x, y, value) {\n      if (x == 1) {\n        var col = \"B\".concat(parseInt(y) + 1);\n        this.el.setStyle(col, \"background-color\", \"transparent\");\n        this.el.setStyle(col, \"background-color\", \"yellow\");\n\n        if (value == \"\") {\n          this.el.setComments(col, \"\".concat(i18n.t('static.label.fieldRequired')));\n        } else {\n          this.el.setComments(col, \"\");\n        }\n      } else if (x == 2) {\n        var col = \"C\".concat(parseInt(y) + 1);\n        this.el.setStyle(col, \"background-color\", \"transparent\");\n        this.el.setStyle(col, \"background-color\", \"yellow\");\n      } else if (x == 3) {\n        var col = \"D\".concat(parseInt(y) + 1);\n        this.el.setStyle(col, \"background-color\", \"transparent\");\n        this.el.setStyle(col, \"background-color\", \"yellow\");\n      } else if (x == 4) {\n        var col = \"E\".concat(parseInt(y) + 1);\n        this.el.setStyle(col, \"background-color\", \"transparent\");\n        this.el.setStyle(col, \"background-color\", \"yellow\");\n      }\n\n      var labelList = this.state.labelList;\n      var tableJson = this.el.getRowData(y);\n      var map = new Map(Object.entries(tableJson));\n      var json = {\n        labelId: map.get(\"0\"),\n        label_en: map.get(\"1\"),\n        label_sp: map.get(\"4\"),\n        label_fr: map.get(\"2\"),\n        label_pr: map.get(\"3\")\n      };\n      labelList[y] = JSON.stringify(json);\n      this.setState({\n        labelList: labelList\n      });\n    }.bind(_assertThisInitialized(_this));\n\n    _this.editStart = function (instance, cell, x, y, value) {\n      this.setState({\n        rowId: y\n      });\n    }.bind(_assertThisInitialized(_this));\n\n    _this.options = props.options;\n    _this.state = {\n      changedFlag: [],\n      labelList: [],\n      rowId: 1\n    };\n    _this.saveData = _this.saveData.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DatabaseTranslations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      LabelsService.getDatabaseLabelsList().then(function (response) {\n        var json = response.data;\n        var data = [];\n        var label = [];\n\n        for (var i = 0; i < json.length; i++) {\n          data = [];\n          data[0] = json[i].labelId; // A\n\n          data[1] = json[i].label_en; //B\n\n          data[2] = json[i].label_fr; //C\n\n          data[3] = json[i].label_pr; //D\n\n          data[4] = json[i].label_sp; //E\n\n          label[i] = data;\n        }\n\n        var options = _defineProperty({\n          data: label,\n          colHeaders: [\"\".concat(i18n.t('static.translation.labelId')), \"\".concat(i18n.t('static.translation.english')), \"\".concat(i18n.t('static.translation.french')), \"\".concat(i18n.t('static.translation.pourtegese')), \"\".concat(i18n.t('static.translation.spanish'))],\n          colWidths: [80, 80, 80, 80, 80],\n          columns: [{\n            type: 'hidden'\n          }],\n          pagination: 25,\n          search: true,\n          columnSorting: true,\n          tableOverflow: true,\n          wordWrap: true,\n          paginationOptions: [25, 50, 75, 100],\n          allowInsertColumn: false,\n          allowManualInsertColumn: false,\n          onchange: _this3.changed,\n          oneditionstart: _this3.editStart,\n          allowDeleteRow: false\n        }, \"tableOverflow\", false);\n\n        _this3.el = jexcel(ReactDOM.findDOMNode(_this3).children[1].children[1], options);\n      }).catch(function (error) {\n        if (error.message === \"Network Error\") {\n          _this3.setState({\n            message: error.message\n          });\n        } else {\n          switch (error.response ? error.response.status : \"\") {\n            case 500:\n            case 401:\n            case 404:\n            case 406:\n            case 412:\n              _this3.setState({\n                message: error.response.data.messageCode\n              });\n\n              break;\n\n            default:\n              _this3.setState({\n                message: 'static.unkownError'\n              });\n\n              break;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(Col, {\n        xs: \"12\",\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, i18n.t(this.state.message)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, i18n.t('static.label.databaseTranslations'))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"danger\",\n        className: \"float-right mr-1\",\n        onClick: this.cancelClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), \" \", i18n.t('static.common.cancel')), React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"success\",\n        className: \"float-right mr-1\",\n        onClick: function onClick() {\n          return _this4.saveData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), i18n.t('static.common.submit'), \" \"), \"\\xA0\")))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/dashboard/\".concat(i18n.t('static.actionCancelled')));\n    }\n  }]);\n\n  return DatabaseTranslations;\n}(React.Component);\n\nexport { DatabaseTranslations as default };","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Translations/DatabaseTranslations.js"],"names":["React","ReactDOM","jexcel","Card","CardBody","CardHeader","FormGroup","CardFooter","Button","Col","i18n","AuthenticationService","LabelsService","DatabaseTranslations","props","saveData","labelList","state","tableJson","el","getRowData","rowId","mapOfLastRow","Map","Object","entries","jsonOfLastRow","labelId","get","label_en","label_sp","label_fr","label_pr","JSON","stringify","setState","getComments","length","setupAxiosInterceptors","json","saveDatabaseLabels","then","response","history","push","data","messageCode","catch","error","message","status","alert","t","changed","instance","cell","x","y","value","col","concat","parseInt","setStyle","setComments","map","bind","editStart","options","changedFlag","cancelClicked","getDatabaseLabelsList","label","i","colHeaders","colWidths","columns","type","pagination","search","columnSorting","tableOverflow","wordWrap","paginationOptions","allowInsertColumn","allowManualInsertColumn","onchange","oneditionstart","allowDeleteRow","findDOMNode","children","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport jexcel from 'jexcel';\n\nimport \"../ProductCategory/style.css\"\nimport \"../../../node_modules/jexcel/dist/jexcel.css\";\nimport {\n    Card, CardBody, CardHeader, FormGroup,\n    CardFooter, Button, Col\n} from 'reactstrap';\nimport i18n from '../../i18n';\nimport AuthenticationService from '../common/AuthenticationService.js';\nimport LabelsService from '../../api/LabelService.js';\n\nexport default class DatabaseTranslations extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.options = props.options;\n        this.state = {\n            changedFlag: [],\n            labelList: [],\n            rowId: 1\n        }\n        this.saveData = this.saveData.bind(this)\n        this.cancelClicked = this.cancelClicked.bind(this);\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        LabelsService.getDatabaseLabelsList().then(response => {\n            var json = response.data;\n            var data = [];\n            var label = [];\n            for (var i = 0; i < json.length; i++) {\n                data = [];\n                data[0] = json[i].labelId;// A\n                data[1] = json[i].label_en;//B\n                data[2] = json[i].label_fr;//C\n                data[3] = json[i].label_pr;//D\n                data[4] = json[i].label_sp;//E\n                label[i] = data;\n            }\n            var options = {\n                data: label,\n                colHeaders: [\n                    `${i18n.t('static.translation.labelId')}`,\n                    `${i18n.t('static.translation.english')}`,\n                    `${i18n.t('static.translation.french')}`,\n                    `${i18n.t('static.translation.pourtegese')}`,\n                    `${i18n.t('static.translation.spanish')}`,\n                ],\n                colWidths: [80, 80, 80, 80, 80],\n                columns: [\n                    { type: 'hidden' },\n                ],\n                pagination: 25,\n                search: true,\n                columnSorting: true,\n                tableOverflow: true,\n                wordWrap: true,\n                paginationOptions: [25, 50, 75, 100],\n                allowInsertColumn: false,\n                allowManualInsertColumn: false,\n                onchange: this.changed,\n                oneditionstart: this.editStart,\n                allowDeleteRow: false,\n                tableOverflow: false\n                // tableHeight: '500px',\n            };\n            this.el = jexcel(ReactDOM.findDOMNode(this).children[1].children[1], options);\n        }).catch(\n            error => {\n                if (error.message === \"Network Error\") {\n                    this.setState({ message: error.message });\n                } else {\n                    switch (error.response ? error.response.status : \"\") {\n                        case 500:\n                        case 401:\n                        case 404:\n                        case 406:\n                        case 412:\n                            this.setState({ message: error.response.data.messageCode });\n                            break;\n                        default:\n                            this.setState({ message: 'static.unkownError' });\n                            break;\n                    }\n                }\n            }\n        );\n    };\n\n    saveData = function () {\n        var labelList = this.state.labelList;\n        var tableJson = this.el.getRowData(this.state.rowId);\n        var mapOfLastRow = new Map(Object.entries(tableJson))\n        var jsonOfLastRow = {\n            labelId: mapOfLastRow.get(\"0\"),\n            label_en: mapOfLastRow.get(\"1\"),\n            label_sp: mapOfLastRow.get(\"4\"),\n            label_fr: mapOfLastRow.get(\"2\"),\n            label_pr: mapOfLastRow.get(\"3\")\n        }\n        labelList[this.state.rowId] = (JSON.stringify(jsonOfLastRow));\n        this.setState({\n            labelList: labelList\n        })\n        if (JSON.stringify(this.el.getComments()).length == 2) {\n            AuthenticationService.setupAxiosInterceptors();\n            var json = this.state.labelList;\n            LabelsService.saveDatabaseLabels(json).then(response => {\n                this.props.history.push(`/dashboard/${response.data.messageCode}`)\n            }).catch(\n                error => {\n                    if (error.message === \"Network Error\") {\n                        this.setState({ message: error.message });\n                    } else {\n                        switch (error.response ? error.response.status : \"\") {\n                            case 500:\n                            case 401:\n                            case 404:\n                            case 406:\n                            case 412:\n                                this.setState({ message: error.response.data.messageCode });\n                                break;\n                            default:\n                                this.setState({ message: 'static.unkownError' });\n                                break;\n                        }\n                    }\n                }\n            );\n        } else {\n            alert(`${i18n.t('static.label.validData')}`);\n        }\n    };\n\n    render() {\n        return (\n            <>\n                <Col xs=\"12\" sm=\"12\">\n                    <h5>{i18n.t(this.state.message)}</h5>\n                    <Card>\n                        <CardHeader>\n                            <strong>{i18n.t('static.label.databaseTranslations')}</strong>\n                        </CardHeader>\n                        <CardBody>\n                        </CardBody>\n                        <CardFooter>\n                            <FormGroup>\n                                <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> {i18n.t('static.common.cancel')}</Button>\n                                <Button type=\"button\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.saveData()} ><i className=\"fa fa-check\"></i>{i18n.t('static.common.submit')} </Button>\n                                &nbsp;\n                            </FormGroup>\n                        </CardFooter>\n                    </Card>\n                </Col>\n            </>\n        )\n    }\n\n    cancelClicked() {\n        this.props.history.push(`/dashboard/${i18n.t('static.actionCancelled')}`)\n    }\n\n    changed = function (instance, cell, x, y, value) {\n        if (x == 1) {\n            var col = (\"B\").concat(parseInt(y) + 1);\n            this.el.setStyle(col, \"background-color\", \"transparent\");\n            this.el.setStyle(col, \"background-color\", \"yellow\");\n            if (value == \"\") {\n                this.el.setComments(col, `${i18n.t('static.label.fieldRequired')}`);\n            } else {\n                this.el.setComments(col, \"\");\n            }\n        } else if (x == 2) {\n            var col = (\"C\").concat(parseInt(y) + 1);\n            this.el.setStyle(col, \"background-color\", \"transparent\");\n            this.el.setStyle(col, \"background-color\", \"yellow\");\n        } else if (x == 3) {\n            var col = (\"D\").concat(parseInt(y) + 1);\n            this.el.setStyle(col, \"background-color\", \"transparent\");\n            this.el.setStyle(col, \"background-color\", \"yellow\");\n        } else if (x == 4) {\n            var col = (\"E\").concat(parseInt(y) + 1);\n            this.el.setStyle(col, \"background-color\", \"transparent\");\n            this.el.setStyle(col, \"background-color\", \"yellow\");\n        }\n\n        var labelList = this.state.labelList;\n        var tableJson = this.el.getRowData(y);\n        var map = new Map(Object.entries(tableJson))\n        var json = {\n            labelId: map.get(\"0\"),\n            label_en: map.get(\"1\"),\n            label_sp: map.get(\"4\"),\n            label_fr: map.get(\"2\"),\n            label_pr: map.get(\"3\")\n        }\n        labelList[y] = (JSON.stringify(json));\n        this.setState({\n            labelList: labelList\n        })\n    }.bind(this)\n\n    editStart = function (instance, cell, x, y, value) {\n        this.setState({\n            rowId: y\n        })\n    }.bind(this)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}