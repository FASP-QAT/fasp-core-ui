{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar anObject = require('../internals/an-object');\n\nvar getMapIterator = require('../internals/get-map-iterator');\n\nvar iterate = require('../internals/iterate'); // `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  keyOf: function keyOf(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value) {\n      if (value === searchElement) return iterate.stop(key);\n    }, undefined, true, true).result;\n  }\n});","map":{"version":3,"sources":["/home/altius/NodeJs/gitHubRepos/fasp-core-ui/node_modules/core-js/modules/esnext.map.key-of.js"],"names":["$","require","IS_PURE","anObject","getMapIterator","iterate","target","proto","real","forced","keyOf","searchElement","key","value","stop","undefined","result"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEP;AAAlD,CAAD,EAA8D;AAC7DQ,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,aAAf,EAA8B;AACnC,WAAON,OAAO,CAACD,cAAc,CAACD,QAAQ,CAAC,IAAD,CAAT,CAAf,EAAiC,UAAUS,GAAV,EAAeC,KAAf,EAAsB;AACnE,UAAIA,KAAK,KAAKF,aAAd,EAA6B,OAAON,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAP;AAC9B,KAFa,EAEXG,SAFW,EAEA,IAFA,EAEM,IAFN,CAAP,CAEmBC,MAF1B;AAGD;AAL4D,CAA9D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar anObject = require('../internals/an-object');\nvar getMapIterator = require('../internals/get-map-iterator');\nvar iterate = require('../internals/iterate');\n\n// `Map.prototype.includes` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: IS_PURE }, {\n  keyOf: function keyOf(searchElement) {\n    return iterate(getMapIterator(anObject(this)), function (key, value) {\n      if (value === searchElement) return iterate.stop(key);\n    }, undefined, true, true).result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}