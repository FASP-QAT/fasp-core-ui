{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isFunction2 = require(\"lodash/isFunction\");\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2);\n\nexports.getOffsetOverride = getOffsetOverride;\nexports.getLayoutStyles = getLayoutStyles;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* global google */\n\n\nfunction getOffsetOverride(containerElement, props) {\n  var getPixelPositionOffset = props.getPixelPositionOffset; //\n  // Allows the component to control the visual position of the OverlayView\n  // relative to the LatLng pixel position.\n  //\n\n  if ((0, _isFunction3.default)(getPixelPositionOffset)) {\n    return getPixelPositionOffset(containerElement.offsetWidth, containerElement.offsetHeight);\n  } else {\n    return {};\n  }\n}\n\nfunction createLatLng(inst, Type) {\n  return new Type(inst.lat, inst.lng);\n}\n\nfunction createLatLngBounds(inst, Type) {\n  return new Type(new google.maps.LatLng(inst.ne.lat, inst.ne.lng), new google.maps.LatLng(inst.sw.lat, inst.sw.lng));\n}\n\nfunction ensureOfType(inst, type, factory) {\n  if (inst instanceof type) {\n    return inst;\n  } else {\n    return factory(inst, type);\n  }\n}\n\nfunction getLayoutStylesByBounds(mapCanvasProjection, offset, bounds) {\n  var ne = mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast());\n  var sw = mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest());\n\n  if (ne && sw) {\n    return {\n      left: sw.x + offset.x + \"px\",\n      top: ne.y + offset.y + \"px\",\n      width: ne.x - sw.x - offset.x + \"px\",\n      height: sw.y - ne.y - offset.y + \"px\"\n    };\n  }\n\n  return {\n    left: \"-9999px\",\n    top: \"-9999px\"\n  };\n}\n\nfunction getLayoutStylesByPosition(mapCanvasProjection, offset, position) {\n  var point = mapCanvasProjection.fromLatLngToDivPixel(position);\n\n  if (point) {\n    var x = point.x,\n        y = point.y;\n    return {\n      left: x + offset.x + \"px\",\n      top: y + offset.y + \"px\"\n    };\n  }\n\n  return {\n    left: \"-9999px\",\n    top: \"-9999px\"\n  };\n}\n\nfunction getLayoutStyles(mapCanvasProjection, offset, props) {\n  if (props.bounds) {\n    var bounds = ensureOfType(props.bounds, google.maps.LatLngBounds, createLatLngBounds);\n    return getLayoutStylesByBounds(mapCanvasProjection, offset, bounds);\n  } else {\n    var position = ensureOfType(props.position, google.maps.LatLng, createLatLng);\n    return getLayoutStylesByPosition(mapCanvasProjection, offset, position);\n  }\n}","map":{"version":3,"sources":["/home/altius/Documents/QAT/fasp-core-ui/node_modules/react-google-maps/lib/utils/OverlayViewHelper.js"],"names":["Object","defineProperty","exports","value","_isFunction2","require","_isFunction3","_interopRequireDefault","getOffsetOverride","getLayoutStyles","obj","__esModule","default","containerElement","props","getPixelPositionOffset","offsetWidth","offsetHeight","createLatLng","inst","Type","lat","lng","createLatLngBounds","google","maps","LatLng","ne","sw","ensureOfType","type","factory","getLayoutStylesByBounds","mapCanvasProjection","offset","bounds","fromLatLngToDivPixel","getNorthEast","getSouthWest","left","x","top","y","width","height","getLayoutStylesByPosition","position","point","LatLngBounds"],"mappings":"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","sourcesContent":["\"use strict\"\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n})\n\nvar _isFunction2 = require(\"lodash/isFunction\")\n\nvar _isFunction3 = _interopRequireDefault(_isFunction2)\n\nexports.getOffsetOverride = getOffsetOverride\nexports.getLayoutStyles = getLayoutStyles\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj }\n}\n\n/* global google */\nfunction getOffsetOverride(containerElement, props) {\n  var getPixelPositionOffset = props.getPixelPositionOffset\n  //\n  // Allows the component to control the visual position of the OverlayView\n  // relative to the LatLng pixel position.\n  //\n\n  if ((0, _isFunction3.default)(getPixelPositionOffset)) {\n    return getPixelPositionOffset(\n      containerElement.offsetWidth,\n      containerElement.offsetHeight\n    )\n  } else {\n    return {}\n  }\n}\n\nfunction createLatLng(inst, Type) {\n  return new Type(inst.lat, inst.lng)\n}\n\nfunction createLatLngBounds(inst, Type) {\n  return new Type(\n    new google.maps.LatLng(inst.ne.lat, inst.ne.lng),\n    new google.maps.LatLng(inst.sw.lat, inst.sw.lng)\n  )\n}\n\nfunction ensureOfType(inst, type, factory) {\n  if (inst instanceof type) {\n    return inst\n  } else {\n    return factory(inst, type)\n  }\n}\n\nfunction getLayoutStylesByBounds(mapCanvasProjection, offset, bounds) {\n  var ne = mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast())\n  var sw = mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest())\n  if (ne && sw) {\n    return {\n      left: sw.x + offset.x + \"px\",\n      top: ne.y + offset.y + \"px\",\n      width: ne.x - sw.x - offset.x + \"px\",\n      height: sw.y - ne.y - offset.y + \"px\",\n    }\n  }\n  return {\n    left: \"-9999px\",\n    top: \"-9999px\",\n  }\n}\n\nfunction getLayoutStylesByPosition(mapCanvasProjection, offset, position) {\n  var point = mapCanvasProjection.fromLatLngToDivPixel(position)\n  if (point) {\n    var x = point.x,\n      y = point.y\n\n    return {\n      left: x + offset.x + \"px\",\n      top: y + offset.y + \"px\",\n    }\n  }\n  return {\n    left: \"-9999px\",\n    top: \"-9999px\",\n  }\n}\n\nfunction getLayoutStyles(mapCanvasProjection, offset, props) {\n  if (props.bounds) {\n    var bounds = ensureOfType(\n      props.bounds,\n      google.maps.LatLngBounds,\n      createLatLngBounds\n    )\n    return getLayoutStylesByBounds(mapCanvasProjection, offset, bounds)\n  } else {\n    var position = ensureOfType(\n      props.position,\n      google.maps.LatLng,\n      createLatLng\n    )\n    return getLayoutStylesByPosition(mapCanvasProjection, offset, position)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}