{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/region/ListRegionComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport i18n from '../../i18n';\nimport RegionService from \"../../api/RegionService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nvar RegionListComponent = /*#__PURE__*/function (_Component) {\n  _inherits(RegionListComponent, _Component);\n\n  function RegionListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, RegionListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegionListComponent).call(this, props));\n    _this.options = {\n      sortIndicator: true,\n      hideSizePerPage: false,\n      paginationSize: 3,\n      hidePageListOnlyOnePage: true,\n      clearSearch: true,\n      alwaysShowAllBtns: false,\n      withFirstAndLast: false,\n      onRowClick: function (row) {\n        this.editRegion(row);\n      }.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      regionList: [],\n      message: ''\n    };\n    _this.editRegion = _this.editRegion.bind(_assertThisInitialized(_this));\n    _this.addRegion = _this.addRegion.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RegionListComponent, [{\n    key: \"editRegion\",\n    value: function editRegion(region) {\n      this.props.history.push({\n        pathname: \"/region/editRegion\",\n        state: {\n          region: region\n        }\n      });\n    }\n  }, {\n    key: \"addRegion\",\n    value: function addRegion(region) {\n      this.props.history.push({\n        pathname: \"/region/addRegion\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      RegionService.getRegionList().then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          regionList: response.data.data\n        });\n      }).catch(function (error) {\n        console.log(\"Could not set the Region list error occurred\");\n        console.log(error);\n\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"showRegionLabel\",\n    value: function showRegionLabel(cell, row) {\n      return cell.label_en;\n    }\n  }, {\n    key: \"showRealmCountryLabel\",\n    value: function showRealmCountryLabel(cell, row) {\n      return cell.country.label.label_en;\n    }\n  }, {\n    key: \"showStatus\",\n    value: function showStatus(cell, row) {\n      if (cell) {\n        return \"Active\";\n      } else {\n        return \"Disabled\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"animated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, i18n.t('static.region.regionlist')), ' ', React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:void();\",\n        title: \"Add Region\",\n        onClick: this.addRegion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.regionList,\n        version: \"4\",\n        hover: true,\n        pagination: true,\n        search: true,\n        headerStyle: {\n          background: '#D1EEEE'\n        },\n        options: this.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"regionId\",\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"ID\"), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"label\",\n        dataSort: true,\n        dataFormat: this.showRegionLabel,\n        dataAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, i18n.t('static.region.region')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"realmCountry\",\n        dataFormat: this.showRealmCountryLabel,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, i18n.t('static.region.country')), React.createElement(TableHeaderColumn, {\n        filterFormatted: true,\n        dataField: \"active\",\n        dataFormat: this.showStatus,\n        dataAlign: \"center\",\n        dataSort: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, i18n.t('static.common.status'))))));\n    }\n  }]);\n\n  return RegionListComponent;\n}(Component);\n\nexport default RegionListComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/region/ListRegionComponent.js"],"names":["React","Component","Card","CardHeader","CardBody","BootstrapTable","TableHeaderColumn","i18n","RegionService","AuthenticationService","RegionListComponent","props","options","sortIndicator","hideSizePerPage","paginationSize","hidePageListOnlyOnePage","clearSearch","alwaysShowAllBtns","withFirstAndLast","onRowClick","row","editRegion","bind","state","regionList","message","addRegion","region","history","push","pathname","setupAxiosInterceptors","getRegionList","then","response","console","log","setState","data","catch","error","cell","label_en","country","label","t","background","showRegionLabel","showRealmCountryLabel","showStatus"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport 'react-bootstrap-table/dist//react-bootstrap-table-all.min.css';\nimport i18n from '../../i18n'\n\nimport RegionService from \"../../api/RegionService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nclass RegionListComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.options = {\n            sortIndicator: true,\n            hideSizePerPage: false,\n            paginationSize: 3,\n            hidePageListOnlyOnePage: true,\n            clearSearch: true,\n            alwaysShowAllBtns: false,\n            withFirstAndLast: false,\n            onRowClick: function (row) {\n                this.editRegion(row);\n            }.bind(this)\n\n        }\n        this.state = {\n            regionList: [],\n            message: ''\n        }\n        this.editRegion = this.editRegion.bind(this);\n        this.addRegion = this.addRegion.bind(this);\n    }\n    editRegion(region) {\n        this.props.history.push({\n            pathname: \"/region/editRegion\",\n            state: { region }\n        });\n    }\n    addRegion(region) {\n        this.props.history.push({\n            pathname: \"/region/addRegion\"\n        });\n    }\n\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        RegionService.getRegionList()\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    regionList: response.data.data\n                })\n            }).catch(\n                error => {\n                    console.log(\"Could not set the Region list error occurred\");\n                    console.log(error);\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n    }\n\n    showRegionLabel(cell, row) {\n        return cell.label_en;\n    }\n\n    showRealmCountryLabel(cell, row) {\n        return cell.country.label.label_en;\n    }\n\n    showStatus(cell, row) {\n        if (cell) {\n            return \"Active\";\n        } else {\n            return \"Disabled\";\n        }\n    }\n    render() {\n        return (\n            <div className=\"animated\">\n                <Card>\n                    <CardHeader>\n                        <i className=\"icon-menu\"></i><strong>{i18n.t('static.region.regionlist')}</strong>{' '}\n                        <div className=\"card-header-actions\">\n                            <div className=\"card-header-action\">\n                                <a href=\"javascript:void();\" title=\"Add Region\" onClick={this.addRegion}><i className=\"fa fa-plus-square\"></i></a>\n                            </div>\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                        <BootstrapTable data={this.state.regionList} version=\"4\" hover pagination search headerStyle={ { background: '#D1EEEE' } }  options={this.options}>\n                            <TableHeaderColumn isKey dataField='regionId' hidden>ID</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"label\" dataSort dataFormat={this.showRegionLabel} dataAlign=\"center\">{i18n.t('static.region.region')}</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"realmCountry\" dataFormat={this.showRealmCountryLabel} dataAlign=\"center\" dataSort>{i18n.t('static.region.country')}</TableHeaderColumn>\n                            <TableHeaderColumn filterFormatted dataField=\"active\" dataFormat={this.showStatus} dataAlign=\"center\" dataSort>{i18n.t('static.common.status')}</TableHeaderColumn>\n                        </BootstrapTable>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default RegionListComponent;\n"]},"metadata":{},"sourceType":"module"}