{"ast":null,"code":"import _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/Pages/Login/UpdateExpiredPasswordComponent.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport '../../Forms/ValidationForms/ValidationForms.css';\nimport CryptoJS from 'crypto-js';\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode';\nimport { SECRET_KEY } from '../../../Constants.js';\nimport UserService from '../../../api/UserService';\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    oldPassword: Yup.string().required('Please enter old password'),\n    newPassword: Yup.string().min(6, \"Password has to be at least 6 characters\").matches(/^(?!.*password).*$/, 'Password should not contain password string').matches(/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/, 'Password must contain atleast 1 special character').matches(/^(?=.*\\d).*$/, 'Password must contain atleast 1 number').matches(/^(?=.*[A-Z]).*$/, 'Password must contain atleast 1 uppercase alphabet').matches(/^[a-zA-Z]/i, 'Password must start with alphabet').test('username', \"New password should not be same as username \", function (value) {\n      console.log(\"values---\", values.username);\n\n      if (values.username != value) {\n        return true;\n      }\n    }).test('oldPassword', \"New password should not be same as old password \", function (value) {\n      console.log(\"values---\", values.username);\n\n      if (values.oldPassword != value) {\n        return true;\n      }\n    }).required('Please enter new password'),\n    confirmNewPassword: Yup.string().oneOf([values.newPassword], 'Passwords must match').required('Please confirm new password')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar UpdateExpiredPasswordComponent = /*#__PURE__*/function (_Component) {\n  _inherits(UpdateExpiredPasswordComponent, _Component);\n\n  function UpdateExpiredPasswordComponent(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateExpiredPasswordComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateExpiredPasswordComponent).call(this, props));\n    _this.state = {\n      message: '',\n      username: _this.props.location.state.username\n    };\n    _this.logoutClicked = _this.logoutClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UpdateExpiredPasswordComponent, [{\n    key: \"logoutClicked\",\n    value: function logoutClicked() {\n      this.props.history.push(\"/login/You are logged out\");\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        oldPassword: true,\n        newPassword: true,\n        confirmNewPassword: true,\n        username: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('updatePasswordForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.message), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 6,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Update Expired Password\"), ' '), React.createElement(Formik, {\n        initialValues: {\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmNewPassword: \"\",\n          username: this.state.username\n        },\n        validate: validate(validationSchema),\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              setErrors = _ref.setErrors;\n\n          if (navigator.onLine) {\n            console.log(values.username);\n            UserService.updateExpiredPassword(values.username, values.oldPassword, values.newPassword).then(function (response) {\n              var decoded = jwt_decode(response.data.token);\n              localStorage.removeItem(\"token-\" + decoded.userId);\n              localStorage.removeItem(\"user-\" + decoded.userId);\n              localStorage.removeItem('username-' + decoded.userId);\n              localStorage.removeItem('password-' + decoded.userId);\n              localStorage.removeItem('curUser');\n              localStorage.removeItem('lang');\n              localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt(response.data.token.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('user-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.username.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt(decoded.user.password.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('typeOfSession', \"Online\");\n              localStorage.setItem('curUser', CryptoJS.AES.encrypt(decoded.userId.toString(), \"\".concat(SECRET_KEY)));\n              localStorage.setItem('lang', CryptoJS.AES.encrypt(decoded.user.language.languageId.toString(), \"\".concat(SECRET_KEY)));\n\n              _this2.props.history.push(\"/dashboard/\".concat(response.statusText));\n            }).catch(function (error) {\n              if (error.message === \"Network Error\") {\n                _this2.setState({\n                  message: error.message\n                });\n              } else {\n                switch (error.response.status) {\n                  case 500:\n                  case 401:\n                  case 404:\n                  case 406:\n                  case 412:\n                    _this2.setState({\n                      message: error.response.data.messageCode\n                    });\n\n                    break;\n\n                  default:\n                    _this2.setState({\n                      message: 'static.unkownError'\n                    });\n\n                    console.log(\"Error code unkown\");\n                    break;\n                }\n              }\n            });\n          } else {\n            _this2.setState({\n              message: \"You must be online to update the password.\"\n            });\n          }\n        },\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"updatePasswordForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, React.createElement(Input, {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            onChange: handleChange,\n            hidden: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"oldPassword\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, \"Old Password\"), React.createElement(Input, {\n            type: \"password\",\n            name: \"oldPassword\",\n            id: \"oldPassword\",\n            bsSize: \"sm\",\n            valid: !errors.oldPassword,\n            invalid: touched.oldPassword && !!errors.oldPassword,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, errors.oldPassword)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"newPassword\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, \"New Password\"), React.createElement(Input, {\n            type: \"password\",\n            name: \"newPassword\",\n            id: \"newPassword\",\n            bsSize: \"sm\",\n            valid: !errors.newPassword,\n            invalid: touched.newPassword && !!errors.newPassword,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, errors.newPassword)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"confirmNewPassword\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, \"Confirm New Password\"), React.createElement(Input, {\n            type: \"password\",\n            name: \"confirmNewPassword\",\n            id: \"confirmNewPassword\",\n            bsSize: \"sm\",\n            valid: !errors.confirmNewPassword,\n            invalid: touched.confirmNewPassword && !!errors.confirmNewPassword,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            required: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, errors.confirmNewPassword))), React.createElement(CardFooter, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"button\",\n            size: \"sm\",\n            color: \"danger\",\n            className: \"float-right mr-1\",\n            onClick: _this2.logoutClicked,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-times\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }), \" Logout\"), React.createElement(Button, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"float-right mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            disabled: !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-check\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }), \"Submit\"), \"\\xA0\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UpdateExpiredPasswordComponent;\n}(Component);\n\nexport default UpdateExpiredPasswordComponent;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/Pages/Login/UpdateExpiredPasswordComponent.js"],"names":["React","Component","Row","Col","Card","CardHeader","CardFooter","Button","FormFeedback","CardBody","Form","FormGroup","Label","Input","Formik","Yup","CryptoJS","AuthenticationService","Online","bcrypt","jwt_decode","SECRET_KEY","UserService","validationSchema","values","object","shape","oldPassword","string","required","newPassword","min","matches","test","value","console","log","username","confirmNewPassword","oneOf","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","UpdateExpiredPasswordComponent","props","state","message","location","logoutClicked","bind","history","push","setTouched","validateForm","findFirstError","fieldName","Boolean","formName","hasError","form","document","forms","i","length","name","focus","flexBasis","setSubmitting","setErrors","navigator","onLine","updateExpiredPassword","then","response","decoded","data","token","localStorage","removeItem","userId","setItem","AES","encrypt","toString","user","password","language","languageId","statusText","catch","setState","status","messageCode","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","touchAll"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardHeader, CardFooter, Button, FormFeedback, CardBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport '../../Forms/ValidationForms/ValidationForms.css'\n\nimport CryptoJS from 'crypto-js'\nimport AuthenticationService from '../../common/AuthenticationService.js';\nimport { Online } from \"react-detect-offline\";\nimport bcrypt from 'bcryptjs';\nimport jwt_decode from 'jwt-decode'\nimport { SECRET_KEY } from '../../../Constants.js'\nimport UserService from '../../../api/UserService'\n\n\n\nconst validationSchema = function (values) {\n    return Yup.object().shape({\n        oldPassword: Yup.string()\n            .required('Please enter old password'),\n        newPassword: Yup.string()\n            .min(6, `Password has to be at least 6 characters`)\n            .matches(/^(?!.*password).*$/, 'Password should not contain password string')\n            .matches(/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/, 'Password must contain atleast 1 special character')\n            .matches(/^(?=.*\\d).*$/, 'Password must contain atleast 1 number')\n            .matches(/^(?=.*[A-Z]).*$/, 'Password must contain atleast 1 uppercase alphabet')\n            .matches(/^[a-zA-Z]/i, 'Password must start with alphabet')\n            .test('username', \"New password should not be same as username \",\n                function (value) {\n                    console.log(\"values---\", values.username);\n                    if ((values.username != value)) {\n                        return true;\n                    }\n                })\n            .test('oldPassword', \"New password should not be same as old password \",\n                function (value) {\n                    console.log(\"values---\", values.username);\n                    if (values.oldPassword != value) {\n                        return true;\n                    }\n                })\n            .required('Please enter new password'),\n        confirmNewPassword: Yup.string()\n            .oneOf([values.newPassword], 'Passwords must match')\n            .required('Please confirm new password')\n    })\n}\n\nconst validate = (getValidationSchema) => {\n    return (values) => {\n        const validationSchema = getValidationSchema(values)\n        try {\n            validationSchema.validateSync(values, { abortEarly: false })\n            return {}\n        } catch (error) {\n            return getErrorsFromValidationError(error)\n        }\n    }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n    const FIRST_ERROR = 0\n    return validationError.inner.reduce((errors, error) => {\n        return {\n            ...errors,\n            [error.path]: error.errors[FIRST_ERROR],\n        }\n    }, {})\n}\nclass UpdateExpiredPasswordComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            username: this.props.location.state.username\n        }\n        this.logoutClicked = this.logoutClicked.bind(this);\n    }\n\n    logoutClicked() {\n        this.props.history.push(`/login/You are logged out`)\n    }\n\n    touchAll(setTouched, errors) {\n        setTouched({\n            oldPassword: true,\n            newPassword: true,\n            confirmNewPassword: true,\n            username: true\n        }\n        )\n        this.validateForm(errors)\n    }\n    validateForm(errors) {\n        this.findFirstError('updatePasswordForm', (fieldName) => {\n            return Boolean(errors[fieldName])\n        })\n    }\n    findFirstError(formName, hasError) {\n        const form = document.forms[formName]\n        for (let i = 0; i < form.length; i++) {\n            if (hasError(form[i].name)) {\n                form[i].focus()\n                break\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"animated fadeIn\">\n                <h5>{this.state.message}</h5>\n                <Row>\n                    <Col sm={12} md={6} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <i className=\"icon-note\"></i><strong>Update Expired Password</strong>{' '}\n                            </CardHeader>\n                            <Formik\n                                initialValues={{\n                                    oldPassword: \"\",\n                                    newPassword: \"\",\n                                    confirmNewPassword: \"\",\n                                    username: this.state.username\n                                }}\n                                validate={validate(validationSchema)}\n                                onSubmit={(values, { setSubmitting, setErrors }) => {\n                                    if (navigator.onLine) {\n                                        console.log(values.username);\n                                        UserService.updateExpiredPassword(values.username, values.oldPassword, values.newPassword)\n                                            .then(response => {\n                                                var decoded = jwt_decode(response.data.token);\n\n                                                localStorage.removeItem(\"token-\" + decoded.userId);\n                                                localStorage.removeItem(\"user-\" + decoded.userId);\n                                                localStorage.removeItem('username-' + decoded.userId);\n                                                localStorage.removeItem('password-' + decoded.userId);\n                                                localStorage.removeItem('curUser');\n                                                localStorage.removeItem('lang');\n\n                                                localStorage.setItem('token-' + decoded.userId, CryptoJS.AES.encrypt((response.data.token).toString(), `${SECRET_KEY}`));\n                                                localStorage.setItem('user-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user).toString(), `${SECRET_KEY}`));\n                                                localStorage.setItem('username-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.username).toString(), `${SECRET_KEY}`));\n                                                localStorage.setItem('password-' + decoded.userId, CryptoJS.AES.encrypt((decoded.user.password).toString(), `${SECRET_KEY}`));\n                                                localStorage.setItem('typeOfSession', \"Online\");\n                                                localStorage.setItem('curUser', CryptoJS.AES.encrypt((decoded.userId).toString(), `${SECRET_KEY}`));\n                                                localStorage.setItem('lang', CryptoJS.AES.encrypt((decoded.user.language.languageId).toString(), `${SECRET_KEY}`));\n                                                this.props.history.push(`/dashboard/${response.statusText}`)\n                                            })\n                                            .catch(\n                                                error => {\n                                                    if (error.message === \"Network Error\") {\n                                                        this.setState({ message: error.message });\n                                                    } else {\n                                                        switch (error.response.status) {\n                                                            case 500:\n                                                            case 401:\n                                                            case 404:\n                                                            case 406:\n                                                            case 412:\n                                                                this.setState({ message: error.response.data.messageCode });\n                                                                break;\n                                                            default:\n                                                                this.setState({ message: 'static.unkownError' });\n                                                                console.log(\"Error code unkown\");\n                                                                break;\n                                                        }\n                                                    }\n                                                }\n                                            );\n\n                                    } else {\n                                        this.setState({\n                                            message: \"You must be online to update the password.\"\n                                        });\n                                    }\n                                }}\n                                render={\n                                    ({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        isValid,\n                                        setTouched\n                                    }) => (\n                                            <Form onSubmit={handleSubmit} noValidate name='updatePasswordForm'>\n                                                <CardBody>\n                                                    <Input type=\"text\"\n                                                        name=\"username\"\n                                                        id=\"username\"\n                                                        onChange={handleChange}\n                                                        hidden\n                                                    />\n                                                    <FormGroup>\n                                                        <Label for=\"oldPassword\">Old Password</Label>\n                                                        <Input type=\"password\"\n                                                            name=\"oldPassword\"\n                                                            id=\"oldPassword\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.oldPassword}\n                                                            invalid={touched.oldPassword && !!errors.oldPassword}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                        />\n                                                        <FormFeedback>{errors.oldPassword}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"newPassword\">New Password</Label>\n                                                        <Input type=\"password\"\n                                                            name=\"newPassword\"\n                                                            id=\"newPassword\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.newPassword}\n                                                            invalid={touched.newPassword && !!errors.newPassword}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                        />\n                                                        <FormFeedback>{errors.newPassword}</FormFeedback>\n                                                    </FormGroup>\n                                                    <FormGroup>\n                                                        <Label for=\"confirmNewPassword\">Confirm New Password</Label>\n                                                        <Input type=\"password\"\n                                                            name=\"confirmNewPassword\"\n                                                            id=\"confirmNewPassword\"\n                                                            bsSize=\"sm\"\n                                                            valid={!errors.confirmNewPassword}\n                                                            invalid={touched.confirmNewPassword && !!errors.confirmNewPassword}\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            required\n                                                        />\n                                                        <FormFeedback>{errors.confirmNewPassword}</FormFeedback>\n                                                    </FormGroup>\n                                                </CardBody>\n                                                <CardFooter>\n                                                    <FormGroup>\n                                                        <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.logoutClicked}><i className=\"fa fa-times\"></i> Logout</Button>\n                                                        <Button type=\"submit\" size=\"sm\" color=\"success\" className=\"float-right mr-1\" onClick={() => this.touchAll(setTouched, errors)} disabled={!isValid}><i className=\"fa fa-check\"></i>Submit</Button>\n                                                        &nbsp;\n                          </FormGroup>\n                                                </CardFooter>\n                                            </Form>\n                                        )} />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default UpdateExpiredPasswordComponent;\n"]},"metadata":{},"sourceType":"module"}