{"ast":null,"code":"import _classCallCheck from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/altius/QAT/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/altius/QAT/fasp-core-ui/src/views/Forms/ValidationForms/ValidationForms.js\";\nimport React from 'react';\nimport { Button, Card, CardHeader, CardBody, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input, Row } from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './ValidationForms.css';\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    firstName: Yup.string().min(2, \"First name has to be at least 2 characters\").required('First name is required'),\n    lastName: Yup.string().min(1, \"Last name has to be at least 1 character\").required('Last name is required'),\n    userName: Yup.string().min(5, \"Username has to be at least 5 characters\").required('Username is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required!'),\n    password: Yup.string().min(6, \"Password has to be at least \".concat(6, \" characters!\")).matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([values.password], 'Passwords must match').required('Password confirmation is required'),\n    accept: Yup.bool().required('* required').test('accept', 'You have to accept our Terms and Conditions!', function (value) {\n      return value === true;\n    })\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  userName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  accept: false\n};\n\nvar onSubmit = function onSubmit(values, _ref) {\n  var setSubmitting = _ref.setSubmitting,\n      setErrors = _ref.setErrors;\n  setTimeout(function () {\n    alert(JSON.stringify(values, null, 2)); // console.log('User has been successfully saved!', values)\n\n    setSubmitting(false);\n  }, 2000);\n};\n\nvar ValidationForms = /*#__PURE__*/function (_React$Component) {\n  _inherits(ValidationForms, _React$Component);\n\n  function ValidationForms(props) {\n    var _this;\n\n    _classCallCheck(this, ValidationForms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidationForms).call(this, props));\n    _this.touchAll = _this.touchAll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ValidationForms, [{\n    key: \"findFirstError\",\n    value: function findFirstError(formName, hasError) {\n      var form = document.forms[formName];\n\n      for (var i = 0; i < form.length; i++) {\n        if (hasError(form[i].name)) {\n          form[i].focus();\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm(errors) {\n      this.findFirstError('simpleForm', function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    }\n  }, {\n    key: \"touchAll\",\n    value: function touchAll(setTouched, errors) {\n      setTouched({\n        firstName: true,\n        lastName: true,\n        userName: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        accept: true\n      });\n      this.validateForm(errors);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Form Validation\"), React.createElement(\"a\", {\n        href: \"https://coreui.io/pro/react/\",\n        className: \"badge badge-danger ml-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"CoreUI Pro\"), React.createElement(\"div\", {\n        className: \"card-header-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"card-header-action\",\n        href: \"https://github.com/jaredpalmer/formik\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"docs\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/jaredpalmer/formik\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Formik\"), \" \", React.createElement(\"cite\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Build forms in React, without the tears\"), \" with \", React.createElement(\"a\", {\n        href: \"https://github.com/jquense/yup\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Yup\"), \" \", React.createElement(\"cite\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Dead simple Object schema validation\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: onSubmit,\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              status = _ref2.status,\n              dirty = _ref2.dirty,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              handleReset = _ref2.handleReset,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(Col, {\n            lg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(Form, {\n            onSubmit: handleSubmit,\n            noValidate: true,\n            name: \"simpleForm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"firstName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, \"First Name\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"firstName\",\n            id: \"firstName\",\n            placeholder: \"First Name\",\n            autoComplete: \"given-name\",\n            valid: !errors.firstName,\n            invalid: touched.firstName && !!errors.firstName,\n            autoFocus: true,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.firstName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, errors.firstName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"lastName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, \"Last Name\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"lastName\",\n            id: \"lastName\",\n            placeholder: \"Last Name\",\n            autoComplete: \"family-name\",\n            valid: !errors.lastName,\n            invalid: touched.lastName && !!errors.lastName,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.lastName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, errors.lastName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"userName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, \"User Name\"), React.createElement(Input, {\n            type: \"text\",\n            name: \"userName\",\n            id: \"userName\",\n            placeholder: \"User Name\",\n            autoComplete: \"username\",\n            valid: !errors.userName,\n            invalid: touched.userName && !!errors.userName,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.userName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194\n            },\n            __self: this\n          }, errors.userName)), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"email\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \"Email\"), React.createElement(Input, {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"email\",\n            valid: !errors.email,\n            invalid: touched.email && !!errors.email,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          }, errors.email)), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"password\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, \"Password\"), React.createElement(Input, {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"new-password\",\n            valid: !errors.password,\n            invalid: touched.password && !!errors.password,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, errors.password))), React.createElement(Col, {\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(Label, {\n            for: \"confirmPassword\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, \"Password\"), React.createElement(Input, {\n            type: \"password\",\n            name: \"confirmPassword\",\n            id: \"confirmPassword\",\n            placeholder: \"Confirm password\",\n            autoComplete: \"new-password\",\n            valid: !errors.confirmPassword,\n            invalid: touched.confirmPassword && !!errors.confirmPassword,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.confirmPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, errors.confirmPassword)))), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, React.createElement(CustomInput, {\n            type: \"checkbox\",\n            id: \"accept\",\n            label: \"I accept the terms of use\",\n            required: true,\n            valid: !errors.accept,\n            invalid: touched.accept && !!errors.accept,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }, React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, errors.accept))), React.createElement(FormGroup, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: \"mr-1\",\n            disabled: isSubmitting || !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, isSubmitting ? 'Wait...' : 'Submit'), React.createElement(Button, {\n            type: \"button\",\n            color: \"success\",\n            className: \"mr-1\",\n            onClick: function onClick() {\n              return _this2.touchAll(setTouched, errors);\n            },\n            disabled: isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, \"Validate\"), React.createElement(Button, {\n            type: \"reset\",\n            color: \"danger\",\n            className: \"mr-1\",\n            onClick: handleReset,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, \"Reset\")))), React.createElement(Col, {\n            lg: \"6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          }, React.createElement(Card, {\n            className: isValid ? 'bg-info' : 'bg-secondary',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, React.createElement(\"pre\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, \"values: \", JSON.stringify(values, null, 2)), React.createElement(\"pre\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272\n            },\n            __self: this\n          }, \"errors: \", JSON.stringify(errors, null, 2)), React.createElement(\"pre\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273\n            },\n            __self: this\n          }, \"touched: \", JSON.stringify(touched, null, 2))))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ValidationForms;\n}(React.Component);\n\nexport default ValidationForms;","map":{"version":3,"sources":["/home/altius/QAT/fasp-core-ui/src/views/Forms/ValidationForms/ValidationForms.js"],"names":["React","Button","Card","CardHeader","CardBody","Col","CustomInput","Form","FormFeedback","FormGroup","Label","Input","Row","Formik","Yup","validationSchema","values","object","shape","firstName","string","min","required","lastName","userName","email","password","matches","confirmPassword","oneOf","accept","bool","test","value","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","initialValues","onSubmit","setSubmitting","setErrors","setTimeout","alert","JSON","stringify","ValidationForms","props","touchAll","bind","formName","hasError","form","document","forms","i","length","name","focus","findFirstError","fieldName","Boolean","setTouched","validateForm","touched","status","dirty","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","handleReset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Card, CardHeader, CardBody, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input,  Row} from 'reactstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport './ValidationForms.css'\n\nconst validationSchema = function (values) {\n  return Yup.object().shape({\n    firstName: Yup.string()\n    .min(2, `First name has to be at least 2 characters`)\n    .required('First name is required'),\n    lastName: Yup.string()\n    .min(1, `Last name has to be at least 1 character`)\n    .required('Last name is required'),\n    userName: Yup.string()\n    .min(5, `Username has to be at least 5 characters`)\n    .required('Username is required'),\n    email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n    password: Yup.string()\n    .min(6, `Password has to be at least ${6} characters!`)\n    .matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n')\n    .required('Password is required'),\n    confirmPassword: Yup.string()\n    .oneOf([values.password], 'Passwords must match')\n    .required('Password confirmation is required'),\n    accept: Yup.bool()\n    .required('* required')\n    .test('accept', 'You have to accept our Terms and Conditions!', value => value === true),\n  })\n}\n\nconst validate = (getValidationSchema) => {\n  return (values) => {\n    const validationSchema = getValidationSchema(values)\n    try {\n      validationSchema.validateSync(values, { abortEarly: false })\n      return {}\n    } catch (error) {\n      return getErrorsFromValidationError(error)\n    }\n  }\n}\n\nconst getErrorsFromValidationError = (validationError) => {\n  const FIRST_ERROR = 0\n  return validationError.inner.reduce((errors, error) => {\n    return {\n      ...errors,\n      [error.path]: error.errors[FIRST_ERROR],\n    }\n  }, {})\n}\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  userName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  accept: false\n}\n\nconst onSubmit = (values, { setSubmitting, setErrors }) => {\n  setTimeout(() => {\n    alert(JSON.stringify(values, null, 2))\n    // console.log('User has been successfully saved!', values)\n    setSubmitting(false)\n  }, 2000)\n}\n\nclass ValidationForms extends React.Component {\n  constructor(props){\n    super(props)\n    this.touchAll = this.touchAll.bind(this)\n\n  }\n\n  findFirstError (formName, hasError) {\n    const form = document.forms[formName]\n    for (let i = 0; i < form.length; i++) {\n      if (hasError(form[i].name)) {\n        form[i].focus()\n        break\n      }\n    }\n  }\n\n  validateForm (errors) {\n    this.findFirstError('simpleForm', (fieldName) => {\n      return Boolean(errors[fieldName])\n    })\n  }\n\n  touchAll(setTouched, errors) {\n    setTouched({\n        firstName: true,\n        lastName: true,\n        userName: true,\n        email: true,\n        password: true,\n        confirmPassword: true,\n        accept: true\n      }\n    )\n    this.validateForm(errors)\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"icon-note\"></i><strong>Form Validation</strong>\n            <a href=\"https://coreui.io/pro/react/\" className=\"badge badge-danger ml-1\">CoreUI Pro</a>\n            <div className=\"card-header-actions\">\n              <a className=\"card-header-action\" href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">\n                <small className=\"text-muted\">docs</small>\n              </a>\n            </div>\n          </CardHeader>\n          <CardBody>\n            <a href=\"https://github.com/jaredpalmer/formik\" target=\"_blank\" rel=\"noreferrer noopener\">Formik</a> <cite>Build forms in React, without the tears</cite> with <a href=\"https://github.com/jquense/yup\" target=\"_blank\" rel=\"noreferrer noopener\">Yup</a> <cite>Dead simple Object schema\n            validation</cite>\n            <hr />\n            <Formik\n              initialValues={initialValues}\n              validate={validate(validationSchema)}\n              onSubmit={onSubmit}\n              render={\n                ({\n                  values,\n                  errors,\n                  touched,\n                  status,\n                  dirty,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  handleReset,\n                  setTouched\n                }) => (\n                  <Row>\n                    <Col lg=\"6\">\n                      <Form onSubmit={handleSubmit} noValidate name='simpleForm'>\n                        <FormGroup>\n                          <Label for=\"firstName\">First Name</Label>\n                          <Input type=\"text\"\n                                 name=\"firstName\"\n                                 id=\"firstName\"\n                                 placeholder=\"First Name\"\n                                 autoComplete=\"given-name\"\n                                 valid={!errors.firstName}\n                                 invalid={touched.firstName && !!errors.firstName}\n                                 autoFocus={true}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.firstName} />\n                          <FormFeedback>{errors.firstName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"lastName\">Last Name</Label>\n                          <Input type=\"text\"\n                                 name=\"lastName\"\n                                 id=\"lastName\"\n                                 placeholder=\"Last Name\"\n                                 autoComplete=\"family-name\"\n                                 valid={!errors.lastName}\n                                 invalid={touched.lastName && !!errors.lastName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.lastName} />\n                          <FormFeedback>{errors.lastName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"userName\">User Name</Label>\n                          <Input type=\"text\"\n                                 name=\"userName\"\n                                 id=\"userName\"\n                                 placeholder=\"User Name\"\n                                 autoComplete=\"username\"\n                                 valid={!errors.userName}\n                                 invalid={touched.userName && !!errors.userName}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.userName} />\n                          <FormFeedback>{errors.userName}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"email\">Email</Label>\n                          <Input type=\"email\"\n                                 name=\"email\"\n                                 id=\"email\"\n                                 placeholder=\"Email\"\n                                 autoComplete=\"email\"\n                                 valid={!errors.email}\n                                 invalid={touched.email && !!errors.email}\n                                 required\n                                 onChange={handleChange}\n                                 onBlur={handleBlur}\n                                 value={values.email} />\n                          <FormFeedback>{errors.email}</FormFeedback>\n                        </FormGroup>\n                        <Row>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"password\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"password\"\n                                     id=\"password\"\n                                     placeholder=\"Password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.password}\n                                     invalid={touched.password && !!errors.password}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.password} />\n                              {/*<FormFeedback>Required password containing at least: number, uppercase and lowercase letter, 8 characters</FormFeedback>*/}\n                              <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                          <Col md={6}>\n                            <FormGroup>\n                              <Label for=\"confirmPassword\">Password</Label>\n                              <Input type=\"password\"\n                                     name=\"confirmPassword\"\n                                     id=\"confirmPassword\"\n                                     placeholder=\"Confirm password\"\n                                     autoComplete=\"new-password\"\n                                     valid={!errors.confirmPassword}\n                                     invalid={touched.confirmPassword && !!errors.confirmPassword}\n                                     required\n                                     onChange={handleChange}\n                                     onBlur={handleBlur}\n                                     value={values.confirmPassword} />\n                              <FormFeedback>{errors.confirmPassword}</FormFeedback>\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <FormGroup>\n                          <CustomInput\n                            type=\"checkbox\"\n                            id=\"accept\"\n                            label=\"I accept the terms of use\"\n                            required\n                            valid={!errors.accept}\n                            invalid={touched.accept && !!errors.accept}\n                            onChange={handleChange}\n                            onBlur={handleBlur} >\n                            <FormFeedback>{errors.accept}</FormFeedback>\n                          </CustomInput>\n                        </FormGroup>\n                        <FormGroup>\n                          <Button type=\"submit\" color=\"primary\" className=\"mr-1\" disabled={isSubmitting || !isValid}>{isSubmitting ? 'Wait...' : 'Submit'}</Button>\n                          <Button type=\"button\" color=\"success\" className=\"mr-1\" onClick={() => this.touchAll(setTouched, errors)}  disabled={isValid}>Validate</Button>\n                          <Button type=\"reset\" color=\"danger\" className=\"mr-1\" onClick={handleReset}>Reset</Button>\n                        </FormGroup>\n                      </Form>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Card className={isValid ? 'bg-info' : 'bg-secondary'}>\n                        <CardBody>\n                          <pre>values: {JSON.stringify(values, null, 2)}</pre>\n                          <pre>errors: {JSON.stringify(errors, null, 2)}</pre>\n                          <pre>touched: {JSON.stringify(touched, null, 2)}</pre>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                )} />\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default ValidationForms;\n"]},"metadata":{},"sourceType":"module"}