{"ast":null,"code":"import _defineProperty from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/fasp-core-ui/src/views/ProgramProduct/AddProgramProduct.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Table, Badge, Col } from 'reactstrap'; // import deleteSpecificRowFormTable from './TableFeatures'\n\nimport DeleteSpecificRow from './TableFeatureTwo';\n\nvar AddProgramProduct = /*#__PURE__*/function (_Component) {\n  _inherits(AddProgramProduct, _Component);\n\n  function AddProgramProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AddProgramProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProgramProduct).call(this, props));\n    _this.state = {\n      // programProduct:{\n      programId: '',\n      productId: '',\n      minMonth: '',\n      maxMonth: '',\n      // },\n      rows: []\n    };\n    _this.addRow = _this.addRow.bind(_assertThisInitialized(_this));\n    _this.deleteLastRow = _this.deleteLastRow.bind(_assertThisInitialized(_this)); //this.handleChange=this.handleChange.bind(this);\n\n    _this.handleRemoveSpecificRow = _this.handleRemoveSpecificRow.bind(_assertThisInitialized(_this));\n    _this.updateFieldData = _this.updateFieldData.bind(_assertThisInitialized(_this));\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddProgramProduct, [{\n    key: \"addRow\",\n    value: function addRow() {\n      console.log(this.state);\n      var rows = this.state.rows;\n      rows.push({\n        programId: this.state.programId,\n        productId: this.state.productId,\n        minMonth: this.state.minMonth,\n        maxMonth: this.state.maxMonth\n      });\n      this.setState({\n        rows: rows\n      });\n      this.setState({\n        productId: '',\n        minMonth: '',\n        maxMonth: ''\n      });\n    }\n  }, {\n    key: \"deleteLastRow\",\n    value: function deleteLastRow() {\n      this.setState({\n        rows: this.state.rows.slice(0, -1)\n      });\n    } // handleChange = idx => e => {\n    //     const { name, value } = e.target;\n    //     const rows = [...this.state.rows];\n    //     rows[idx] = {\n    //       [name]: value\n    //     };\n    //     this.setState({\n    //       rows\n    //     });\n    //   };\n\n  }, {\n    key: \"handleRemoveSpecificRow\",\n    value: function handleRemoveSpecificRow(idx) {\n      var rows = _toConsumableArray(this.state.rows);\n\n      rows.splice(idx, 1);\n      this.setState({\n        rows: rows\n      });\n    } // handleRemoveSpecificRow = (idx) => () => {\n    //     const rows = [...this.state.rows]\n    //     rows.splice(idx, 1)\n    //     this.setState({ rows })\n    // }\n\n  }, {\n    key: \"updateFieldData\",\n    value: function updateFieldData(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add Program Product\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Select Program\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"programId\",\n        id: \"programId\",\n        value: this.state.programId,\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Program #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Program #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Program #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Select Product\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"productId\",\n        id: \"select\",\n        value: this.state.productId,\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Please select\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"product #1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"product #2\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"product #3\")))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Min Month Stock\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"minMonth\",\n        id: \"minMonth\",\n        value: this.state.minMonth,\n        placeholder: \"Enter your budget amount\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Max Month Stock\")), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"maxMonth\",\n        id: \"maxMonth\",\n        value: this.state.maxMonth,\n        placeholder: \"Enter your budget amount\",\n        onChange: this.updateFieldData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: \"12\",\n        md: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.addRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), \" ADD \"), \"\\xA0 \", React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.deleteLastRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), \" Delete Last Row \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" Id \"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Program \"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \" Product\"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" Min Month Stock \"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Max Month Stock\"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Delete Row\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.rows.map(function (item, idx) {\n        return React.createElement(\"tr\", {\n          id: \"addr0\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, idx), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, _this2.state.rows[idx].programId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, _this2.state.rows[idx].productId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, _this2.state.rows[idx].minMonth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, _this2.state.rows[idx].maxMonth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(DeleteSpecificRow, {\n          handleRemoveSpecificRow: _this2.handleRemoveSpecificRow,\n          rowId: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        })));\n      })))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"primary\",\n        onClick: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-dot-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \"Submit \"))));\n    }\n  }]);\n\n  return AddProgramProduct;\n}(Component);\n\nexport default AddProgramProduct;","map":{"version":3,"sources":["/home/altius/fasp-core-ui/src/views/ProgramProduct/AddProgramProduct.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Table","Badge","Col","DeleteSpecificRow","AddProgramProduct","props","state","programId","productId","minMonth","maxMonth","rows","addRow","bind","deleteLastRow","handleRemoveSpecificRow","updateFieldData","submitForm","console","log","push","setState","slice","idx","splice","event","target","name","value","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Table, Badge, Col\n} from 'reactstrap';\n// import deleteSpecificRowFormTable from './TableFeatures'\nimport DeleteSpecificRow from './TableFeatureTwo'\n\nclass AddProgramProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // programProduct:{\n            programId: '',\n            productId: '',\n            minMonth: '',\n            maxMonth: '',\n            // },\n            rows: []\n        }\n\n        this.addRow = this.addRow.bind(this);\n        this.deleteLastRow = this.deleteLastRow.bind(this);\n        //this.handleChange=this.handleChange.bind(this);\n        this.handleRemoveSpecificRow = this.handleRemoveSpecificRow.bind(this);\n        this.updateFieldData = this.updateFieldData.bind(this);\n        this.submitForm=this.submitForm.bind(this);\n\n    }\n    addRow() {\n        console.log(this.state);\n        var rows = this.state.rows\n        rows.push({ programId: this.state.programId, productId: this.state.productId, minMonth: this.state.minMonth, maxMonth: this.state.maxMonth })\n        this.setState({ rows: rows });\n        this.setState({productId:'',minMonth:'',maxMonth:''});\n       \n    }\n    deleteLastRow() {\n        this.setState({\n            rows: this.state.rows.slice(0, -1)\n        });\n    }\n    // handleChange = idx => e => {\n    //     const { name, value } = e.target;\n    //     const rows = [...this.state.rows];\n    //     rows[idx] = {\n    //       [name]: value\n    //     };\n    //     this.setState({\n    //       rows\n    //     });\n    //   };\n\n    handleRemoveSpecificRow(idx) {\n        const rows = [...this.state.rows]\n        rows.splice(idx, 1);\n        this.setState({ rows })\n    }\n\n    // handleRemoveSpecificRow = (idx) => () => {\n    //     const rows = [...this.state.rows]\n    //     rows.splice(idx, 1)\n    //     this.setState({ rows })\n    // }\n\n    updateFieldData(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n    submitForm(){\n        console.log(this.state);\n    }\n    render() {\n        return (\n            <Col xs=\"12\" sm=\"8\">\n                <Card>\n                    <CardHeader>\n                        <strong>Add Program Product</strong>\n                    </CardHeader>\n                    <CardBody>\n                        <FormGroup>\n                            <Col md=\"3\">\n                                <Label htmlFor=\"select\">Select Program</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"9\">\n                                <Input type=\"select\" name=\"programId\" id=\"programId\" value={this.state.programId} onChange={this.updateFieldData}>\n                                    <option value=\"0\">Please select</option>\n                                    <option value=\"1\">Program #1</option>\n                                    <option value=\"2\">Program #2</option>\n                                    <option value=\"3\">Program #3</option>\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col md=\"3\">\n                                <Label htmlFor=\"select\">Select Product</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"9\">\n                                <Input type=\"select\" name=\"productId\" id=\"select\" value={this.state.productId} onChange={this.updateFieldData}>\n                                    <option value=\"0\">Please select</option>\n                                    <option value=\"1\">product #1</option>\n                                    <option value=\"2\">product #2</option>\n                                    <option value=\"3\">product #3</option>\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col md=\"3\">\n                                <Label htmlFor=\"company\">Min Month Stock</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"9\">\n                                <Input type=\"number\" name=\"minMonth\" id=\"minMonth\" value={this.state.minMonth} placeholder=\"Enter your budget amount\" onChange={this.updateFieldData} />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            <Col md=\"3\">\n                                <Label htmlFor=\"company\">Max Month Stock</Label>\n                            </Col>\n                            <Col xs=\"12\" md=\"9\">\n                                <Input type=\"number\" name=\"maxMonth\" id=\"maxMonth\" value={this.state.maxMonth} placeholder=\"Enter your budget amount\" onChange={this.updateFieldData} />\n                            </Col>\n                        </FormGroup>\n                        <Col xs=\"12\" md=\"9\">\n                            <Button type=\"button\" size=\"sm\" color=\"primary\" onClick={this.addRow}><i className=\"fa fa-dot-circle-o\"></i> ADD </Button>\n                            &nbsp; <Button type=\"button\" size=\"sm\" color=\"primary\" onClick={this.deleteLastRow}><i className=\"fa fa-dot-circle-o\"></i> Delete Last Row </Button>\n                        </Col>\n                        <br /><br />\n                        {/* <Button type=\"button\" size=\"sm\" color=\"primary\" onClick={printStringInConsole.bind(this)} ><i className=\"fa fa-dot-circle-o\"></i>Print String </Button> */}\n                        <br /><br />\n                        <Table responsive>\n\n                            <thead>\n                                <tr>\n                                    <th className=\"text-left\"> Id </th>\n                                    <th className=\"text-left\"> Program </th>\n                                    <th className=\"text-left\"> Product</th>\n                                    <th className=\"text-left\"> Min Month Stock </th>\n                                    <th className=\"text-left\">Max Month Stock</th>\n                                    <th className=\"text-left\">Delete Row</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.rows.map((item, idx) => (\n                                    <tr id=\"addr0\" key={idx}>\n                                        <td>{idx}</td>\n                                        <td>\n                                            {/* <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={this.state.rows[idx].name}\n                          onChange={this.handleChange(idx)}\n                          className=\"form-control\"\n                        /> */}\n                                            {/* {item.program} */}\n                                            {this.state.rows[idx].programId}\n                                        </td>\n                                        <td>\n                                            {/* <input\n                          type=\"text\"\n                          name=\"mobile\"\n                          value={this.state.rows[idx].mobile}\n                          onChange={this.handleChange(idx)}\n                          className=\"form-control\"\n                        /> */}\n                                            {/* {item.budgetAmount} */}\n                                            {this.state.rows[idx].productId}\n                                        </td>\n                                        <td>\n                                            {/* {item.startDate} */}\n                                            {this.state.rows[idx].minMonth}\n                                        </td>\n                                        <td>\n                                            {/* {item.startDate} */}\n                                            {this.state.rows[idx].maxMonth}\n                                        </td>\n                                        <td>\n                                            {/* <Button type=\"button\" size=\"sm\" color=\"danger\" onClick={this.handleRemoveSpecificRow(idx)}><i className=\"fa fa-dot-circle-o\"></i> Delete  Row </Button> */}\n                                            {/* <Button type=\"button\" size=\"sm\" color=\"danger\" onClick={deleteSpecificRowFormTable.bind(this)}><i className=\"fa fa-dot-circle-o\"></i> Delete  Row </Button> */}\n                                            <DeleteSpecificRow handleRemoveSpecificRow={this.handleRemoveSpecificRow} rowId={idx} />\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n\n                        </Table>\n\n                    </CardBody>\n                    <CardFooter>\n                        <Button type=\"button\" size=\"sm\" color=\"primary\" onClick={this.submitForm}><i className=\"fa fa-dot-circle-o\"></i>Submit </Button>\n                    </CardFooter>\n\n                </Card>\n            </Col>\n\n        );\n    }\n\n}\n\nexport default AddProgramProduct;"]},"metadata":{},"sourceType":"module"}