{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require(\"lodash.isequal\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require(\"./utils\");\n\nvar _responsiveUtils = require(\"./responsiveUtils\");\n\nvar _ReactGridLayout = require(\"./ReactGridLayout\");\n\nvar _ReactGridLayout2 = _interopRequireDefault(_ReactGridLayout);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar type = function type(obj) {\n  return Object.prototype.toString.call(obj);\n};\n\nvar ResponsiveReactGridLayout = function (_React$Component) {\n  _inherits(ResponsiveReactGridLayout, _React$Component);\n\n  function ResponsiveReactGridLayout() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResponsiveReactGridLayout);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = _this.generateInitialState(), _this.onLayoutChange = function (layout) {\n      var _extends2;\n\n      _this.props.onLayoutChange(layout, _extends({}, _this.props.layouts, (_extends2 = {}, _extends2[_this.state.breakpoint] = layout, _extends2)));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n\n\n  ResponsiveReactGridLayout.prototype.generateInitialState = function generateInitialState() {\n    var _props = this.props,\n        width = _props.width,\n        breakpoints = _props.breakpoints,\n        layouts = _props.layouts,\n        cols = _props.cols;\n    var breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    var colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols); // verticalCompact compatibility, now deprecated\n\n    var compactType = this.props.verticalCompact === false ? null : this.props.compactType; // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n\n    var initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  };\n\n  ResponsiveReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // Allow parent to set width or breakpoint directly.\n    if (nextProps.width != this.props.width || nextProps.breakpoint !== this.props.breakpoint || !(0, _lodash2.default)(nextProps.breakpoints, this.props.breakpoints) || !(0, _lodash2.default)(nextProps.cols, this.props.cols)) {\n      this.onWidthChange(nextProps);\n    } else if (!(0, _lodash2.default)(nextProps.layouts, this.props.layouts)) {\n      // Allow parent to set layouts directly.\n      var _state = this.state,\n          _breakpoint = _state.breakpoint,\n          _cols = _state.cols; // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n\n      var newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, _breakpoint, _breakpoint, _cols, nextProps.compactType);\n      this.setState({\n        layout: newLayout\n      });\n    }\n  }; // wrap layouts so we do not need to pass layouts to child\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n\n\n  ResponsiveReactGridLayout.prototype.onWidthChange = function onWidthChange(nextProps) {\n    var breakpoints = nextProps.breakpoints,\n        cols = nextProps.cols,\n        layouts = nextProps.layouts,\n        compactType = nextProps.compactType;\n    var newBreakpoint = nextProps.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(nextProps.breakpoints, nextProps.width);\n    var lastBreakpoint = this.state.breakpoint; // Breakpoint change\n\n    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts)) layouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout); // Find or generate a new layout.\n\n      var newCols = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n\n      var _layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType); // This adds missing items.\n\n\n      _layout = (0, _utils.synchronizeLayoutWithChildren)(_layout, nextProps.children, newCols, compactType); // Store the new layout.\n\n      layouts[newBreakpoint] = _layout; // callbacks\n\n      this.props.onLayoutChange(_layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onWidthChange(nextProps.width, nextProps.margin, newCols, nextProps.containerPadding);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: _layout,\n        cols: newCols\n      });\n    }\n  };\n\n  ResponsiveReactGridLayout.prototype.render = function render() {\n    /* eslint-disable no-unused-vars */\n    var _props2 = this.props,\n        breakpoint = _props2.breakpoint,\n        breakpoints = _props2.breakpoints,\n        cols = _props2.cols,\n        layouts = _props2.layouts,\n        onBreakpointChange = _props2.onBreakpointChange,\n        onLayoutChange = _props2.onLayoutChange,\n        onWidthChange = _props2.onWidthChange,\n        other = _objectWithoutProperties(_props2, [\"breakpoint\", \"breakpoints\", \"cols\", \"layouts\", \"onBreakpointChange\", \"onLayoutChange\", \"onWidthChange\"]);\n    /* eslint-enable no-unused-vars */\n\n\n    return _react2.default.createElement(_ReactGridLayout2.default, _extends({}, other, {\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  };\n\n  return ResponsiveReactGridLayout;\n}(_react2.default.Component);\n\nResponsiveReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes2.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes2.default.object,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes2.default.object,\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts: function layouts(props, propName) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n\n    Object.keys(props[propName]).forEach(function (key) {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes2.default.number.isRequired,\n  //\n  // Callbacks\n  //\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes2.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes2.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes2.default.func\n};\nResponsiveReactGridLayout.defaultProps = {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  layouts: {},\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n};\nexports.default = ResponsiveReactGridLayout;","map":{"version":3,"sources":["/home/altius/NetbeansProjects/gitRepos/fasp-core-ui/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_lodash","_lodash2","_utils","_responsiveUtils","_ReactGridLayout","_ReactGridLayout2","obj","default","_objectWithoutProperties","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","type","toString","ResponsiveReactGridLayout","_React$Component","_temp","_this","_ret","_len","args","Array","_key","apply","concat","state","generateInitialState","onLayoutChange","layout","_extends2","props","layouts","breakpoint","_props","width","breakpoints","cols","getBreakpointFromWidth","colNo","getColsFromBreakpoint","compactType","verticalCompact","initialLayout","findOrGenerateResponsiveLayout","componentWillReceiveProps","nextProps","onWidthChange","_state","_breakpoint","_cols","newLayout","setState","newBreakpoint","lastBreakpoint","cloneLayout","newCols","_layout","synchronizeLayoutWithChildren","children","onBreakpointChange","margin","containerPadding","render","_props2","other","createElement","Component","propTypes","string","object","propName","Error","forEach","validateLayout","number","isRequired","func","defaultProps","lg","md","sm","xs","xxs","noop"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require(\"lodash.isequal\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require(\"./utils\");\n\nvar _responsiveUtils = require(\"./responsiveUtils\");\n\nvar _ReactGridLayout = require(\"./ReactGridLayout\");\n\nvar _ReactGridLayout2 = _interopRequireDefault(_ReactGridLayout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar type = function type(obj) {\n  return Object.prototype.toString.call(obj);\n};\n\nvar ResponsiveReactGridLayout = function (_React$Component) {\n  _inherits(ResponsiveReactGridLayout, _React$Component);\n\n  function ResponsiveReactGridLayout() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResponsiveReactGridLayout);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = _this.generateInitialState(), _this.onLayoutChange = function (layout) {\n      var _extends2;\n\n      _this.props.onLayoutChange(layout, _extends({}, _this.props.layouts, (_extends2 = {}, _extends2[_this.state.breakpoint] = layout, _extends2)));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n\n\n  ResponsiveReactGridLayout.prototype.generateInitialState = function generateInitialState() {\n    var _props = this.props,\n        width = _props.width,\n        breakpoints = _props.breakpoints,\n        layouts = _props.layouts,\n        cols = _props.cols;\n\n    var breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    var colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    var compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    var initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  };\n\n  ResponsiveReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // Allow parent to set width or breakpoint directly.\n    if (nextProps.width != this.props.width || nextProps.breakpoint !== this.props.breakpoint || !(0, _lodash2.default)(nextProps.breakpoints, this.props.breakpoints) || !(0, _lodash2.default)(nextProps.cols, this.props.cols)) {\n      this.onWidthChange(nextProps);\n    } else if (!(0, _lodash2.default)(nextProps.layouts, this.props.layouts)) {\n      // Allow parent to set layouts directly.\n      var _state = this.state,\n          _breakpoint = _state.breakpoint,\n          _cols = _state.cols;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n\n      var newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, _breakpoint, _breakpoint, _cols, nextProps.compactType);\n      this.setState({ layout: newLayout });\n    }\n  };\n\n  // wrap layouts so we do not need to pass layouts to child\n\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  ResponsiveReactGridLayout.prototype.onWidthChange = function onWidthChange(nextProps) {\n    var breakpoints = nextProps.breakpoints,\n        cols = nextProps.cols,\n        layouts = nextProps.layouts,\n        compactType = nextProps.compactType;\n\n    var newBreakpoint = nextProps.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(nextProps.breakpoints, nextProps.width);\n\n    var lastBreakpoint = this.state.breakpoint;\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts)) layouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      var newCols = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n      var _layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      _layout = (0, _utils.synchronizeLayoutWithChildren)(_layout, nextProps.children, newCols, compactType);\n\n      // Store the new layout.\n      layouts[newBreakpoint] = _layout;\n\n      // callbacks\n      this.props.onLayoutChange(_layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onWidthChange(nextProps.width, nextProps.margin, newCols, nextProps.containerPadding);\n\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: _layout,\n        cols: newCols\n      });\n    }\n  };\n\n  ResponsiveReactGridLayout.prototype.render = function render() {\n    /* eslint-disable no-unused-vars */\n    var _props2 = this.props,\n        breakpoint = _props2.breakpoint,\n        breakpoints = _props2.breakpoints,\n        cols = _props2.cols,\n        layouts = _props2.layouts,\n        onBreakpointChange = _props2.onBreakpointChange,\n        onLayoutChange = _props2.onLayoutChange,\n        onWidthChange = _props2.onWidthChange,\n        other = _objectWithoutProperties(_props2, [\"breakpoint\", \"breakpoints\", \"cols\", \"layouts\", \"onBreakpointChange\", \"onLayoutChange\", \"onWidthChange\"]);\n    /* eslint-enable no-unused-vars */\n\n    return _react2.default.createElement(_ReactGridLayout2.default, _extends({}, other, {\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  };\n\n  return ResponsiveReactGridLayout;\n}(_react2.default.Component);\n\nResponsiveReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes2.default.string,\n\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes2.default.object,\n\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes2.default.object,\n\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts: function layouts(props, propName) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(function (key) {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n\n\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes2.default.number.isRequired,\n\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes2.default.func,\n\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes2.default.func\n};\nResponsiveReactGridLayout.defaultProps = {\n  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  layouts: {},\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n};\nexports.default = ResponsiveReactGridLayout;"]},"metadata":{},"sourceType":"script"}