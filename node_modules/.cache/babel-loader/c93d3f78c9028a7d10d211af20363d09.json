{"ast":null,"code":"import _toConsumableArray from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/altius/NodeJs/fasp-core-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/altius/NodeJs/fasp-core-ui/src/views/ProgramProduct/AddProgramProduct.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, CardHeader, Label, Input, FormGroup, CardFooter, Button, Table, Badge, Col, Row } from 'reactstrap';\nimport DeleteSpecificRow from './TableFeatureTwo';\nimport ProgramService from \"../../api/ProgramService\";\nimport ProductService from \"../../api/ProductService\";\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nvar AddProgramProduct = /*#__PURE__*/function (_Component) {\n  _inherits(AddProgramProduct, _Component);\n\n  function AddProgramProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AddProgramProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProgramProduct).call(this, props));\n\n    _this.setTextAndValue = function (event) {\n      if (event.target.name === 'minMonth') {\n        _this.setState({\n          minMonth: event.target.value\n        });\n      }\n\n      if (event.target.name === 'maxMonth') {\n        _this.setState({\n          maxMonth: event.target.value\n        });\n      } else if (event.target.name === 'productId') {\n        _this.setState({\n          productName: event.target[event.target.selectedIndex].text\n        });\n\n        _this.setState({\n          productId: event.target.value\n        });\n      }\n    };\n\n    _this.state = {\n      programProduct: _this.props.location.state.programProduct,\n      productId: '',\n      productName: '',\n      minMonth: '',\n      maxMonth: '',\n      rows: _this.props.location.state.programProduct.productList,\n      programList: [],\n      productList: []\n    }; // console.log(\"kam kam\", this.state.rows);\n    // console.log(\"------------in\", this.state.programProduct);\n\n    _this.addRow = _this.addRow.bind(_assertThisInitialized(_this));\n    _this.deleteLastRow = _this.deleteLastRow.bind(_assertThisInitialized(_this));\n    _this.handleRemoveSpecificRow = _this.handleRemoveSpecificRow.bind(_assertThisInitialized(_this));\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_this));\n    _this.setTextAndValue = _this.setTextAndValue.bind(_assertThisInitialized(_this));\n    _this.cancelClicked = _this.cancelClicked.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddProgramProduct, [{\n    key: \"addRow\",\n    value: function addRow() {\n      this.state.rows.push({\n        productId: this.state.productId,\n        label: {\n          label_en: this.state.productName\n        },\n        minMonth: this.state.minMonth,\n        maxMonth: this.state.maxMonth\n      });\n      this.setState({\n        rows: this.state.rows\n      });\n      this.setState({\n        productId: '',\n        minMonth: '',\n        maxMonth: '',\n        productName: ''\n      });\n    }\n  }, {\n    key: \"deleteLastRow\",\n    value: function deleteLastRow() {\n      this.setState({\n        rows: this.state.rows.slice(0, -1)\n      });\n    }\n  }, {\n    key: \"handleRemoveSpecificRow\",\n    value: function handleRemoveSpecificRow(idx) {\n      var rows = _toConsumableArray(this.state.rows);\n\n      rows.splice(idx, 1);\n      this.setState({\n        rows: rows\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      var _this2 = this;\n\n      var programProduct = {\n        programId: this.state.programProduct.programId,\n        prodcuts: this.state.rows\n      };\n      AuthenticationService.setupAxiosInterceptors();\n      console.log(\"------------------programProdcut\", programProduct);\n      ProgramService.addProgramProductMapping(programProduct).then(function (response) {\n        console.log(response.data);\n\n        if (response.status == \"200\") {\n          console.log(response);\n\n          _this2.props.history.push(\"/program/listProgram/\".concat(response.data.message));\n        } else {\n          _this2.setState({\n            message: response.data.message\n          });\n        }\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this2.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this2.setState({\n              message: error.response.data.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      AuthenticationService.setupAxiosInterceptors();\n      ProgramService.getProgramListForDropDown().then(function (response) {\n        console.log(response.data);\n\n        if (response.status == \"200\") {\n          _this3.setState({\n            programList: response.data\n          });\n        } else {\n          _this3.setState({\n            message: response.data.message\n          });\n        }\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n      ProductService.getProductList().then(function (response) {\n        console.log(response.data.data);\n\n        if (response.status == \"200\") {\n          _this3.setState({\n            productList: response.data.data\n          });\n        } else {\n          _this3.setState({\n            message: response.data.message\n          });\n        }\n      }).catch(function (error) {\n        switch (error.message) {\n          case \"Network Error\":\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n\n          default:\n            _this3.setState({\n              message: error.message\n            });\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var programList = this.state.programList;\n      var productList = this.state.productList;\n      var programs = programList.length > 0 && programList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.programId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      var products = productList.length > 0 && productList.map(function (item, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: item.productId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, item.label.label_en);\n      }, this);\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 10,\n        style: {\n          flexBasis: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Add Program Product\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Select Program\"), React.createElement(Input, {\n        type: \"select\",\n        value: this.state.programProduct.programId,\n        name: \"programId\",\n        id: \"programId\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, programs)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Select Product\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"productId\",\n        id: \"select\",\n        value: this.state.productId,\n        onChange: function onChange(event) {\n          return _this4.setTextAndValue(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Please select\"), products)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Min Month Stock\"), React.createElement(Input, {\n        type: \"number\",\n        min: \"0\",\n        name: \"minMonth\",\n        id: \"minMonth\",\n        value: this.state.minMonth,\n        placeholder: \"Enter min month stock\",\n        onChange: function onChange(event) {\n          return _this4.setTextAndValue(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Max Month Stock\"), React.createElement(Input, {\n        type: \"number\",\n        min: \"0\",\n        name: \"maxMonth\",\n        id: \"maxMonth\",\n        value: this.state.maxMonth,\n        placeholder: \"Enter max month stock\",\n        onChange: function onChange(event) {\n          return _this4.setTextAndValue(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"danger\",\n        onClick: this.deleteLastRow,\n        className: \"float-right mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), \" Delete Last Row\"), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: this.addRow,\n        className: \"float-right mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), \"Add\"), \"\\xA0\"), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \" Program \"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \" Product\"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \" Min Month Stock \"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Max Month Stock\"), React.createElement(\"th\", {\n        className: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Delete Row\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.state.rows.map(function (item, idx) {\n        return React.createElement(\"tr\", {\n          id: \"addr0\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, _this4.state.programProduct.label.label_en), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, _this4.state.rows[idx].label.label_en), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, _this4.state.rows[idx].minMonth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, _this4.state.rows[idx].maxMonth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(DeleteSpecificRow, {\n          handleRemoveSpecificRow: _this4.handleRemoveSpecificRow,\n          rowId: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        })));\n      })))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        size: \"sm\",\n        color: \"danger\",\n        className: \"float-right mr-1\",\n        onClick: this.cancelClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), \" Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"success\",\n        onClick: this.submitForm,\n        className: \"float-right mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), \"Submit\"), \"\\xA0\"))))));\n    }\n  }, {\n    key: \"cancelClicked\",\n    value: function cancelClicked() {\n      this.props.history.push(\"/program/listProgram/\" + \"Action Canceled\");\n    }\n  }]);\n\n  return AddProgramProduct;\n}(Component);\n\nexport default AddProgramProduct;","map":{"version":3,"sources":["/home/altius/NodeJs/fasp-core-ui/src/views/ProgramProduct/AddProgramProduct.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","Input","FormGroup","CardFooter","Button","Table","Badge","Col","Row","DeleteSpecificRow","ProgramService","ProductService","AuthenticationService","AddProgramProduct","props","setTextAndValue","event","target","name","setState","minMonth","value","maxMonth","productName","selectedIndex","text","productId","state","programProduct","location","rows","productList","programList","addRow","bind","deleteLastRow","handleRemoveSpecificRow","submitForm","cancelClicked","push","label","label_en","slice","idx","splice","programId","prodcuts","setupAxiosInterceptors","console","log","addProgramProductMapping","then","response","data","status","history","message","catch","error","getProgramListForDropDown","getProductList","programs","length","map","item","i","products","flexBasis"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Card, CardBody, CardHeader,\n    Label, Input, FormGroup,\n    CardFooter, Button, Table, Badge, Col, Row\n\n} from 'reactstrap';\nimport DeleteSpecificRow from './TableFeatureTwo';\nimport ProgramService from \"../../api/ProgramService\";\nimport ProductService from \"../../api/ProductService\"\nimport AuthenticationService from '../common/AuthenticationService.js';\n\nclass AddProgramProduct extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            programProduct: this.props.location.state.programProduct,\n            productId: '',\n            productName: '',\n            minMonth: '',\n            maxMonth: '',\n            rows: this.props.location.state.programProduct.productList,\n            programList: [],\n            productList: []\n        }\n        // console.log(\"kam kam\", this.state.rows);\n        // console.log(\"------------in\", this.state.programProduct);\n        this.addRow = this.addRow.bind(this);\n        this.deleteLastRow = this.deleteLastRow.bind(this);\n        this.handleRemoveSpecificRow = this.handleRemoveSpecificRow.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.setTextAndValue = this.setTextAndValue.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n\n    }\n    addRow() {\n        this.state.rows.push(\n            {\n                productId: this.state.productId,\n                label:\n                {\n                    label_en: this.state.productName\n                },\n\n                minMonth: this.state.minMonth,\n                maxMonth: this.state.maxMonth\n            })\n\n        this.setState({ rows: this.state.rows })\n        this.setState({ productId: '', minMonth: '', maxMonth: '', productName: '' });\n\n    }\n    deleteLastRow() {\n        this.setState({\n            rows: this.state.rows.slice(0, -1)\n        });\n    }\n\n    handleRemoveSpecificRow(idx) {\n        const rows = [...this.state.rows]\n        rows.splice(idx, 1);\n        this.setState({ rows })\n    }\n\n    setTextAndValue = (event) => {\n\n        if (event.target.name === 'minMonth') {\n            this.setState({ minMonth: event.target.value });\n        } if (event.target.name === 'maxMonth') {\n            this.setState({ maxMonth: event.target.value });\n        } else if (event.target.name === 'productId') {\n            this.setState({ productName: event.target[event.target.selectedIndex].text });\n            this.setState({ productId: event.target.value })\n        }\n    };\n    submitForm() {\n        var programProduct = {\n            programId: this.state.programProduct.programId,\n            prodcuts: this.state.rows\n        }\n\n        AuthenticationService.setupAxiosInterceptors();\n        console.log(\"------------------programProdcut\",programProduct);\n        ProgramService.addProgramProductMapping(programProduct)\n            .then(response => {\n                console.log(response.data);\n                if (response.status == \"200\") {\n                    console.log(response);\n                    this.props.history.push(`/program/listProgram/${response.data.message}`)\n                } else {\n                    this.setState({\n                        message: response.data.message\n                    })\n                }\n\n            }).catch(\n                error => {\n                    switch (error.message) {\n                        case \"Network Error\":\n                            this.setState({\n                                message: error.message\n                            })\n                            break\n                        default:\n                            this.setState({\n                                message: error.response.data.message\n                            })\n                            break\n                    }\n                }\n            );\n\n\n\n    }\n    componentDidMount() {\n        AuthenticationService.setupAxiosInterceptors();\n        ProgramService.getProgramListForDropDown().then(response => {\n            console.log(response.data);\n            if (response.status == \"200\") {\n                this.setState({\n                    programList: response.data\n                });\n            } else {\n                this.setState({\n                    message: response.data.message\n                })\n            }\n\n        }).catch(\n            error => {\n                switch (error.message) {\n                    case \"Network Error\":\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                    default:\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                }\n            }\n        );\n        ProductService.getProductList().then(response => {\n            console.log(response.data.data);\n            if (response.status == \"200\") {\n                this.setState({\n                    productList: response.data.data\n                });\n            } else {\n                this.setState({\n                    message: response.data.message\n                })\n            }\n\n        }).catch(\n            error => {\n                switch (error.message) {\n                    case \"Network Error\":\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                    default:\n                        this.setState({\n                            message: error.message\n                        })\n                        break\n                }\n            }\n        );\n\n\n    }\n    render() {\n        const { programList } = this.state;\n        const { productList } = this.state;\n        let programs = programList.length > 0 && programList.map((item, i) => {\n            return (\n                <option key={i} value={item.programId}>\n                    {item.label.label_en}\n                </option>\n            )\n        }, this);\n        let products = productList.length > 0 && productList.map((item, i) => {\n            return (\n                <option key={i} value={item.productId}>\n                    {item.label.label_en}\n                </option>\n            )\n        }, this);\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col sm={12} md={10} style={{ flexBasis: 'auto' }}>\n                        <Card>\n                            <CardHeader>\n                                <strong>Add Program Product</strong>\n                            </CardHeader>\n                            <CardBody>\n                                <FormGroup>\n                                    <Label htmlFor=\"select\">Select Program</Label>\n                                    <Input type=\"select\" value={this.state.programProduct.programId} name=\"programId\" id=\"programId\" disabled>\n                                        {/* <option value=\"0\">Please select</option>\n                                        <option value=\"1\">Program #1</option>\n                                        <option value=\"2\">Program #2</option>\n                                        <option value=\"3\">Program #3</option> */}\n                                        {programs}\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"select\">Select Product</Label>\n                                    <Input type=\"select\" name=\"productId\" id=\"select\" value={this.state.productId} onChange={event => this.setTextAndValue(event)}>\n\n                                        <option value=\"\">Please select</option>\n                                        {/*<option value=\"1\">product #1</option>\n                                        <option value=\"2\">product #2</option>\n                                        <option value=\"3\">product #3</option> */}\n                                        {products}\n                                    </Input>\n\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"company\">Min Month Stock</Label>\n                                    <Input type=\"number\" min='0' name=\"minMonth\" id=\"minMonth\" value={this.state.minMonth} placeholder=\"Enter min month stock\" onChange={event => this.setTextAndValue(event)} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"company\">Max Month Stock</Label>\n                                    <Input type=\"number\" min=\"0\" name=\"maxMonth\" id=\"maxMonth\" value={this.state.maxMonth} placeholder=\"Enter max month stock\" onChange={event => this.setTextAndValue(event)} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Button type=\"button\" size=\"sm\" color=\"danger\" onClick={this.deleteLastRow} className=\"float-right mr-1\" ><i className=\"fa fa-times\"></i> Delete Last Row</Button>\n                                    <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={this.addRow} className=\"float-right mr-1\" ><i className=\"fa fa-check\"></i>Add</Button>\n                                    &nbsp;\n\n                        </FormGroup>\n                                <Table responsive>\n\n                                    <thead>\n                                        <tr>\n\n                                            <th className=\"text-left\"> Program </th>\n                                            <th className=\"text-left\"> Product</th>\n                                            <th className=\"text-left\"> Min Month Stock </th>\n                                            <th className=\"text-left\">Max Month Stock</th>\n                                            <th className=\"text-left\">Delete Row</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.rows.map((item, idx) => (\n                                                <tr id=\"addr0\" key={idx}>\n                                                    <td>\n                                                        {this.state.programProduct.label.label_en}\n                                                    </td>\n                                                    <td>\n                                                        {this.state.rows[idx].label.label_en}\n                                                    </td>\n                                                    <td>\n\n                                                        {this.state.rows[idx].minMonth}\n                                                    </td>\n                                                    <td>\n                                                        {this.state.rows[idx].maxMonth}\n                                                    </td>\n                                                    <td>\n                                                        <DeleteSpecificRow handleRemoveSpecificRow={this.handleRemoveSpecificRow} rowId={idx} />\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n\n                                </Table>\n                            </CardBody>\n                            <CardFooter>\n                                <FormGroup>\n                                    <Button type=\"button\" size=\"sm\" color=\"danger\" className=\"float-right mr-1\" onClick={this.cancelClicked}><i className=\"fa fa-times\"></i> Cancel</Button>\n                                    <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={this.submitForm} className=\"float-right mr-1\" ><i className=\"fa fa-check\"></i>Submit</Button>\n                                    &nbsp;\n                                </FormGroup>\n\n                            </CardFooter>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n\n        );\n    }\n    cancelClicked() {\n        this.props.history.push(`/program/listProgram/` + \"Action Canceled\")\n    }\n\n}\n\nexport default AddProgramProduct;"]},"metadata":{},"sourceType":"module"}