name: Continuous Integration Pipeline

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.xml'
      - '**.sql'
      - '**.csv'
      - '**.zip'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'

env:
  NODE_VERSION: '16'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run tests with coverage
        run: |
          mkdir -p coverage
          mkdir -p coverage/.tmp
          npm run test:coverage
          echo "Test coverage complete, checking files:"
          ls -la
          echo "Coverage directory contents:"
          ls -la coverage/ || echo "Coverage directory empty or not found"
      
      - name: Setup Code Climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run Code Climate Analysis
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          COVERAGE_FILE=$(find . -type f -name "lcov.info" -not -path "./node_modules/*" 2>/dev/null || echo "")
          if [ -n "$COVERAGE_FILE" ]; then
            echo "Found coverage file at: $COVERAGE_FILE"
            ./cc-test-reporter format-coverage "$COVERAGE_FILE" --input-type lcov
            ./cc-test-reporter upload-coverage
          else
            echo "Error: lcov.info not found in project directory (excluding node_modules)"
            echo "Current directory structure:"
            ls -R
            exit 1
          fi